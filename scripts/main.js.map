{
  "version": 3,
  "sources": ["../node_modules/module-api/foundry/document.js", "../node_modules/module-api/utils/array.js", "../node_modules/module-api/utils/object.js", "../node_modules/module-api/utils/string.js", "../node_modules/module-api/foundry/flags.js", "../node_modules/module-api/foundry/handlebars.js", "../node_modules/module-api/foundry/item.js", "../node_modules/module-api/foundry/libwrapper.js", "../node_modules/module-api/foundry/localize.js", "../node_modules/module-api/foundry/module.js", "../node_modules/module-api/foundry/notifications.js", "../node_modules/module-api/foundry/settings.js", "../node_modules/remeda/dist/es/purry.js", "../node_modules/remeda/dist/es/_reduceLazy.js", "../node_modules/remeda/dist/es/uniq.js", "../node_modules/module-api/pf2e/misc.js", "../node_modules/module-api/pf2e/chat.js", "../node_modules/module-api/pf2e/dc.js", "../node_modules/module-api/pf2e/spell.js", "../node_modules/module-api/pf2e/identify.js", "../node_modules/module-api/pf2e/item.js", "../node_modules/module-api/pf2e/predicate.js", "../node_modules/module-api/pf2e/spell-consumables.js", "../src/data/spell.js", "../src/data/ace.js", "../src/data/blade.js", "../src/data/ceremonial.js", "../src/data/chain.js", "../src/data/flexibility.js", "../src/data/language.js", "../src/data/skill.js", "../src/data/longevity.js", "../src/data/mind.js", "../src/data/rations.js", "../src/data/resistance.js", "../src/data/root.js", "../src/data/staves.js", "../src/spellcasting.js", "../src/data/savant.js", "../src/data/spellshaping.js", "../src/data/tome.js", "../src/dailies.js", "../src/data/familiar.js", "../src/apps/interface/data.js", "../src/apps/interface/shared.js", "../src/apps/interface/drop.js", "../src/apps/interface/process.js", "../src/apps/interface.js", "../src/api.js", "../src/actor.js", "../src/data/feat.js", "../src/apps/custom/flexibility.js", "../src/apps/custom/mind.js", "../src/apps/custom/savant.js", "../src/apps/custom/tome.js", "../src/apps/custom.js", "../src/chat.js", "../src/rest.js", "../src/main.js"],
  "sourcesContent": ["import { MODULE, socketEmit } from \".\";\n\n/**\n * @param {object} doc\n * @param {string[]} path\n * @returns {unknown}\n */\nexport function getInMemory(doc, ...path) {\n\treturn getProperty(doc, `modules.${MODULE.id}.${path.join(\".\")}`);\n}\n\n/**\n * @param {object} doc\n * @param  {(string|unknown)[]} args\n * @returns {Boolean}\n */\nexport function setInMemory(doc, ...args) {\n\tconst value = args.splice(-1)[0];\n\treturn setProperty(doc, `modules.${MODULE.id}.${args.join(\".\")}`, value);\n}\n\n/**\n * @param {object} doc\n * @param  {(string|unknown)[]} args\n * @returns {unknown}\n */\nexport function getInMemoryAndSetIfNot(doc, ...args) {\n\tconst value = args.splice(-1)[0];\n\tconst current = getInMemory(doc, ...args);\n\tif (current != null) return current;\n\tconst result = typeof value === \"function\" ? value() : value;\n\tsetInMemory(doc, ...args, result);\n\treturn result;\n}\n\n/**\n * @param {object} doc\n * @param {string[]} path\n * @returns {boolean}\n */\nexport function deleteInMemory(doc, ...path) {\n\tconst split = [\"modules\", MODULE.id, ...path];\n\tconst last = split.pop();\n\tlet cursor = doc;\n\tfor (const key of split) {\n\t\tcursor = cursor[key];\n\t\tif (!cursor) return true;\n\t}\n\treturn delete cursor[last];\n}\n\n/**\n * @param {object} options\n * @param {FoundryDocument} options.doc\n * @param {Record<string, unknown>} [options.updates]\n * @returns {Promise<void>}\n */\nexport async function updateDocument({ doc, updates, message }, userId) {\n\tconst foundryDoc =\n\t\tdoc instanceof foundry.abstract.Document ? doc : await fromUuid(doc);\n\n\tif (!foundryDoc.isOwner) {\n\t\tsocketEmit({\n\t\t\ttype: \"permission.update-document\",\n\t\t\tdoc: foundryDoc.uuid,\n\t\t\tupdates,\n\t\t\tmessage,\n\t\t});\n\t\treturn;\n\t}\n\n\tfoundryDoc.update(updates);\n\n\tif (message) {\n\t\tmessage.user = userId ?? game.user.id;\n\t\tChatMessage.implementation.create(message);\n\t}\n}\n\n/** *\n * @param {foundry.Document} doc\n * @returns {string|undefined}\n */\nexport function getSourceId(doc) {\n\treturn doc.getFlag(\"core\", \"sourceId\");\n}\n\n/**\n * @param {foundry.Document} doc\n * @param {string|} list\n * @returns {boolean}\n */\nexport function includesSourceId(doc, list) {\n\tconst sourceId = getSourceId(doc);\n\treturn sourceId ? list.includes(sourceId) : false;\n}\n\n/**\n * @param {string|string[]} sourceId\n * @returns {(item: object) => boolean}\n */\nexport function getSourceIdCondition(sourceId) {\n\treturn Array.isArray(sourceId)\n\t\t? (item) => includesSourceId(item, sourceId)\n\t\t: (item) => getSourceId(item) === sourceId;\n}\n", "/**\n * @template T\n *\n * @param {T[]} arr\n * @param {(value: T) => unknown} fn\n * @param {string | number} [key]\n * @returns {Record<T, unknown>}\n */\n\nexport function arrayToObject(arr, fn, key) {\n\tconst obj = {};\n\tfor (const entry of arr) {\n\t\tconst k = Array.isArray(entry)\n\t\t\t? entry[key ?? 0]\n\t\t\t: typeof entry === \"object\" && key != null\n\t\t\t  ? entry[key]\n\t\t\t  : entry;\n\t\tobj[k] = fn(entry);\n\t}\n\treturn obj;\n}\n\n/**\n *\n * @param {unknown[]} arr1\n * @param {unknown[]} arr2\n * @returns {boolean}\n */\nexport function compareArrays(arr1, arr2) {\n\tif (arr1.length !== arr2.length) return false;\n\n\tconst clonedArr2 = arr2.slice();\n\n\tfor (const arr1Value of arr1) {\n\t\tconst index = clonedArr2.findIndex((arr2Value) => arr1Value === arr2Value);\n\t\tif (index === -1) return false;\n\t\tclonedArr2.splice(index, 1);\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {number | undefined} index\n * @returns {boolean}\n */\nexport function indexIsValid(index) {\n\treturn index !== undefined && index !== -1;\n}\n\n/**\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\nexport function sequenceArray(start, end) {\n\tconst levels = [];\n\n\tif (start <= end) {\n\t\tfor (let i = start; i <= end; i++) levels.push(i);\n\t} else {\n\t\tfor (let i = start; i >= end; i--) levels.push(i);\n\t}\n\n\treturn levels;\n}\n", "export const AsyncFunction = (async () => {}).constructor;\n\n/**\n * @param {object} obj\n * @param {string} name\n * @returns {boolean}\n */\nexport function isInstanceOf(obj, name) {\n\tif (typeof obj !== \"object\") return false;\n\n\tlet cursor = Reflect.getPrototypeOf(obj);\n\twhile (cursor) {\n\t\tif (cursor.constructor.name === name) return true;\n\t\tcursor = Reflect.getPrototypeOf(cursor);\n\t}\n\n\treturn false;\n}\n", "/**\n * @param {string} separator\n * @param  {(string|string[])[]} path\n * @returns {string}\n */\nexport function joinStr(separator, ...path) {\n\tconst pathArr = Array.isArray(path[0]) ? path[0] : path;\n\treturn pathArr.filter((x) => typeof x === \"string\").join(separator);\n}\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function capitalize(str) {\n\tif (!str) return \"\";\n\treturn str[0].toUpperCase() + str.slice(1);\n}\n", "import { MODULE } from \".\";\nimport { joinStr } from \"../utils\";\n\n/**\n * @param  {string[]} path\n * @returns {string}\n */\nexport function flagPath(...path) {\n\treturn `flags.${MODULE.id}.${joinStr(\".\", path)}`;\n}\n\n/**\n * @param {object} doc\n * @param  {string[]} path\n * @returns {unknown}\n */\nexport function getFlag(doc, ...path) {\n\treturn doc.getFlag(MODULE.id, path.join(\".\"));\n}\n\n/**\n * @param {object} doc\n * @param  {string[]} path\n * @returns {unknown}\n */\nexport function getFlagProperty(doc, ...path) {\n\treturn getProperty(doc, flagPath(...path));\n}\n\n/**\n * @template T\n * @param {T} doc\n * @param  {(string|unknown)[]} args\n * @returns {Promise<T>}\n */\nexport function setFlag(doc, ...args) {\n\tconst value = args.splice(-1)[0];\n\treturn doc.setFlag(MODULE.id, args.join(\".\"), value);\n}\n\n/**\n * @template T\n * @param {T} doc\n * @param {string[]} path\n * @returns {Promise<T>}\n */\nexport function unsetFlag(doc, ...path) {\n\treturn doc.unsetFlag(MODULE.id, path.join(\".\"));\n}\n\n/**\n * @param {object} doc\n * @returns {unknown}\n */\nexport function getModuleFlags(doc) {\n\treturn getProperty(doc, `flags.${MODULE.id}`);\n}\n\n/**\n * @param {object} doc\n * @param  {(string|unknown)[]} args\n * @returns {object}\n */\nexport function updateSourceFlag(doc, ...args) {\n\tconst value = args.splice(-1)[0];\n\treturn doc.updateSource({\n\t\t[flagPath(...args)]: value,\n\t});\n}\n\n/**\n * @param {object} updates\n * @param  {(string|unknown)[]} args\n */\nexport function moduleFlagUpdate(updates, ...args) {\n\tconst value = args.splice(-1)[0];\n\tupdates[flagPath(...args)] = value;\n}\n", "import { MODULE } from \".\";\nimport { joinStr } from \"../utils\";\n\n/**\n * @param  {(string|object)[]} args\n * @returns {Promise<string>}\n */\nexport function render(...args) {\n\tconst data = typeof args.at(-1) === \"object\" ? args.splice(-1)[0] : {};\n\tconst path = templatePath(...args);\n\treturn renderTemplate(path, data);\n}\n\n/**\n * @param  {string[]} path\n * @returns {string}\n */\nexport function templatePath(...path) {\n\treturn `modules/${MODULE.id}/templates/${joinStr(\"/\", path)}.hbs`;\n}\n", "import { getSourceIdCondition } from \"./document\";\n\n/**\n *\n * @param {object} actor\n * @param {string|string[]} itemTypes\n * @returns {object[]}\n */\nexport function getItems(actor, itemTypes = []) {\n\tconst types = typeof itemTypes === \"string\" ? [itemTypes] : itemTypes;\n\treturn types.length\n\t\t? types.flatMap((type) => actor.itemTypes[type])\n\t\t: actor.items;\n}\n\n/**\n * @param {object} actor\n * @param {string} sourceId\n * @param {string|string[]} itemTypes\n * @returns {boolean}\n */\nexport function hasItemWithSourceId(actor, sourceId, itemTypes) {\n\treturn getItems(actor, itemTypes).some(getSourceIdCondition(sourceId));\n}\n\n/**\n * @param {object} actor\n * @param {string} sourceId\n * @param {string|string[]} itemTypes\n * @returns {object} item\n */\nexport function getItemWithSourceId(actor, sourceId, itemTypes) {\n\treturn getItems(actor, itemTypes).find(getSourceIdCondition(sourceId));\n}\n", "import { MODULE } from \".\";\n\n/**\n * @param {string} path\n * @param {(...args: unknown[]) => unknown} callback\n * @param {\"WRAPPER\" | \"OVERRIDE\" | \"MIXED\"} type\n * @returns {string}\n */\nexport function registerWrapper(path, callback, type = \"WRAPPER\") {\n\treturn libWrapper.register(MODULE.id, path, callback, type);\n}\n\n/**\n * @param {string} id\n */\nexport function unregisterWrapper(id) {\n\tlibWrapper.unregister(MODULE.id, id);\n}\n", "import { MODULE, error, info, warn } from \".\";\nimport { joinStr } from \"../utils\";\n\n/**\n * @param {(string | object)[]} args\n * @returns {string}\n */\nexport function localize(...args) {\n\targs.unshift(MODULE.id);\n\tconst data = typeof args.at(-1) === \"object\" ? args.splice(-1)[0] : undefined;\n\treturn game.i18n[data ? \"format\" : \"localize\"](joinStr(\".\", args), data);\n}\n\n/**\n * Check if a module localization exists\n * @param {string[]} keys\n * @returns {boolean}\n */\nexport function hasLocalization(...keys) {\n\treturn game.i18n.has(`${MODULE.id}.${keys.join(\".\")}`, false);\n}\n\n/**\n * Used to localize in handlebars template\n * @param  {(string | {hash: object})[]} args\n * @returns {string}\n */\nexport function templateLocalize(...args) {\n\tconst data = args.splice(-1)[0].hash;\n\treturn localize(...args, data);\n}\n\n/**\n * @param  {string[]} path\n * @returns {string}\n */\nexport function localizePath(...path) {\n\treturn `${MODULE.id}.${path.join(\".\")}`;\n}\n\n/**\n * Convenient localization object with a sub context\n * @param {string} subKey\n * @returns {typeof localize & {path: typeof localizePath, template: typeof templateLocalize, warn: typeof warn, info: typeof info, error: typeof error, i18n: {i18n: typeof templateLocalize, i18Path: typeof localizePath}}}\n */\nexport function subLocalize(subKey) {\n\tconst fn = (...args) => localize(subKey, ...args);\n\n\tObject.defineProperties(fn, {\n\t\twarn: {\n\t\t\tvalue: (str, arg1, arg2) => warn(`${subKey}.${str}`, arg1, arg2),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\tinfo: {\n\t\t\tvalue: (str, arg1, arg2) => info(`${subKey}.${str}`, arg1, arg2),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\terror: {\n\t\t\tvalue: (str, arg1, arg2) => error(`${subKey}.${str}`, arg1, arg2),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\thas: {\n\t\t\tvalue: (key) => hasLocalization(subKey, key),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\tpath: {\n\t\t\tvalue: (key) => localizePath(subKey, key),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\ttemplate: {\n\t\t\tvalue: (key, { hash }) => fn(key, hash),\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t\ti18n: {\n\t\t\tget() {\n\t\t\t\treturn {\n\t\t\t\t\ti18n: this.template,\n\t\t\t\t\ti18Path: this.path,\n\t\t\t\t};\n\t\t\t},\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t},\n\t});\n\n\treturn fn;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns {number}\n */\nexport function localeCompare(a, b) {\n\treturn a.localeCompare(b, game.i18n.lang);\n}\n", "/**\n * @type {string}\n */\nlet MODULE_ID = null;\n\nexport const MODULE = {\n\tget id() {\n\t\tif (!MODULE_ID) {\n\t\t\tthrow new Error(\"Module id needs to be registered.\");\n\t\t}\n\t\treturn MODULE_ID;\n\t},\n\t/**\n\t * @param {string} str\n\t */\n\terror(str) {\n\t\tthrow new Error(`[${this.id}] ${str}`);\n\t},\n};\n\n/**\n * register the module id\n * @param {string} id\n */\nexport function registerModule(id) {\n\tMODULE_ID = id;\n}\n\n/**\n * @param {string} [id]\n * @returns {object}\n */\nexport function getModule(id) {\n\treturn game.modules.get(id ?? MODULE.id);\n}\n", "import { localize } from \"./localize\";\n\n/**\n * @param {string} str\n * @param {\"warning\" | \"info\" | \"error\" | object | boolean} [arg1]\n * @param {object | boolean} [arg2]\n * @param {boolean} [arg3]\n */\nfunction notify(str, arg1, arg2, arg3) {\n\tconst type = typeof arg1 === \"string\" ? arg1 : \"info\";\n\tconst data =\n\t\ttypeof arg1 === \"object\"\n\t\t\t? arg1\n\t\t\t: typeof arg2 === \"object\"\n\t\t\t  ? arg2\n\t\t\t  : undefined;\n\tconst permanent =\n\t\ttypeof arg1 === \"boolean\"\n\t\t\t? arg1\n\t\t\t: typeof arg2 === \"boolean\"\n\t\t\t  ? arg2\n\t\t\t  : arg3 ?? false;\n\n\tui.notifications.notify(localize(str, data), type, { permanent });\n}\n\n/**\n * @typedef { (str: string, arg1?: object | boolean, arg2?: boolean) => void } Notify\n */\n\n/**\n * @type {Notify}\n */\nexport function warn(str, arg1, arg2) {\n\tnotify(str, \"warning\", arg1, arg2);\n}\n\n/**\n * @type {Notify}\n */\nexport function info(str, arg1, arg2) {\n\tnotify(str, \"info\", arg1, arg2);\n}\n\n/**\n * @type {Notify}\n */\nexport function error(str, arg1, arg2) {\n\tnotify(str, \"error\", arg1, arg2);\n}\n", "import { MODULE } from \".\";\nimport { arrayToObject } from \"../utils/array\";\n\n/**\n * @template {number | boolean | string} T\n * @param { {key: string, type: new (...args: unknkown[]) => T, default: T, [k: string]: unknown }} options\n */\nexport function registerSetting(options) {\n\toptions.key ??= options.name;\n\n\tif (Array.isArray(options.choices)) {\n\t\toptions.choices = arrayToObject(options.choices, (choice) =>\n\t\t\tsettingPath(options.key, `choices.${choice}`),\n\t\t);\n\t}\n\n\toptions.name ??= settingPath(options.key, \"name\");\n\toptions.hint ??= settingPath(options.key, \"hint\");\n\toptions.scope ??= \"world\";\n\toptions.config ??= true;\n\n\tgame.settings.register(MODULE.id, options.key, options);\n}\n\nexport function registerSettingMenu(options) {\n\toptions.key ??= options.name;\n\n\toptions.name = settingPath(\"menus\", options.key, \"name\");\n\toptions.label = settingPath(\"menus\", options.key, \"label\");\n\toptions.hint = settingPath(\"menus\", options.key, \"hint\");\n\toptions.restricted ??= true;\n\toptions.icon ??= \"fas fa-cogs\";\n\n\tgame.settings.registerMenu(MODULE.id, options.key, options);\n}\n\n/**\n * @param {string[]} path\n * @returns\n */\nexport function settingPath(...path) {\n\treturn `${MODULE.id}.settings.${path.join(\".\")}`;\n}\n\n/**\n * @param {string} setting\n * @returns {unknown}\n */\nexport function getSetting(setting) {\n\treturn game.settings.get(MODULE.id, setting);\n}\n\n/**\n * @param {string} setting\n * @returns {boolean}\n */\nexport function isChoiceSetting(setting) {\n\treturn !!game.settings.settings.get(`${MODULE.id}.${setting}`)?.choices;\n}\n\n/**\n * @template T\n * @param {string} setting\n * @param {T} value\n * @returns {Promise<T>}\n */\nexport function setSetting(setting, value) {\n\treturn game.settings.set(MODULE.id, setting, value);\n}\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nexport function purry(fn, args, lazy) {\n    var diff = fn.length - args.length;\n    var arrayArgs = Array.from(args);\n    if (diff === 0) {\n        return fn.apply(void 0, arrayArgs);\n    }\n    if (diff === 1) {\n        var ret = function (data) { return fn.apply(void 0, __spreadArray([data], arrayArgs, false)); };\n        if (lazy || fn.lazy) {\n            ret.lazy = lazy || fn.lazy;\n            ret.lazyArgs = args;\n        }\n        return ret;\n    }\n    throw new Error('Wrong number of arguments');\n}\n", "export function _reduceLazy(array, lazy, indexed) {\n    var newArray = [];\n    for (var index = 0; index < array.length; index++) {\n        var item = array[index];\n        var result = indexed ? lazy(item, index, array) : lazy(item);\n        if (result.hasMany === true) {\n            newArray.push.apply(newArray, result.next);\n        }\n        else if (result.hasNext) {\n            newArray.push(result.next);\n        }\n    }\n    return newArray;\n}\n", "import { purry } from './purry';\nimport { _reduceLazy } from './_reduceLazy';\nexport function uniq() {\n    return purry(_uniq, arguments, uniq.lazy);\n}\nfunction _uniq(array) {\n    return _reduceLazy(array, uniq.lazy());\n}\n(function (uniq) {\n    function lazy() {\n        var set = new Set();\n        return function (value) {\n            if (set.has(value)) {\n                return {\n                    done: false,\n                    hasNext: false,\n                };\n            }\n            set.add(value);\n            return {\n                done: false,\n                hasNext: true,\n                next: value,\n            };\n        };\n    }\n    uniq.lazy = lazy;\n})(uniq || (uniq = {}));\n", "/**\n * @param {number} value\n * @returns {string}\n */\nexport function ordinalString(value) {\n\tconst pluralRules = new Intl.PluralRules(game.i18n.lang, { type: \"ordinal\" });\n\tconst suffix = game.i18n.localize(\n\t\t`PF2E.OrdinalSuffixes.${pluralRules.select(value)}`,\n\t);\n\treturn game.i18n.format(\"PF2E.OrdinalNumber\", { value, suffix });\n}\n\n/**\n * @param {string} message\n * @returns {Error}\n */\nexport function ErrorPF2e(message) {\n\treturn Error(`PF2e System | ${message}`);\n}\n\n/**\n * @type {Intl.NumberFormat}\n */\nlet intlNumberFormat;\n/**\n * @param {number} value\n * @param {object} [options]\n * @param {boolean} [options.emptyStringZero]\n * @param {boolean} [options.zeroIsNegative]\n * @returns {string}\n */\nexport function signedInteger(\n\tvalue,\n\t{ emptyStringZero = false, zeroIsNegative = false } = {},\n) {\n\tif (value === 0 && emptyStringZero) return \"\";\n\n\tintlNumberFormat ??= new Intl.NumberFormat(game.i18n.lang, {\n\t\tmaximumFractionDigits: 0,\n\t\tsignDisplay: \"always\",\n\t});\n\n\tconst maybeNegativeZero = zeroIsNegative && value === 0 ? -0 : value;\n\n\treturn intlNumberFormat.format(maybeNegativeZero);\n}\n\n/**\n * @param {object} obj\n * @param {unknown} key\n * @returns {boolean}\n */\nexport function objectHasKey(obj, key) {\n\treturn (typeof key === \"string\" || typeof key === \"number\") && key in obj;\n}\n\n/**\n * @param {string} prefix\n * @returns {(...args: (string|Record<string, unknown>)[]) => string}\n */\nexport function localizer(prefix) {\n\treturn (...[suffix, formatArgs]) =>\n\t\tformatArgs\n\t\t\t? game.i18n.format(`${prefix}.${suffix}`, formatArgs)\n\t\t\t: game.i18n.localize(`${prefix}.${suffix}`);\n}\n\nconst actionGlyphMap = {\n\t0: \"F\",\n\tfree: \"F\",\n\t1: \"A\",\n\t2: \"D\",\n\t3: \"T\",\n\t\"1 or 2\": \"A/D\",\n\t\"1 to 3\": \"A - T\",\n\t\"2 or 3\": \"D/T\",\n\treaction: \"R\",\n};\n\n/**\n * @param {typeof actionGlyphMap} action\n * @returns {string}\n */\nexport function getActionGlyph(action) {\n\tif (!action && action !== 0) return \"\";\n\n\tconst value =\n\t\ttypeof action !== \"object\"\n\t\t\t? action\n\t\t\t: action.type === \"action\"\n\t\t\t  ? action.value\n\t\t\t  : action.type;\n\tconst sanitized = String(value ?? \"\")\n\t\t.toLowerCase()\n\t\t.trim();\n\n\treturn actionGlyphMap[sanitized]?.replace(\"-\", \"\u2013\") ?? \"\";\n}\n\nconst actionImgMap = {\n\t0: \"systems/pf2e/icons/actions/FreeAction.webp\",\n\tfree: \"systems/pf2e/icons/actions/FreeAction.webp\",\n\t1: \"systems/pf2e/icons/actions/OneAction.webp\",\n\t2: \"systems/pf2e/icons/actions/TwoActions.webp\",\n\t3: \"systems/pf2e/icons/actions/ThreeActions.webp\",\n\t\"1 or 2\": \"systems/pf2e/icons/actions/OneTwoActions.webp\",\n\t\"1 to 3\": \"systems/pf2e/icons/actions/OneThreeActions.webp\",\n\t\"2 or 3\": \"systems/pf2e/icons/actions/TwoThreeActions.webp\",\n\treaction: \"systems/pf2e/icons/actions/Reaction.webp\",\n\tpassive: \"systems/pf2e/icons/actions/Passive.webp\",\n};\n\n/**\n *\n * @param {string | {type: string, value: 1|2|3|null} | null} action\n * @param {string} [fallback]\n * @returns {string|null}\n */\nexport function getActionIcon(\n\taction,\n\tfallback = \"systems/pf2e/icons/actions/Empty.webp\",\n) {\n\tif (action === null) return actionImgMap.passive;\n\tconst value =\n\t\ttypeof action !== \"object\"\n\t\t\t? action\n\t\t\t: action.type === \"action\"\n\t\t\t  ? action.value\n\t\t\t  : action.type;\n\tconst sanitized = String(value ?? \"\")\n\t\t.toLowerCase()\n\t\t.trim();\n\treturn actionImgMap[sanitized] ?? fallback;\n}\n\n/**\n * @param {string} text\n * @param {object} [options]\n * @param {boolean|null} [options.camel]\n * @returns {string}\n */\nexport function sluggify(text, options) {\n\treturn game.pf2e.system.sluggify(text, options);\n}\n\n/**\n * @template T\n * @param {Set<T>} set\n * @param {T} value\n * @returns {boolean}\n */\nexport function setHasElement(set, value) {\n\treturn set.has(value);\n}\n\n/**\n * @template T\n * @param {[T, T]} array\n * @param {T} value\n * @returns {boolean}\n */\nexport function tupleHasValue(array, value) {\n\treturn array.includes(value);\n}\n\n/**\n * @param {unknown} value\n * @returns {boolean}\n */\nexport function isObject(value) {\n\treturn typeof value === \"object\" && value !== null;\n}\n", "import { getHighestName } from \"../foundry\";\nimport { isInstanceOf } from \"../utils\";\nimport { applyStackingRules } from \"./actor\";\nimport { htmlQuery } from \"./html\";\nimport { ErrorPF2e, getActionGlyph, signedInteger } from \"./misc\";\nimport {\n\textractDamageDice,\n\textractEphemeralEffects,\n\textractModifiers,\n} from \"./rules\";\nimport { traitSlugToObject } from \"./tags\";\n\n/**\n * @typedef {(message: object, tokens: object[], rollIndex: number) => void} OnDamageApplied\n *\n * @param {object} options\n * @param {object} options.message\n * @param {number} options.multiplier\n * @param {number} options.addend\n * @param {boolean} options.promptModifier\n * @param {number} options.rollIndex\n * @param {object[]} [options.tokens]\n * @param {OnDamageApplied} [options.onDamageApplied]\n */\nexport async function applyDamageFromMessage({\n\tmessage,\n\tmultiplier = 1,\n\taddend = 0,\n\tpromptModifier = false,\n\trollIndex = 0,\n\t// added\n\ttokens,\n\tonDamageApplied,\n}) {\n\tif (promptModifier) {\n\t\treturn shiftAdjustDamage({\n\t\t\tmessage,\n\t\t\tmultiplier,\n\t\t\trollIndex,\n\t\t\t// added\n\t\t\ttokens,\n\t\t\tonDamageApplied,\n\t\t});\n\t}\n\n\t// changed\n\ttokens ??= (() => {\n\t\tconst html = htmlQuery(\n\t\t\tui.chat.element[0],\n\t\t\t`li.chat-message[data-message-id=\"${message.id}\"]`,\n\t\t);\n\t\treturn html?.dataset.actorIsTarget && message.token\n\t\t\t? [message.token]\n\t\t\t: game.user.getActiveTokens();\n\t})();\n\tif (tokens.length === 0) {\n\t\tui.notifications.error(\"PF2E.ErrorMessage.NoTokenSelected\", {\n\t\t\tlocalize: true,\n\t\t});\n\t\treturn;\n\t}\n\n\tconst shieldBlockRequest = CONFIG.PF2E.chatDamageButtonShieldToggle;\n\tconst roll = message.rolls.at(rollIndex);\n\tif (!isInstanceOf(roll, \"DamageRoll\"))\n\t\tthrow ErrorPF2e(\"Unexpected error retrieving damage roll\");\n\n\tlet damage =\n\t\tmultiplier < 0\n\t\t\t? multiplier * roll.total + addend\n\t\t\t: roll.alter(multiplier, addend);\n\n\t// Get origin roll options and apply damage to a contextual clone: this may influence condition IWR, for example\n\tconst messageRollOptions = [...(message.flags.pf2e.context?.options ?? [])];\n\tconst originRollOptions = messageRollOptions\n\t\t.filter((o) => o.startsWith(\"self:\"))\n\t\t.map((o) => o.replace(/^self/, \"origin\"));\n\tconst messageItem = message.item;\n\tconst effectRollOptions = messageItem?.isOfType(\n\t\t\"affliction\",\n\t\t\"condition\",\n\t\t\"effect\",\n\t)\n\t\t? messageItem.getRollOptions(\"item\")\n\t\t: [];\n\n\tfor (const token of tokens) {\n\t\tif (!token.actor) continue;\n\n\t\t// If no target was acquired during a roll, set roll options for it during damage application\n\t\tif (!messageRollOptions.some((o) => o.startsWith(\"target\"))) {\n\t\t\tmessageRollOptions.push(...token.actor.getSelfRollOptions(\"target\"));\n\t\t}\n\t\tconst domain = multiplier > 0 ? \"damage-received\" : \"healing-received\";\n\t\tconst ephemeralEffects =\n\t\t\tmultiplier > 0\n\t\t\t\t? await extractEphemeralEffects({\n\t\t\t\t\t\taffects: \"target\",\n\t\t\t\t\t\torigin: message.actor,\n\t\t\t\t\t\ttarget: token.actor,\n\t\t\t\t\t\titem: message.item,\n\t\t\t\t\t\tdomains: [domain],\n\t\t\t\t\t\toptions: messageRollOptions,\n\t\t\t\t  })\n\t\t\t\t: [];\n\t\tconst contextClone = token.actor.getContextualClone(\n\t\t\toriginRollOptions,\n\t\t\tephemeralEffects,\n\t\t);\n\t\tconst applicationRollOptions = new Set([\n\t\t\t...messageRollOptions.filter((o) => !/^(?:self|target):/.test(o)),\n\t\t\t...effectRollOptions,\n\t\t\t...originRollOptions,\n\t\t\t...contextClone.getSelfRollOptions(),\n\t\t]);\n\n\t\t// Target-specific damage/healing adjustments\n\t\tconst outcome = message.flags.pf2e.context?.outcome;\n\t\tconst breakdown = [];\n\t\tconst rolls = [];\n\t\tif (typeof damage === \"number\" && damage < 0) {\n\t\t\tconst critical = outcome === \"criticalSuccess\";\n\n\t\t\tconst resolvables = (() => {\n\t\t\t\tif (messageItem?.isOfType(\"spell\")) return { spell: messageItem };\n\t\t\t\tif (messageItem?.isOfType(\"weapon\")) return { weapon: messageItem };\n\t\t\t\treturn {};\n\t\t\t})();\n\n\t\t\tconst damageDice = extractDamageDice(contextClone.synthetics.damageDice, {\n\t\t\t\tselectors: [domain],\n\t\t\t\tresolvables,\n\t\t\t\ttest: applicationRollOptions,\n\t\t\t}).filter(\n\t\t\t\t(d) =>\n\t\t\t\t\t(d.critical === null || d.critical === critical) &&\n\t\t\t\t\td.predicate.test(applicationRollOptions),\n\t\t\t);\n\n\t\t\tfor (const dice of damageDice) {\n\t\t\t\tconst formula = `${dice.diceNumber}${dice.dieSize}[${dice.label}]`;\n\t\t\t\tconst roll = await new Roll(formula).evaluate({ async: true });\n\t\t\t\troll._formula = `${dice.diceNumber}${dice.dieSize}`; // remove the label from the main formula\n\t\t\t\tawait roll.toMessage({\n\t\t\t\t\tflags: { pf2e: { suppressDamageButtons: true } },\n\t\t\t\t\tflavor: dice.label,\n\t\t\t\t\tspeaker: ChatMessage.getSpeaker({ token }),\n\t\t\t\t});\n\t\t\t\tbreakdown.push(`${dice.label} ${dice.diceNumber}${dice.dieSize}`);\n\t\t\t\trolls.push(roll);\n\t\t\t}\n\t\t\tif (rolls.length) {\n\t\t\t\tdamage -= rolls\n\t\t\t\t\t.map((roll) => roll.total)\n\t\t\t\t\t.reduce((previous, current) => previous + current);\n\t\t\t}\n\n\t\t\tconst modifiers = extractModifiers(contextClone.synthetics, [domain], {\n\t\t\t\tresolvables,\n\t\t\t}).filter(\n\t\t\t\t(m) =>\n\t\t\t\t\t(m.critical === null || m.critical === critical) &&\n\t\t\t\t\tm.predicate.test(applicationRollOptions),\n\t\t\t);\n\n\t\t\t// unlikely to have any typed modifiers, but apply stacking rules just in case even though the context of\n\t\t\t// previously applied modifiers has been lost\n\t\t\tdamage -= applyStackingRules(modifiers ?? []);\n\n\t\t\t// target-specific modifiers breakdown\n\t\t\tbreakdown.push(\n\t\t\t\t...modifiers\n\t\t\t\t\t.filter((m) => m.enabled)\n\t\t\t\t\t.map((m) => `${m.label} ${signedInteger(m.modifier)}`),\n\t\t\t);\n\t\t}\n\n\t\tawait contextClone.applyDamage({\n\t\t\tdamage,\n\t\t\ttoken,\n\t\t\titem: message.item,\n\t\t\tskipIWR: multiplier <= 0,\n\t\t\trollOptions: applicationRollOptions,\n\t\t\tshieldBlockRequest,\n\t\t\tbreakdown,\n\t\t\toutcome,\n\t\t});\n\t}\n\ttoggleOffShieldBlock(message.id);\n\n\t// added\n\tonDamageApplied?.(message, tokens, rollIndex);\n}\n\n/**\n * @param {object} target\n * @param {HTMLElement} shieldButton\n * @param {HTMLElement} messageEl\n */\nexport function onClickShieldBlock(target, shieldButton, messageEl) {\n\t// changed\n\tconst getTokens = () => {\n\t\treturn [target];\n\t};\n\tconst getNonBrokenShields = (tokens) => {\n\t\tconst actor = tokens[0]?.actor;\n\t\treturn (\n\t\t\tactor?.itemTypes.shield.filter(\n\t\t\t\t(s) => s.isEquipped && !s.isBroken && !s.isDestroyed,\n\t\t\t) ?? []\n\t\t);\n\t};\n\n\t// Add a tooltipster instance to the shield button if needed.\n\tif (!shieldButton.classList.contains(\"tooltipstered\")) {\n\t\t$(shieldButton)\n\t\t\t.tooltipster({\n\t\t\t\tanimation: \"fade\",\n\t\t\t\ttrigger: \"click\",\n\t\t\t\tarrow: false,\n\t\t\t\tcontent: htmlQuery(messageEl, \"div.hover-content\"),\n\t\t\t\tcontentAsHTML: true,\n\t\t\t\tcontentCloning: true,\n\t\t\t\tdebug: false,\n\t\t\t\tinteractive: true,\n\t\t\t\tside: [\"top\"],\n\t\t\t\ttheme: \"crb-hover\",\n\t\t\t\tfunctionBefore: () => {\n\t\t\t\t\tconst tokens = getTokens();\n\t\t\t\t\tif (!tokens.length) return false;\n\n\t\t\t\t\tconst nonBrokenShields = getNonBrokenShields(tokens);\n\t\t\t\t\tconst hasMultipleShields =\n\t\t\t\t\t\ttokens.length === 1 && nonBrokenShields.length > 1;\n\t\t\t\t\tconst shieldActivated =\n\t\t\t\t\t\tshieldButton.classList.contains(\"shield-activated\");\n\n\t\t\t\t\t// More than one shield and no selection. Show tooltip.\n\t\t\t\t\tif (hasMultipleShields && !shieldActivated) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// More than one shield and one was previously selected. Remove selection and show tooltip.\n\t\t\t\t\tif (hasMultipleShields && shieldButton.dataset.shieldId) {\n\t\t\t\t\t\tshieldButton.attributes.removeNamedItem(\"data-shield-id\");\n\t\t\t\t\t\tshieldButton.classList.remove(\"shield-activated\");\n\t\t\t\t\t\tCONFIG.PF2E.chatDamageButtonShieldToggle = false;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Normal toggle behaviour. Tooltip is suppressed.\n\t\t\t\t\tshieldButton.classList.toggle(\"shield-activated\");\n\t\t\t\t\tCONFIG.PF2E.chatDamageButtonShieldToggle =\n\t\t\t\t\t\t!CONFIG.PF2E.chatDamageButtonShieldToggle;\n\t\t\t\t\treturn false;\n\t\t\t\t},\n\t\t\t\tfunctionFormat: (instance, _helper, contentEl) => {\n\t\t\t\t\tconst tokens = getTokens();\n\t\t\t\t\tconst nonBrokenShields = getNonBrokenShields(tokens);\n\t\t\t\t\tconst multipleShields =\n\t\t\t\t\t\ttokens.length === 1 && nonBrokenShields.length > 1;\n\t\t\t\t\tconst shieldActivated =\n\t\t\t\t\t\tshieldButton.classList.contains(\"shield-activated\");\n\n\t\t\t\t\t// If the actor is wielding more than one shield, have the user pick which shield to use for blocking.\n\t\t\t\t\tif (multipleShields && !shieldActivated) {\n\t\t\t\t\t\t// Populate the list with the shield options\n\t\t\t\t\t\tconst listEl = htmlQuery(contentEl, \"ul.shield-options\");\n\t\t\t\t\t\tif (!listEl) return $(contentEl);\n\n\t\t\t\t\t\tconst shieldList = nonBrokenShields.map((shield) => {\n\t\t\t\t\t\t\tconst input = document.createElement(\"input\");\n\t\t\t\t\t\t\tinput.classList.add(\"data\");\n\t\t\t\t\t\t\tinput.type = \"radio\";\n\t\t\t\t\t\t\tinput.name = \"shield-id\";\n\t\t\t\t\t\t\tinput.value = shield.id;\n\t\t\t\t\t\t\tinput.addEventListener(\"click\", () => {\n\t\t\t\t\t\t\t\tshieldButton.dataset.shieldId = input.value;\n\t\t\t\t\t\t\t\tshieldButton.classList.add(\"shield-activated\");\n\t\t\t\t\t\t\t\tCONFIG.PF2E.chatDamageButtonShieldToggle = true;\n\t\t\t\t\t\t\t\tinstance.close();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst shieldName = document.createElement(\"span\");\n\t\t\t\t\t\t\tshieldName.classList.add(\"label\");\n\t\t\t\t\t\t\tshieldName.innerHTML = shield.name;\n\n\t\t\t\t\t\t\tconst hardness = document.createElement(\"span\");\n\t\t\t\t\t\t\thardness.classList.add(\"tag\");\n\t\t\t\t\t\t\tconst hardnessLabel = game.i18n.localize(\"PF2E.HardnessLabel\");\n\t\t\t\t\t\t\thardness.innerHTML = `${hardnessLabel}: ${shield.hardness}`;\n\n\t\t\t\t\t\t\tconst itemLi = document.createElement(\"li\");\n\t\t\t\t\t\t\titemLi.classList.add(\"item\");\n\t\t\t\t\t\t\titemLi.append(input, shieldName, hardness);\n\n\t\t\t\t\t\t\treturn itemLi;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tlistEl.replaceChildren(...shieldList);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn $(contentEl);\n\t\t\t\t},\n\t\t\t})\n\t\t\t.tooltipster(\"open\");\n\t}\n}\n\n/**\n * adapted to toggle multiple buttons\n * @param {string} messageId\n */\nexport function toggleOffShieldBlock(messageId) {\n\tfor (const app of [\"#chat-log\", \"#chat-popout\"]) {\n\t\tconst selector = `${app} > li.chat-message[data-message-id=\"${messageId}\"] button[data-action$=shield-block]`;\n\t\tfor (const button of document.body.querySelectorAll(selector)) {\n\t\t\tbutton?.classList.remove(\"shield-activated\");\n\t\t}\n\t}\n\tCONFIG.PF2E.chatDamageButtonShieldToggle = false;\n}\n\n/**\n * @param {object} options\n * @param {object} options.message\n * @param {number} options.multiplier\n * @param {number} options.rollIndex\n * @param {object[]} [options.tokens]\n * @param {OnDamageApplied} [options.onDamageApplied]\n */\nasync function shiftAdjustDamage({\n\tmessage,\n\tmultiplier,\n\trollIndex,\n\t// added\n\ttokens,\n\tonDamageApplied,\n}) {\n\tconst content = await renderTemplate(\n\t\t\"systems/pf2e/templates/chat/damage/adjustment-dialog.hbs\",\n\t);\n\tconst AdjustmentDialog = class extends Dialog {\n\t\tactivateListeners($html) {\n\t\t\tsuper.activateListeners($html);\n\t\t\t$html[0].querySelector(\"input\")?.focus();\n\t\t}\n\t};\n\tconst isHealing = multiplier < 0;\n\tnew AdjustmentDialog({\n\t\ttitle: game.i18n.localize(\n\t\t\tisHealing\n\t\t\t\t? \"PF2E.UI.shiftModifyHealingTitle\"\n\t\t\t\t: \"PF2E.UI.shiftModifyDamageTitle\",\n\t\t),\n\t\tcontent,\n\t\tbuttons: {\n\t\t\tok: {\n\t\t\t\tlabel: game.i18n.localize(\"PF2E.OK\"),\n\t\t\t\tcallback: async ($dialog) => {\n\t\t\t\t\t// In case of healing, multipler will have negative sign. The user will expect that positive\n\t\t\t\t\t// modifier would increase healing value, while negative would decrease.\n\t\t\t\t\tconst adjustment =\n\t\t\t\t\t\t(Number($dialog[0].querySelector(\"input\")?.value) || 0) *\n\t\t\t\t\t\tMath.sign(multiplier);\n\t\t\t\t\tapplyDamageFromMessage({\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tmultiplier,\n\t\t\t\t\t\taddend: adjustment,\n\t\t\t\t\t\tpromptModifier: false,\n\t\t\t\t\t\trollIndex,\n\t\t\t\t\t\t// added\n\t\t\t\t\t\ttokens,\n\t\t\t\t\t\tonDamageApplied,\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t},\n\t\t\tcancel: {\n\t\t\t\tlabel: \"Cancel\",\n\t\t\t},\n\t\t},\n\t\tdefault: \"ok\",\n\t\tclose: () => {\n\t\t\ttoggleOffShieldBlock(message.id);\n\t\t},\n\t}).render(true);\n}\n\n/**\n * @param {Item} item\n * @param {string} rollMode\n * @returns {ChatMessage}\n */\nexport async function createSelfEffectMessage(item, rollMode = \"roll\") {\n\tif (!item.system.selfEffect) {\n\t\tthrow ErrorPF2e(\n\t\t\t[\n\t\t\t\t\"Only actions with self-applied effects can be passed to `ActorPF2e#useAction`.\",\n\t\t\t\t\"Support will be expanded at a later time.\",\n\t\t\t].join(\" \"),\n\t\t);\n\t}\n\n\tconst { actor, actionCost } = item;\n\tconst token = actor.getActiveTokens(true, true).shift() ?? null;\n\n\tconst ChatMessagePF2e = ChatMessage.implementation;\n\tconst speaker = ChatMessagePF2e.getSpeaker({ actor, token });\n\tconst flavor = await renderTemplate(\n\t\t\"systems/pf2e/templates/chat/action/flavor.hbs\",\n\t\t{\n\t\t\taction: { title: item.name, glyph: getActionGlyph(actionCost) },\n\t\t\titem,\n\t\t\ttraits: item.system.traits.value.map((t) =>\n\t\t\t\ttraitSlugToObject(t, CONFIG.PF2E.actionTraits),\n\t\t\t),\n\t\t},\n\t);\n\n\t// Get a preview slice of the message\n\tconst previewLength = 100;\n\tconst descriptionPreview = (() => {\n\t\tif (item.actor.pack) return null;\n\t\tconst tempDiv = document.createElement(\"div\");\n\t\tconst documentTypes = [...CONST.DOCUMENT_LINK_TYPES, \"Compendium\", \"UUID\"];\n\t\tconst linkPattern = new RegExp(\n\t\t\t`@(${documentTypes.join(\n\t\t\t\t\"|\",\n\t\t\t)})\\\\[([^#\\\\]]+)(?:#([^\\\\]]+))?](?:{([^}]+)})?`,\n\t\t\t\"g\",\n\t\t);\n\t\ttempDiv.innerHTML = item.description.replace(\n\t\t\tlinkPattern,\n\t\t\t(_match, ...args) => args[3],\n\t\t);\n\n\t\treturn tempDiv.innerText.slice(0, previewLength);\n\t})();\n\tconst description = {\n\t\tfull:\n\t\t\tdescriptionPreview && descriptionPreview.length < previewLength\n\t\t\t\t? item.description\n\t\t\t\t: null,\n\t\tpreview: descriptionPreview,\n\t};\n\tconst content = await renderTemplate(\n\t\t\"systems/pf2e/templates/chat/action/self-effect.hbs\",\n\t\t{\n\t\t\tactor: item.actor,\n\t\t\tdescription,\n\t\t},\n\t);\n\tconst flags = { pf2e: { context: { type: \"self-effect\", item: item.id } } };\n\tconst messageData = ChatMessagePF2e.applyRollMode(\n\t\t{ speaker, flavor, content, flags },\n\t\trollMode,\n\t);\n\n\treturn ChatMessagePF2e.create(messageData);\n}\n\n/**\n * @param {string} subtitle\n * @returns {Promise<string>}\n */\nexport function createManipulateFlavor(subtitle) {\n\treturn renderTemplate(\"systems/pf2e/templates/chat/action/flavor.hbs\", {\n\t\taction: {\n\t\t\ttitle: \"PF2E.Actions.Interact.Title\",\n\t\t\tsubtitle: subtitle,\n\t\t\tglyph: getActionGlyph(1),\n\t\t},\n\t\ttraits: [\n\t\t\t{\n\t\t\t\tname: \"manipulate\",\n\t\t\t\tlabel: CONFIG.PF2E.featTraits.manipulate,\n\t\t\t\tdescription: CONFIG.PF2E.traitsDescriptions.manipulate,\n\t\t\t},\n\t\t],\n\t});\n}\n\n/**\n * @param {string} message\n * @param {string} img\n * @returns {Promise<string>}\n */\nexport function createTradeContent(message, img) {\n\treturn renderTemplate(\"systems/pf2e/templates/chat/action/content.hbs\", {\n\t\timgPath: img,\n\t\tmessage: message.replace(/\\b1 \u00D7 /, \"\"),\n\t});\n}\n\n/**\n * @param {foundry.Document|string} docOrUuid\n * @param {object} [options]\n * @param {boolean} [options.async]\n * @param {boolean} [options.label]\n * @returns {Promise<string>}\n */\nexport function createFancyLink(docOrUuid, { async = true, label } = {}) {\n\tlet link =\n\t\tdocOrUuid instanceof foundry.abstract.Document\n\t\t\t? docOrUuid.link\n\t\t\t: `@UUID[${docOrUuid}]`;\n\tif (label) {\n\t\tlink = link.replace(/\\{.+?\\}$/, \"\");\n\t\tlink = `${link}{${label}}`;\n\t}\n\treturn TextEditor.enrichHTML(link, { async });\n}\n\n/**\n *\n * @param {string} subtitle\n * @param {string} content\n * @param {Actor} actor\n * @param {string} [senderId]\n * @returns {Promise<ChatMessage>}\n */\nexport async function createManipulationMessage(\n\tsubtitle,\n\tcontent,\n\tactor,\n\tsenderId,\n) {\n\treturn ChatMessage.implementation.create({\n\t\tuser: senderId ?? game.user.id,\n\t\tspeaker: ChatMessage.getSpeaker({\n\t\t\tactor,\n\t\t\talias: getHighestName(actor),\n\t\t}),\n\t\tflavor: await createManipulateFlavor(subtitle),\n\t\tcontent: content,\n\t\ttype: CONST.CHAT_MESSAGE_TYPES.EMOTE,\n\t});\n}\n\n/**\n *\n * @param {string} subtitle\n * @param {string} message\n * @param {Actor} actor\n * @param {Item} item\n * @param {string} [senderId]\n * @returns {Promise<ChatMessage>}\n */\nexport async function createTradeMessage(\n\tsubtitle,\n\tmessage,\n\tactor,\n\titem,\n\tsenderId,\n) {\n\tconst content = await createTradeContent(message, item.img);\n\treturn createManipulationMessage(subtitle, content, actor, senderId);\n}\n", "export const adjustmentScale = [\n\t\"incredibly-easy\",\n\t\"very-easy\",\n\t\"easy\",\n\t\"normal\",\n\t\"hard\",\n\t\"very-hard\",\n\t\"incredibly-hard\",\n];\n\nexport const dcAdjustments = new Map([\n\t[\"incredibly-easy\", -10],\n\t[\"very-easy\", -5],\n\t[\"easy\", -2],\n\t[\"normal\", 0],\n\t[\"hard\", 2],\n\t[\"very-hard\", 5],\n\t[\"incredibly-hard\", 10],\n]);\n\nexport const dcByLevel = new Map([\n\t[-1, 13],\n\t[0, 14],\n\t[1, 15],\n\t[2, 16],\n\t[3, 18],\n\t[4, 19],\n\t[5, 20],\n\t[6, 22],\n\t[7, 23],\n\t[8, 24],\n\t[9, 26],\n\t[10, 27],\n\t[11, 28],\n\t[12, 30],\n\t[13, 31],\n\t[14, 32],\n\t[15, 34],\n\t[16, 35],\n\t[17, 36],\n\t[18, 38],\n\t[19, 39],\n\t[20, 40],\n\t[21, 42],\n\t[22, 44],\n\t[23, 46],\n\t[24, 48],\n\t[25, 50],\n]);\n\nexport const simpleDCs = new Map([\n\t[\"untrained\", 10],\n\t[\"trained\", 15],\n\t[\"expert\", 20],\n\t[\"master\", 30],\n\t[\"legendary\", 40],\n]);\n\nexport const simpleDCsWithoutLevel = new Map([\n\t[\"untrained\", 10],\n\t[\"trained\", 15],\n\t[\"expert\", 20],\n\t[\"master\", 25],\n\t[\"legendary\", 30],\n]);\n\n/**\n * @typedef {\"untrained\" | \"trained\" | \"expert\" | \"master\" | \"legendary\"} Rank\n */\n\n/**\n * @typedef {\"common\" | \"uncommon\" | \"rare\" | \"unique\"} Rarity\n */\n\n/**\n * @param {number} level\n * @param {object} [options]\n * @param {boolean} [options.pwol]\n * @param {Rarity} [options.rarity]\n * @returns {number}\n */\nexport function calculateDC(level, { pwol, rarity = \"common\" } = {}) {\n\tpwol ??= game.pf2e.settings.variants.pwol.enabled;\n\n\t// assume level 0 if garbage comes in. We cast level to number because the backing data may actually have it\n\t// stored as a string, which we can't catch at compile time\n\tconst dc = dcByLevel.get(level) ?? 14;\n\tif (pwol) {\n\t\t// -1 shouldn't be subtracted since it's just\n\t\t// a creature level and not related to PC levels\n\t\treturn adjustDCByRarity(dc - Math.max(level, 0), rarity);\n\t}\n\n\treturn adjustDCByRarity(dc, rarity);\n}\n\n/**\n *\n * @param {Rank} rank\n * @param {object} [options]\n * @param {boolean} [options.pwol]\n * @returns {number}\n */\nexport function calculateSimpleDC(rank, { pwol = false } = {}) {\n\tif (pwol) {\n\t\treturn simpleDCsWithoutLevel.get(rank) ?? 10;\n\t}\n\n\treturn simpleDCs.get(rank) ?? 10;\n}\n\n/**\n *\n * @param {number} spellLevel\n * @param {object} [options]\n * @param {boolean} [options.pwol]\n * @returns {number}\n */\nexport function calculateSpellDC(spellLevel, { pwol = false } = {}) {\n\treturn calculateDC(spellLevel * 2 - 1, { pwol });\n}\n\n/**\n *\n * @param {number} dc\n * @param {Rarity} rarity\n * @returns {number}\n */\nexport function adjustDCByRarity(dc, rarity = \"common\") {\n\treturn adjustDC(dc, rarityToDCAdjustment(rarity));\n}\n\n/**\n *\n * @param {number} dc\n * @param {Rarity} adjustment\n * @returns {number}\n */\nexport function adjustDC(dc, adjustment = \"normal\") {\n\treturn dc + (dcAdjustments.get(adjustment) ?? 0);\n}\n\n/**\n * @param {Rarity} rarity\n * @returns {\"hard\" | \"normal\" | \"very-hard\" | \"incredibly-hard\"}\n */\nexport function rarityToDCAdjustment(rarity = \"common\") {\n\tswitch (rarity) {\n\t\tcase \"uncommon\":\n\t\t\treturn \"hard\";\n\t\tcase \"rare\":\n\t\t\treturn \"very-hard\";\n\t\tcase \"unique\":\n\t\t\treturn \"incredibly-hard\";\n\t\tdefault:\n\t\t\treturn \"normal\";\n\t}\n}\n", "export const MAGIC_TRADITIONS = new Set([\n\t\"arcane\",\n\t\"divine\",\n\t\"occult\",\n\t\"primal\",\n]);\n\nexport const traditionSkills = {\n\tarcane: \"arcana\",\n\tdivine: \"religion\",\n\toccult: \"occultism\",\n\tprimal: \"nature\",\n};\n\n/**\n * @param {string} groupId\n * @returns {number|null}\n */\nexport function spellSlotGroupIdToNumber(groupId) {\n\tif (groupId === \"cantrips\") return 0;\n\tconst numericValue = Number(groupId ?? NaN);\n\treturn numericValue.between(0, 10) ? numericValue : null;\n}\n\n/**\n * @param {string} value\n * @returns {number|null}\n */\nexport function coerceToSpellGroupId(value) {\n\tif (value === \"cantrips\") return value;\n\tconst numericValue = Number(value) || NaN;\n\treturn numericValue.between(1, 10) ? numericValue : null;\n}\n", "import { adjustDCByRarity, calculateDC } from \"./dc\";\nimport { setHasElement } from \"./misc\";\nimport { MAGIC_TRADITIONS } from \"./spell\";\n\nexport class IdentifyItemPopup extends FormApplication {\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...FormApplication.defaultOptions,\n\t\t\tid: \"identify-item\",\n\t\t\ttitle: game.i18n.localize(\"PF2E.identification.Identify\"),\n\t\t\ttemplate: \"systems/pf2e/templates/actors/identify-item.hbs\",\n\t\t\twidth: \"auto\",\n\t\t\tclasses: [\"identify-popup\"],\n\t\t};\n\t}\n\n\tdcs = getItemIdentificationDCs(this.object, {\n\t\tpwol: game.pf2e.settings.variants.pwol.enabled,\n\t\tnotMatchingTraditionModifier: game.settings.get(\n\t\t\t\"pf2e\",\n\t\t\t\"identifyMagicNotMatchingTraditionModifier\",\n\t\t),\n\t});\n\n\tasync getData() {\n\t\tconst item = this.object;\n\t\treturn {\n\t\t\t...(await super.getData()),\n\t\t\tisMagic: item.isMagical,\n\t\t\tisAlchemical: item.isAlchemical,\n\t\t\tdcs: this.dcs,\n\t\t};\n\t}\n\n\tactivateListeners($html) {\n\t\tconst html = $html[0];\n\n\t\tconst updateButton =\n\t\t\thtml.querySelector < HTMLButtonElement > \"button.update-identification\";\n\t\tupdateButton?.addEventListener(\"click\", () => {\n\t\t\tthis.submit({ updateData: { status: updateButton.value } });\n\t\t});\n\n\t\t// Add listener on Post skill checks to chat button that posts item unidentified img and name and skill checks\n\t\thtml\n\t\t\t.querySelector(\"button.post-skill-checks\")\n\t\t\t?.addEventListener(\"click\", async () => {\n\t\t\t\tconst item = this.object;\n\t\t\t\tconst identifiedName = item.system.identification.identified.name;\n\t\t\t\tconst dcs = this.dcs;\n\t\t\t\tconst action = item.isMagical\n\t\t\t\t\t? \"identify-magic\"\n\t\t\t\t\t: item.isAlchemical\n\t\t\t\t\t  ? \"identify-alchemy\"\n\t\t\t\t\t  : \"recall-knowledge\";\n\n\t\t\t\tconst content = await renderTemplate(\n\t\t\t\t\t\"systems/pf2e/templates/actors/identify-item-chat-skill-checks.hbs\",\n\t\t\t\t\t{\n\t\t\t\t\t\tidentifiedName,\n\t\t\t\t\t\taction,\n\t\t\t\t\t\tskills: R.omit(dcs, [\"dc\"]),\n\t\t\t\t\t\tunidentified: item.system.identification.unidentified,\n\t\t\t\t\t\tuuid: item.uuid,\n\t\t\t\t\t},\n\t\t\t\t);\n\n\t\t\t\tawait ChatMessage.implementation.create({\n\t\t\t\t\tuser: game.user.id,\n\t\t\t\t\tcontent,\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tasync _updateObject(_event, formData) {\n\t\tconst status = formData.status;\n\t\tif (status === \"identified\") {\n\t\t\treturn this.object.setIdentificationStatus(status);\n\t\t}\n\t}\n}\n\nfunction getItemIdentificationDCs(\n\titem,\n\t{ pwol = false, notMatchingTraditionModifier },\n) {\n\tconst baseDC = calculateDC(item.level, { pwol });\n\tconst rarity = getDcRarity(item);\n\tconst dc = adjustDCByRarity(baseDC, rarity);\n\tif (item.isMagical) {\n\t\treturn getIdentifyMagicDCs(item, dc, notMatchingTraditionModifier);\n\t}\n\n\treturn { crafting: dc };\n}\n\n/**\n *\n * @param {Item} item\n * @returns {import('./dc').Rarity}\n */\nfunction getDcRarity(item) {\n\treturn item.traits.has(\"cursed\") ? \"unique\" : item.rarity;\n}\n\n/**\n *\n * @param {PhysicalItemPF2e} item\n * @param {number} baseDC\n * @param {number} notMatchingTraditionModifier\n * @returns {{arcana: number; nature: number; occultism: number; religion: number;}}\n */\nfunction getIdentifyMagicDCs(item, baseDC, notMatchingTraditionModifier) {\n\tconst result = {\n\t\toccult: baseDC,\n\t\tprimal: baseDC,\n\t\tdivine: baseDC,\n\t\tarcane: baseDC,\n\t};\n\tconst traditions = getMagicTraditions(item);\n\tfor (const key of MAGIC_TRADITIONS) {\n\t\t// once an item has a magic tradition, all skills\n\t\t// that don't match the tradition are hard\n\t\tif (traditions.size > 0 && !traditions.has(key)) {\n\t\t\tresult[key] = baseDC + notMatchingTraditionModifier;\n\t\t}\n\t}\n\treturn {\n\t\tarcana: result.arcane,\n\t\tnature: result.primal,\n\t\treligion: result.divine,\n\t\toccultism: result.occult,\n\t};\n}\n\n/**\n * @param {PhysicalItemPF2e} item\n * @returns {MAGIC_TRADITIONS}\n */\nfunction getMagicTraditions(item) {\n\tconst traits = item.system.traits.value;\n\treturn new Set(traits.filter((t) => setHasElement(MAGIC_TRADITIONS, t)));\n}\n", "import { createHTMLElement, htmlClosest } from \"./html\";\nimport { ErrorPF2e, localizer, setHasElement, sluggify } from \"./misc\";\nimport { eventToRollMode } from \"./scripts\";\n\nexport const HANDWRAPS_SLUG = \"handwraps-of-mighty-blows\";\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function canBeInvested(item) {\n\treturn item.traits.has(\"invested\");\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function hasWornSlot(item) {\n\treturn item.system.equipped.inSlot != null;\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nfunction isWornAs(item) {\n\treturn item.system.usage.type === \"worn\" && item.system.equipped.inSlot;\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function isInvestedOrWornAs(item) {\n\treturn item.isInvested || isWornAs(item);\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function isHeld(item) {\n\treturn item.system.usage.type === \"held\";\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function isTwoHanded(item) {\n\treturn isHeld(item) && item.system.usage.value === \"held-in-two-hands\";\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function isOneHanded(item) {\n\treturn isHeld(item) && item.system.usage.value === \"held-in-one-hand\";\n}\n\n/**\n * @tempate T\n * @param {object} item\n * @param {T} value\n * @returns {T|undefined}\n */\nfunction inSlotValue(item, value) {\n\tconst usage = item.system.usage;\n\treturn usage.type === \"worn\" && usage.where ? value : undefined;\n}\n\n/**\n * @param {object} item\n * @param {boolean} [invest]\n * @returns {boolean|undefined}\n */\nfunction toggleInvestedValue(item, invest) {\n\tconst value = invest ?? !item.system.equipped.invested;\n\treturn item.traits.has(\"invested\") ? value : undefined;\n}\n\n/**\n * @param {object} item\n * @param {object} options\n * @param {string} [options.carryType]\n * @param {number} [options.handsHeld]\n * @param {boolean} [options.inSlot]\n * @param {boolean} [options.invested]\n * @param {string|null} [options.containerId]\n * @returns {object}\n */\nexport function itemCarryUpdate(\n\titem,\n\t{ carryType = \"worn\", handsHeld = 0, inSlot, invested, containerId },\n) {\n\tconst update = {\n\t\t_id: item.id,\n\t\tsystem: {\n\t\t\tequipped: {\n\t\t\t\tcarryType: carryType,\n\t\t\t\thandsHeld: handsHeld,\n\t\t\t\tinSlot: inSlotValue(item, inSlot),\n\t\t\t\tinvested: toggleInvestedValue(item, invested),\n\t\t\t},\n\t\t},\n\t};\n\n\tif (containerId !== undefined) {\n\t\tupdate.system.containerId = containerId;\n\t}\n\n\treturn update;\n}\n\n/**\n * @param {object} item\n * @returns {boolean}\n */\nexport function isHandwrapsOfMightyBlows(item) {\n\treturn (\n\t\titem.isOfType(\"weapon\") &&\n\t\titem.slug === HANDWRAPS_SLUG &&\n\t\titem.category === \"unarmed\"\n\t);\n}\n\n/**\n * @param {Item} item\n * @param {number} [quantity]\n * @returns {Coins}\n */\nexport function calculateItemPrice(item, quantity = 1, ratio = 1) {\n\tconst coins = game.pf2e.Coins.fromPrice(item.price, quantity);\n\tif (ratio === 1) return coins;\n\treturn coins.scale(ratio);\n}\n\n/**\n * @param {Actor} target\n * @param {Item} item\n * @param {number} quantity\n * @param {string} [containerId]\n * @param {boolean} [newStack]\n * @returns {Promise<Item>}\n */\nexport async function transferItemToActor(\n\ttarget,\n\titem,\n\tquantity,\n\tcontainerId,\n\tnewStack,\n) {\n\tconst itemQuantity = Math.min(quantity, item.quantity);\n\tconst newQuantity = item.quantity - itemQuantity;\n\n\tif (newQuantity < 1) {\n\t\tawait item.delete();\n\t} else {\n\t\tawait item.update({ \"system.quantity\": newQuantity });\n\t}\n\n\tconst newItemData = item.toObject();\n\tnewItemData.system.quantity = itemQuantity;\n\tnewItemData.system.equipped.carryType = \"worn\";\n\tif (\"invested\" in newItemData.system.equipped) {\n\t\tnewItemData.system.equipped.invested = item.traits.has(\"invested\")\n\t\t\t? false\n\t\t\t: null;\n\t}\n\n\treturn target.addToInventory(newItemData, containerId, newStack);\n}\n\nexport class MoveLootPopup extends FormApplication {\n\t/**\n\t * @param {Actor} object\n\t * @param {object} options\n\t * @param {{default: number, max: number}} options.quantity\n\t * @param {boolean} options.newStack\n\t * @param {boolean} options.lockStack\n\t * @param {boolean} options.isPurchase\n\t * @param {(quantity: number, newStack: boolean) => void} callback\n\t */\n\tconstructor(object, options, callback) {\n\t\tsuper(object, options);\n\t\tthis.onSubmitCallback = callback;\n\t}\n\n\tasync getData() {\n\t\tconst [prompt, buttonLabel] = this.options.isPurchase\n\t\t\t? [\"PF2E.loot.PurchaseLootMessage\", \"PF2E.loot.PurchaseLoot\"]\n\t\t\t: [\"PF2E.loot.MoveLootMessage\", \"PF2E.loot.MoveLoot\"];\n\n\t\treturn {\n\t\t\t...(await super.getData()),\n\t\t\tquantity: {\n\t\t\t\tdefault: this.options.quantity.default,\n\t\t\t\tmax: this.options.quantity.max,\n\t\t\t},\n\t\t\tnewStack: this.options.newStack,\n\t\t\tlockStack: this.options.lockStack,\n\t\t\tprompt,\n\t\t\tbuttonLabel,\n\t\t};\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn {\n\t\t\t...FormApplication.defaultOptions,\n\t\t\tid: \"MoveLootPopup\",\n\t\t\tclasses: [],\n\t\t\ttitle: game.i18n.localize(\"PF2E.loot.MoveLootPopupTitle\"),\n\t\t\ttemplate: \"systems/pf2e/templates/popups/loot/move-loot-popup.hbs\",\n\t\t\twidth: \"auto\",\n\t\t\tquantity: {\n\t\t\t\tdefault: 1,\n\t\t\t\tmax: 1,\n\t\t\t},\n\t\t\tnewStack: false,\n\t\t\tlockStack: false,\n\t\t\tisPurchase: false,\n\t\t};\n\t}\n\n\tasync _updateObject(_event, formData) {\n\t\tthis.onSubmitCallback(formData.quantity, formData.newStack);\n\t}\n}\n\nexport async function detachSubitem(subitem, skipConfirm) {\n\tconst parentItem = subitem.parentItem;\n\tif (!parentItem) throw ErrorPF2e(\"Subitem has no parent item\");\n\n\tconst localize = localizer(\"PF2E.Item.Physical.Attach.Detach\");\n\tconst confirmed =\n\t\tskipConfirm ||\n\t\t(await Dialog.confirm({\n\t\t\ttitle: localize(\"Label\"),\n\t\t\tcontent: createHTMLElement(\"p\", {\n\t\t\t\tchildren: [localize(\"Prompt\", { attachable: subitem.name })],\n\t\t\t}).outerHTML,\n\t\t}));\n\tif (!confirmed) return;\n\n\tconst deletePromise = subitem.delete();\n\tconst createPromise = (async () => {\n\t\t// Find a stack match, cloning the subitem as worn so the search won't fail due to it being equipped\n\t\tconst stack = subitem.isOfType(\"consumable\")\n\t\t\t? parentItem.actor?.inventory.findStackableItem(\n\t\t\t\t\tsubitem.clone({ \"system.equipped.carryType\": \"worn\" }),\n\t\t\t  )\n\t\t\t: null;\n\t\tconst keepId =\n\t\t\t!!parentItem.actor && !parentItem.actor.items.has(subitem.id);\n\t\treturn (\n\t\t\tstack?.update({ \"system.quantity\": stack.quantity + 1 }) ??\n\t\t\tItem.implementation.create(\n\t\t\t\tmergeObject(subitem.toObject(), {\n\t\t\t\t\t\"system.containerId\": parentItem.system.containerId,\n\t\t\t\t}),\n\t\t\t\t{ parent: parentItem.actor, keepId },\n\t\t\t)\n\t\t);\n\t})();\n\n\tawait Promise.all([deletePromise, createPromise]);\n}\n\nexport async function unownedItemToMessage(event, item, actor, options = {}) {\n\tconst ChatMessagePF2e = ChatMessage.implementation;\n\n\t// Basic template rendering data\n\tconst type = sluggify(item.type);\n\tconst template = `systems/pf2e/templates/chat/${type}-card.hbs`;\n\tconst token = actor.token;\n\tconst nearestItem = htmlClosest(event?.target, \".item\");\n\tconst rollOptions = options.data ?? { ...(nearestItem?.dataset ?? {}) };\n\tconst templateData = {\n\t\tactor: actor,\n\t\ttokenId: token ? `${token.parent?.id}.${token.id}` : null,\n\t\titem: item,\n\t\tdata: await item.getChatData(undefined, rollOptions),\n\t};\n\n\t// Basic chat message data\n\tconst originalEvent =\n\t\tevent instanceof MouseEvent ? event : event?.originalEvent;\n\tconst rollMode = options.rollMode ?? eventToRollMode(originalEvent);\n\tconst chatData = ChatMessagePF2e.applyRollMode(\n\t\t{\n\t\t\ttype: CONST.CHAT_MESSAGE_TYPES.OTHER,\n\t\t\tspeaker: ChatMessagePF2e.getSpeaker({\n\t\t\t\tactor: this.actor,\n\t\t\t\ttoken: this.actor.getActiveTokens(false, true).at(0),\n\t\t\t}),\n\t\t\tcontent: await renderTemplate(template, templateData),\n\t\t\tflags: { pf2e: { origin: this.getOriginData() } },\n\t\t},\n\t\trollMode,\n\t);\n\n\t// Create the chat message\n\treturn options.create ?? true\n\t\t? ChatMessagePF2e.create(chatData, { rollMode, renderSheet: false })\n\t\t: new ChatMessagePF2e(chatData, { rollMode });\n}\n\n/**\n * @param {ItemOrSource} item\n * @param  {...any: string[]} types\n * @returns {boolean}\n */\nexport function itemIsOfType(item, ...types) {\n\treturn (\n\t\ttypeof item.name === \"string\" &&\n\t\ttypes.some((t) =>\n\t\t\tt === \"physical\"\n\t\t\t\t? setHasElement(PHYSICAL_ITEM_TYPES, item.type)\n\t\t\t\t: item.type === t,\n\t\t)\n\t);\n}\n", "import { isObject } from \"./misc\";\n\n/**\n * Encapsulates logic to determine if a modifier should be active or not for a specific roll based\n * on a list of string values. This will often be based on traits, but that is not required - sneak\n * attack could be an option that is not a trait.\n * @category PF2\n */\nexport class PredicatePF2e extends Array {\n\tconstructor(...statements) {\n\t\tsuper(...(Array.isArray(statements[0]) ? statements[0] : statements));\n\t\tthis.isValid = PredicatePF2e.isValid(this);\n\t\tObject.defineProperty(this, \"isValid\", { enumerable: false });\n\t}\n\n\t/** Structurally validate the predicates */\n\tstatic isValid(statements) {\n\t\treturn Array.isArray(statements);\n\t}\n\n\t/** Is this an array of predicatation statements? */\n\tstatic isArray(statements) {\n\t\treturn Array.isArray(statements) && statements.every((s) => isStatement(s));\n\t}\n\n\t/** Test if the given predicate passes for the given list of options. */\n\tstatic test(predicate = [], options = []) {\n\t\treturn predicate instanceof PredicatePF2e\n\t\t\t? predicate.test(options)\n\t\t\t: new PredicatePF2e(...predicate).test(options);\n\t}\n\n\t/** Test this predicate against a domain of discourse */\n\ttest(options) {\n\t\tif (this.length === 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (!this.isValid) {\n\t\t\tconsole.warn(\"PF2e System | The provided predicate set is malformed.\");\n\t\t\treturn false;\n\t\t}\n\n\t\tconst domain = options instanceof Set ? options : new Set(options);\n\t\treturn this.every((s) => this.#isTrue(s, domain));\n\t}\n\n\ttoObject() {\n\t\treturn deepClone([...this]);\n\t}\n\n\tclone() {\n\t\treturn new PredicatePF2e(this.toObject());\n\t}\n\n\t/** Is the provided statement true? */\n\t#isTrue(statement, domain) {\n\t\treturn (\n\t\t\t(typeof statement === \"string\" && domain.has(statement)) ||\n\t\t\t(isBinaryOp(statement) && this.#testBinaryOp(statement, domain)) ||\n\t\t\t(isCompound(statement) && this.#testCompound(statement, domain))\n\t\t);\n\t}\n\n\t#testBinaryOp(statement, domain) {\n\t\tif (\"eq\" in statement) {\n\t\t\treturn domain.has(`${statement.eq[0]}:${statement.eq[1]}`);\n\t\t}\n\n\t\tconst operator = Object.keys(statement)[0];\n\n\t\t// Allow for tests of partial statements against numeric values\n\t\t// E.g., `{ \"gt\": [\"actor:level\", 5] }` would match against \"actor:level:6\" and \"actor:level:7\"\n\t\tconst [left, right] = Object.values(statement)[0];\n\t\tconst domainArray = Array.from(domain);\n\t\tconst getValues = (operand) => {\n\t\t\tconst maybeNumber = Number(operand);\n\t\t\tif (!Number.isNaN(maybeNumber)) return [maybeNumber];\n\t\t\tconst pattern = new RegExp(String.raw`^${operand}:([^:]+)$`);\n\t\t\tconst values = domainArray\n\t\t\t\t.map((s) => Number(pattern.exec(s)?.[1] || NaN))\n\t\t\t\t.filter((v) => !Number.isNaN(v));\n\t\t\treturn values.length > 0 ? values : [NaN];\n\t\t};\n\t\tconst leftValues = getValues(left);\n\t\tconst rightValues = getValues(right);\n\n\t\tswitch (operator) {\n\t\t\tcase \"gt\":\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l > r));\n\t\t\tcase \"gte\":\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l >= r));\n\t\t\tcase \"lt\":\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l < r));\n\t\t\tcase \"lte\":\n\t\t\t\treturn leftValues.some((l) => rightValues.every((r) => l <= r));\n\t\t\tdefault:\n\t\t\t\tconsole.warn(\"PF2e System | Malformed binary operation encountered\");\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\t/** Is the provided compound statement true? */\n\t#testCompound(statement, domain) {\n\t\treturn (\n\t\t\t(\"and\" in statement &&\n\t\t\t\tstatement.and.every((subProp) => this.#isTrue(subProp, domain))) ||\n\t\t\t(\"nand\" in statement &&\n\t\t\t\t!statement.nand.every((subProp) => this.#isTrue(subProp, domain))) ||\n\t\t\t(\"or\" in statement &&\n\t\t\t\tstatement.or.some((subProp) => this.#isTrue(subProp, domain))) ||\n\t\t\t(\"xor\" in statement &&\n\t\t\t\tstatement.xor.filter((subProp) => this.#isTrue(subProp, domain))\n\t\t\t\t\t.length === 1) ||\n\t\t\t(\"nor\" in statement &&\n\t\t\t\t!statement.nor.some((subProp) => this.#isTrue(subProp, domain))) ||\n\t\t\t(\"not\" in statement && !this.#isTrue(statement.not, domain)) ||\n\t\t\t(\"if\" in statement &&\n\t\t\t\t!(\n\t\t\t\t\tthis.#isTrue(statement.if, domain) &&\n\t\t\t\t\t!this.#isTrue(statement.then, domain)\n\t\t\t\t))\n\t\t);\n\t}\n}\n\nfunction isStatement(statement) {\n\treturn statement instanceof Object\n\t\t? isCompound(statement) || isBinaryOp(statement)\n\t\t: typeof statement === \"string\"\n\t\t  ? isAtomic(statement)\n\t\t  : false;\n}\n\nfunction isAtomic(statement) {\n\treturn (\n\t\t(typeof statement === \"string\" && statement.length > 0) ||\n\t\tisBinaryOp(statement)\n\t);\n}\n\nconst binaryOperators = new Set([\"eq\", \"gt\", \"gte\", \"lt\", \"lte\"]);\n\nfunction isBinaryOp(statement) {\n\tif (!isObject(statement)) return false;\n\tconst entries = Object.entries(statement);\n\tif (entries.length > 1) return false;\n\tconst [operator, operands] = entries[0];\n\treturn (\n\t\tbinaryOperators.has(operator) &&\n\t\tArray.isArray(operands) &&\n\t\toperands.length === 2 &&\n\t\ttypeof operands[0] === \"string\" &&\n\t\t[\"string\", \"number\"].includes(typeof operands[1])\n\t);\n}\n\nfunction isCompound(statement) {\n\treturn (\n\t\tisObject(statement) &&\n\t\t(isAnd(statement) ||\n\t\t\tisOr(statement) ||\n\t\t\tisNand(statement) ||\n\t\t\tisXor(statement) ||\n\t\t\tisNor(statement) ||\n\t\t\tisNot(statement) ||\n\t\t\tisIf(statement))\n\t);\n}\n\nfunction isAnd(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\tArray.isArray(statement.and) &&\n\t\tstatement.and.every((subProp) => isStatement(subProp))\n\t);\n}\n\nfunction isNand(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\tArray.isArray(statement.nand) &&\n\t\tstatement.nand.every((subProp) => isStatement(subProp))\n\t);\n}\n\nfunction isOr(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\tArray.isArray(statement.or) &&\n\t\tstatement.or.every((subProp) => isStatement(subProp))\n\t);\n}\n\nfunction isXor(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\tArray.isArray(statement.xor) &&\n\t\tstatement.xor.every((subProp) => isStatement(subProp))\n\t);\n}\n\nfunction isNor(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\tArray.isArray(statement.nor) &&\n\t\tstatement.nor.every((subProp) => isStatement(subProp))\n\t);\n}\n\nfunction isNot(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 1 &&\n\t\t!!statement.not &&\n\t\tisStatement(statement.not)\n\t);\n}\n\nfunction isIf(statement) {\n\treturn (\n\t\tObject.keys(statement).length === 2 &&\n\t\tisStatement(statement.if) &&\n\t\tisStatement(statement.then)\n\t);\n}\n", "import * as R from \"remeda\";\nimport { calculateDC } from \"./dc\";\nimport { ErrorPF2e, setHasElement } from \"./misc\";\nimport { MAGIC_TRADITIONS, traditionSkills } from \"./spell\";\nimport { isInstanceOf } from \"../utils\";\n\n/**\n * @typedef {\"scroll\" | \"wand\" | \"cantripDeck5\"} SpellConsumableItemType\n */\n\nconst CANTRIP_DECK_ID = \"tLa4bewBhyqzi6Ow\";\n\nconst scrollCompendiumIds = {\n\t1: \"RjuupS9xyXDLgyIr\",\n\t2: \"Y7UD64foDbDMV9sx\",\n\t3: \"ZmefGBXGJF3CFDbn\",\n\t4: \"QSQZJ5BC3DeHv153\",\n\t5: \"tjLvRWklAylFhBHQ\",\n\t6: \"4sGIy77COooxhQuC\",\n\t7: \"fomEZZ4MxVVK3uVu\",\n\t8: \"iPki3yuoucnj7bIt\",\n\t9: \"cFHomF3tty8Wi1e5\",\n\t10: \"o1XIHJ4MJyroAHfF\",\n};\n\nconst SPELL_CONSUMABLE_ITEM_TYPE = new Set([\"cantripDeck5\", \"scroll\", \"wand\"]);\nconst SPELL_CONSUMABLE_NAME_TEMPLATES = {\n\tcantripDeck5: \"PF2E.Item.Physical.FromSpell.CantripDeck5\",\n\tscroll: \"PF2E.Item.Physical.FromSpell.Scroll\",\n\twand: \"PF2E.Item.Physical.FromSpell.Wand\",\n};\n\nconst wandCompendiumIds = {\n\t1: \"UJWiN0K3jqVjxvKk\",\n\t2: \"vJZ49cgi8szuQXAD\",\n\t3: \"wrDmWkGxmwzYtfiA\",\n\t4: \"Sn7v9SsbEDMUIwrO\",\n\t5: \"5BF7zMnrPYzyigCs\",\n\t6: \"kiXh4SUWKr166ZeM\",\n\t7: \"nmXPj9zuMRQBNT60\",\n\t8: \"Qs8RgNH6thRPv2jt\",\n\t9: \"Fgv722039TVM5JTc\",\n};\n\n/**\n * @param {Item} item\n * @param {object} [options]\n * @param {boolean} [options.pwol]\n * @returns {number}\n */\nexport function calculateTrickMagicItemCheckDC(\n\titem,\n\toptions = { pwol: false },\n) {\n\tconst level = Number(item.level);\n\tconst saveDC = calculateDC(level, options);\n\n\tconst traditions = item.system.spell?.system.traits.traditions ?? [];\n\tconst skills = [...item.system.traits.value, ...traditions]\n\t\t.filter((t) => setHasElement(MAGIC_TRADITIONS, t))\n\t\t.map((tradition) => [traditionSkills[tradition], saveDC]);\n\n\treturn Object.fromEntries(skills);\n}\n\n/**\n * @param {SpellPF2e} spell\n * @param {object} options\n * @param {SpellConsumableItemType} options.type\n * @param {number} [options.heightenedLevel]\n * @param {boolean} [options.mystified]\n * @param {boolean} [options.temp]\n * @param {string} [options.itemImg]\n * @param {string} [options.itemName]\n * @returns {Promise<ConsumableSource>}\n */\nexport async function createConsumableFromSpell(\n\tspell,\n\t{\n\t\ttype,\n\t\theightenedLevel = spell.baseRank,\n\t\tmystified = false,\n\t\ttemp = false,\n\t\titemImg,\n\t\titemName = type,\n\t},\n) {\n\tconst pack = game.packs.find((p) => p.collection === \"pf2e.equipment-srd\");\n\tconst itemId = getIdForSpellConsumable(type, heightenedLevel);\n\tconst consumable = await pack?.getDocument(itemId ?? \"\");\n\tif (!isInstanceOf(consumable, \"ConsumablePF2e\")) {\n\t\tthrow ErrorPF2e(\"Failed to retrieve consumable item\");\n\t}\n\n\tconst consumableSource = { ...consumable.toObject(), _id: null }; // Clear _id\n\n\tconst { traits } = consumableSource.system;\n\ttraits.value = R.uniq([...traits.value, ...spell.traits]);\n\ttraits.rarity = spell.rarity;\n\tif (\n\t\ttraits.value.includes(\"magical\") &&\n\t\ttraits.value.some((t) => setHasElement(MAGIC_TRADITIONS, t))\n\t) {\n\t\ttraits.value.splice(traits.value.indexOf(\"magical\"), 1);\n\t}\n\ttraits.value.sort();\n\n\tconsumableSource.name = getNameForSpellConsumable(\n\t\titemName,\n\t\tspell.name,\n\t\theightenedLevel,\n\t);\n\tconst description = consumableSource.system.description.value;\n\n\tconsumableSource.system.description.value = (() => {\n\t\tconst paragraphElement = document.createElement(\"p\");\n\t\tparagraphElement.append(\n\t\t\tspell.sourceId\n\t\t\t\t? `@UUID[${spell.sourceId}]{${spell.name}}`\n\t\t\t\t: spell.description,\n\t\t);\n\n\t\tconst containerElement = document.createElement(\"div\");\n\t\tconst hrElement = document.createElement(\"hr\");\n\t\tcontainerElement.append(paragraphElement, hrElement);\n\t\thrElement.insertAdjacentHTML(\"afterend\", description);\n\n\t\treturn containerElement.innerHTML;\n\t})();\n\n\t// Cantrip deck casts at level 1\n\tif (type !== \"cantripDeck5\") {\n\t\tconsumableSource.system.spell = spell\n\t\t\t.clone(\n\t\t\t\t{\n\t\t\t\t\t_id: randomID(),\n\t\t\t\t\t\"system.location.heightenedLevel\": heightenedLevel,\n\t\t\t\t},\n\t\t\t\t{ keepId: true },\n\t\t\t)\n\t\t\t.toObject();\n\t}\n\n\tif (mystified) {\n\t\tconsumableSource.system.identification.status = \"unidentified\";\n\t}\n\n\tif (typeof itemImg === \"string\") {\n\t\tconsumableSource.img = itemImg;\n\t}\n\n\tif (temp) {\n\t\tconsumableSource.system.temporary = true;\n\t}\n\n\treturn consumableSource;\n}\n\n/**\n *\n * @param {SpellConsumableItemType} type\n * @param {number} heightenedLevel\n * @returns {string | null}\n */\nexport function getIdForSpellConsumable(type, heightenedLevel) {\n\tswitch (type) {\n\t\tcase \"cantripDeck5\":\n\t\t\treturn CANTRIP_DECK_ID;\n\t\tcase \"scroll\":\n\t\t\treturn scrollCompendiumIds[heightenedLevel] ?? null;\n\t\tdefault:\n\t\t\treturn wandCompendiumIds[heightenedLevel] ?? null;\n\t}\n}\n\n/**\n *\n * @param {SpellConsumableItemType} type\n * @param {string} spellName\n * @param {number} heightenedLevel\n * @returns {string}\n */\nexport function getNameForSpellConsumable(type, spellName, heightenedLevel) {\n\tconst templateId =\n\t\tSPELL_CONSUMABLE_NAME_TEMPLATES[type] ||\n\t\t`${type} of {name} (Level {level})`;\n\treturn game.i18n.format(templateId, {\n\t\tname: spellName,\n\t\tlevel: heightenedLevel,\n\t});\n}\n", "export function createSpellDaily(key, uuid, filter, level, label) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [\n\t\t\t{\n\t\t\t\ttype: \"drop\",\n\t\t\t\tslug: \"spell\",\n\t\t\t\tfilter: {\n\t\t\t\t\ttype: \"spell\",\n\t\t\t\t\tsearch: filter ?? {},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tprocess: async ({ addSpell, utils, fields, messages }) => {\n\t\t\tconst uuid = fields.spell.uuid;\n\t\t\tconst source = await utils.createSpellSource(uuid);\n\t\t\tconst spellLevel = level ?? source.system.level.value;\n\t\t\tconst label = `${source.name} (Level ${spellLevel})`;\n\t\t\taddSpell(source, level);\n\t\t\tmessages.add(\"spells\", { uuid, label });\n\t\t},\n\t};\n\treturn daily;\n}\n", "import { localizePath } from \"module-api\";\nimport { createSpellDaily } from \"./spell\";\n\nexport function tricksterAce() {\n\tconst daily = createSpellDaily(\n\t\t\"ace\",\n\t\t\"Compendium.pf2e.feats-srd.Item.POrE3ZgBRdBL9MsW\",\n\t\t{\n\t\t\tcategory: [],\n\t\t\tlevel: 4,\n\t\t},\n\t\t4,\n\t);\n\n\tconst row = daily.rows[0];\n\trow.filter.drop = (item) => {\n\t\tconst castTime = item.system.time.value;\n\t\tif (\n\t\t\tcastTime.includes(\"hour\") ||\n\t\t\t(castTime.includes(\"min\") && parseInt(castTime) > 10)\n\t\t) {\n\t\t\treturn {\n\t\t\t\terror: localizePath(\"interface.error.drop.wrongSpellTime\"),\n\t\t\t\tdata: { time: \"10 min\" },\n\t\t\t};\n\t\t}\n\t\treturn true;\n\t};\n\n\treturn daily;\n}\n", "import { localize } from \"module-api\";\n\nexport const bladeAlly = {\n\tkey: \"blade\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.EtltLdiy9kNfHU0c\", // Blade Ally\n\t},\n\tchildren: [\n\t\t{\n\t\t\tslug: \"good\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.nxZYP3KGfTSkaW6J\", // The Tenets of Good\n\t\t},\n\t\t{\n\t\t\tslug: \"evil\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.JiY2ZB4FkK8RJm4T\", // The Tenets of Evil\n\t\t},\n\t\t{\n\t\t\tslug: \"liberator\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.FCoMFUsth4xB4veC\", // Liberator\n\t\t},\n\t\t{\n\t\t\tslug: \"paladin\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.peEXunfbSD8WcMFk\", // Paladin\n\t\t},\n\t\t{\n\t\t\tslug: \"antipaladin\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.EQ6DVIQHAUXUhY6Y\", // Antipaladin\n\t\t},\n\t\t{\n\t\t\tslug: \"tyrant\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.HiIvez0TqESbleB5\", // Tyrant\n\t\t},\n\t\t{\n\t\t\tslug: \"spirit\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.h5ksUZlrVGBjq6p4\", // Radiant Blade Spirit\n\t\t},\n\t\t{\n\t\t\tslug: \"master\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.jYEMVfrXJLpXS6aC\", // Radiant Blade Master\n\t\t},\n\t],\n\trows: [\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"weapon\",\n\t\t\tlabel: () => localize(\"label.blade.weapon\"),\n\t\t\toptions: ({ actor }) => {\n\t\t\t\treturn actor.itemTypes.weapon\n\t\t\t\t\t.filter((weapon) => !weapon.isAlchemical)\n\t\t\t\t\t.map((weapon) => ({ value: weapon.id, label: weapon.name }));\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"rune\",\n\t\t\tlabel: () => localize(\"label.blade.rune\"),\n\t\t\toptions: ({ children }) => {\n\t\t\t\tconst runes = [\"returning\", \"shifting\"];\n\n\t\t\t\tconst {\n\t\t\t\t\tantipaladin,\n\t\t\t\t\tevil,\n\t\t\t\t\tgood,\n\t\t\t\t\tliberator,\n\t\t\t\t\tmaster,\n\t\t\t\t\tpaladin,\n\t\t\t\t\tspirit,\n\t\t\t\t\ttyrant,\n\t\t\t\t} = children;\n\n\t\t\t\tif (spirit) {\n\t\t\t\t\trunes.push(\"flaming\");\n\t\t\t\t\tif (good) runes.push(\"holy\");\n\t\t\t\t\tif (evil) runes.push(\"unholy\");\n\t\t\t\t\tif (liberator || antipaladin) runes.push(\"anarchic\");\n\t\t\t\t\tif (paladin || tyrant) runes.push(\"axiomatic\");\n\t\t\t\t}\n\n\t\t\t\tif (good) runes.push(\"disrupting\", \"ghost-touch\");\n\t\t\t\tif (master) runes.push(\"greater-disrupting\", \"keen\");\n\t\t\t\tif (evil) runes.push(\"fearsome\");\n\n\t\t\t\treturn runes.map((value) => ({\n\t\t\t\t\tvalue,\n\t\t\t\t\tlabel: localizeRune(value),\n\t\t\t\t}));\n\t\t\t},\n\t\t\tcondition: ({ actor }) =>\n\t\t\t\tactor.itemTypes.weapon.filter((weapon) => !weapon.isAlchemical).length,\n\t\t},\n\t],\n\tprocess: async ({ actor, fields, addRule, messages }) => {\n\t\tconst weaponId = fields.weapon.value;\n\t\tconst rune = fields.rune.value;\n\n\t\tconst weapon = actor.items.get(weaponId);\n\t\tif (!weapon) return;\n\n\t\taddRule(\n\t\t\t{\n\t\t\t\tdefinition: [`item:id:${weaponId}`],\n\t\t\t\tkey: \"AdjustStrike\",\n\t\t\t\tmode: \"add\",\n\t\t\t\tproperty: \"property-runes\",\n\t\t\t\tvalue: rune,\n\t\t\t},\n\t\t\tweapon,\n\t\t);\n\n\t\taddRule(\n\t\t\t{\n\t\t\t\tkey: \"CriticalSpecialization\",\n\t\t\t\tpredicate: [\n\t\t\t\t\t{\n\t\t\t\t\t\tor: [`item:category:${weapon.category}`, `item:id:${weaponId}`],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\tweapon,\n\t\t);\n\n\t\tconst name =\n\t\t\tweapon.name !== weapon._source.name\n\t\t\t\t? `... ${weapon._source.name}`\n\t\t\t\t: weapon.name;\n\n\t\tmessages.addGroup(\"blade\");\n\t\tmessages.add(\"blade\", {\n\t\t\tuuid: weapon.uuid,\n\t\t\tlabel: name,\n\t\t\tselected: localizeRune(rune),\n\t\t});\n\t},\n};\n\nfunction localizeRune(value) {\n\tconst slugged = value.replace(/-\\w/, (match) => match[1].toUpperCase());\n\treturn game.i18n.localize(`PF2E.WeaponPropertyRune.${slugged}.Name`);\n}\n", "const ICON = \"systems/pf2e/icons/equipment/weapons/wish-knife.webp\";\n\nexport const ceremonialKnife = {\n\tkey: \"ceremonial\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.78pkCdFaY8hI07Lj\",\n\t\tcondition: ({ actor }) =>\n\t\t\tactor.itemTypes.weapon.some((weapon) => weapon.group === \"knife\"),\n\t},\n\trows: [\n\t\t{\n\t\t\ttype: \"drop\",\n\t\t\tslug: \"spell\",\n\t\t\tlabel: ({ utils, actor }) => utils.spellRankLabel(calculateRank(actor)),\n\t\t\tfilter: {\n\t\t\t\ttype: \"spell\",\n\t\t\t\tsearch: ({ actor }) => ({\n\t\t\t\t\tcategory: [\"spell\"],\n\t\t\t\t\tlevel: calculateRank(actor),\n\t\t\t\t}),\n\t\t\t},\n\t\t},\n\t],\n\tprocess: async ({ actor, fields, utils, item, addItem, messages }) => {\n\t\tconst uuid = fields.spell.uuid;\n\t\tconst level = calculateRank(actor);\n\t\tconst source = await utils.createWandSource({\n\t\t\tuuid,\n\t\t\tlevel,\n\t\t\titemName: item.name,\n\t\t\titemImg: ICON,\n\t\t});\n\n\t\taddItem(source);\n\n\t\tmessages.addGroup(\"ceremonial\");\n\t\tmessages.add(\"ceremonial\", { uuid, label: source.name });\n\t},\n};\n\nfunction calculateRank(actor) {\n\treturn Math.ceil((actor.level - 5) / 2);\n}\n", "const rows = [\n\t\"first\",\n\t\"second\",\n\t\"third\",\n\t\"fourth\",\n\t\"fifth\",\n\t\"sixth\",\n\t\"seventh\",\n];\n\nexport function createScrollChain(key, uuids, label) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid: uuids[0],\n\t\t},\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tslug: \"expert\",\n\t\t\t\tuuid: uuids[1],\n\t\t\t},\n\t\t\t{\n\t\t\t\tslug: \"master\",\n\t\t\t\tuuid: uuids[2],\n\t\t\t},\n\t\t],\n\t\trows: [\n\t\t\tcreateRow(\"first\", 1),\n\t\t\tcreateRow(\"second\", 2, 8),\n\t\t\tcreateRow(\"third\", 3, undefined, \"expert\"),\n\t\t\tcreateRow(\"fourth\", 4, 14, \"expert\"),\n\t\t\tcreateRow(\"fifth\", 5, 16, \"expert\"),\n\t\t\tcreateRow(\"sixth\", 6, undefined, \"master\"),\n\t\t\tcreateRow(\"seventh\", 7, 20, \"master\"),\n\t\t],\n\t\tprocess: async ({ utils, fields, addItem, messages }) => {\n\t\t\tfor (const field of Object.values(fields)) {\n\t\t\t\tconst uuid = field.uuid;\n\t\t\t\tconst level = rows.indexOf(field.row) + 1;\n\t\t\t\tconst source = await utils.createSpellScrollSource({ uuid, level });\n\t\t\t\taddItem(source);\n\t\t\t\tmessages.add(\"scrolls\", { uuid, label: source.name });\n\t\t\t}\n\t\t},\n\t};\n\treturn daily;\n}\n\nfunction createRow(slug, level, minActorLevel, child) {\n\tconst row = {\n\t\ttype: \"drop\",\n\t\tslug,\n\t\tlabel: ({ utils }) => utils.spellRankLabel(level),\n\t\tfilter: {\n\t\t\ttype: \"spell\",\n\t\t\tsearch: {\n\t\t\t\tcategory: [\"spell\"],\n\t\t\t\tlevel,\n\t\t\t},\n\t\t},\n\t};\n\tif (minActorLevel)\n\t\trow.condition = ({ actor }) => actor.level >= minActorLevel;\n\tif (child) row.childPredicate = [child];\n\treturn row;\n}\n", "export const combatFlexibility = {\n\tkey: \"flexibility\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8\", // Combat Flexibility\n\t},\n\tchildren: [\n\t\t{\n\t\t\tslug: \"improved\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX\", // Improved Flexibility\n\t\t},\n\t],\n\trows: [\n\t\tcreateRow(\"flexibility\", 8), //\n\t\tcreateRow(\"improved\", 14, \"improved\"),\n\t],\n\tprocess: async ({ utils, fields, addFeat, messages, children }) => {\n\t\tconst uuid = fields.flexibility.uuid;\n\t\tconst source = await utils.createFeatSource(uuid);\n\t\taddFeat(source);\n\t\tmessages.add(\"feats\", { uuid });\n\n\t\tif (children.improved) {\n\t\t\tconst uuid = fields.improved.uuid;\n\t\t\tconst source = await utils.createFeatSource(uuid);\n\t\t\taddFeat(source, children.improved);\n\t\t\tmessages.add(\"feats\", { uuid });\n\t\t}\n\t},\n};\n\nfunction createRow(slug, level, child) {\n\tconst row = {\n\t\ttype: \"drop\",\n\t\tlabel: `PF2E.Level${level}`,\n\t\tslug,\n\t\tfilter: {\n\t\t\ttype: \"feat\",\n\t\t\tsearch: {\n\t\t\t\tcategory: [\"class\"],\n\t\t\t\ttraits: [\"fighter\"],\n\t\t\t\tlevel,\n\t\t\t},\n\t\t},\n\t};\n\tif (child) row.childPredicate = [child];\n\treturn row;\n}\n", "export function createLanguageDaily(key, uuid, label) {\n\treturn {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [\n\t\t\t{\n\t\t\t\ttype: \"select\",\n\t\t\t\tslug: \"language\",\n\t\t\t\toptions: ({ actor, utils }) => {\n\t\t\t\t\tconst actorLanguages = actor.system.details.languages.value;\n\t\t\t\t\treturn utils.languageNames\n\t\t\t\t\t\t.filter((x) => !actorLanguages.includes(x))\n\t\t\t\t\t\t.sort();\n\t\t\t\t},\n\t\t\t\tlabelizer: ({ utils }) => utils.languageLabel,\n\t\t\t},\n\t\t],\n\t\tprocess: ({ addRule, utils, fields, messages }) => {\n\t\t\tconst value = fields.language.value;\n\t\t\tconst source = utils.createLanguageRuleElement({ language: value });\n\t\t\taddRule(source);\n\t\t\tmessages.add(\"languages\", {\n\t\t\t\tuuid,\n\t\t\t\tselected: utils.languageLabel(value),\n\t\t\t\tlabel,\n\t\t\t});\n\t\t},\n\t};\n}\n", "export function createTrainedSkillDaily(key, uuid, label) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [createComboSkillRow(\"skill\", 0)],\n\t\tprocess: (api) => {\n\t\t\tprocessComboSkill(api, { uuid, label });\n\t\t},\n\t};\n\treturn daily;\n}\n\nexport function processComboSkill(\n\t{ fields, addItem, addRule, utils, messages, removeRule },\n\t{ field = \"skill\", uuid, label, rank = 1, parent },\n) {\n\tremoveRule(\n\t\t(rule) =>\n\t\t\trule.key === \"ActiveEffectLike\" &&\n\t\t\trule.mode === \"upgrade\" &&\n\t\t\trule.phase === \"beforeDerived\" &&\n\t\t\trule.path?.startsWith(\"system.skills.\"),\n\t\tparent,\n\t);\n\n\tremoveRule(\n\t\t(rule) =>\n\t\t\trule.key === \"RollOption\" &&\n\t\t\trule.toggleable &&\n\t\t\trule.alwaysActive &&\n\t\t\trule.phase === \"beforeDerived\" &&\n\t\t\trule.suboptions.some((suboption) => suboption.label === \"PF2E.SkillAcr\"),\n\t\tparent,\n\t);\n\n\tlet value = fields[field].value;\n\n\tif (fields[field].input === \"true\") {\n\t\tconst source = utils.createLoreSource({ name: value, rank });\n\t\taddItem(source);\n\t} else {\n\t\tconst source = utils.createSkillRuleElement({ skill: value, value: rank });\n\t\tvalue = utils.skillLabel(value);\n\t\taddRule(source, parent);\n\t}\n\n\tmessages.add(\"skills\", { uuid, selected: value, label });\n}\n\nexport function createComboSkillRow(slug, rank, extras = {}) {\n\treturn {\n\t\ttype: \"combo\",\n\t\tslug,\n\t\toptions: ({ actor, utils }) => {\n\t\t\tconst actorSkills = actor.skills;\n\t\t\treturn utils.skillNames.filter((x) => actorSkills[x].rank === rank);\n\t\t},\n\t\tlabelizer: ({ utils }) => utils.skillLabel,\n\t\t...extras,\n\t};\n}\n\nexport function createTrainedLoreDaily(key, uuid, label) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [\n\t\t\t{\n\t\t\t\ttype: \"input\",\n\t\t\t\tslug: \"skill\",\n\t\t\t},\n\t\t],\n\t\tprocess: ({ addItem, utils, fields, messages }) => {\n\t\t\tconst value = fields.skill.value;\n\t\t\tconst source = utils.createLoreSource({ name: value, rank: 1 });\n\t\t\taddItem(source);\n\t\t\tmessages.add(\"skills\", { uuid, selected: value, label });\n\t\t},\n\t};\n\treturn daily;\n}\n", "import { createComboSkillRow, processComboSkill } from \"./skill\";\n\nexport const longevities = {\n\tkey: \"longevities\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.WoLh16gyDp8y9WOZ\", // Ancestral Longevity\n\t},\n\tchildren: [\n\t\t{\n\t\t\tslug: \"expert\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.vfuHVSuExvtyajkW\", // Expert Longevity\n\t\t},\n\t],\n\trows: [\n\t\tcreateComboSkillRow(\"ancestral\", 0, {\n\t\t\tlabel: ({ item }) => item.name,\n\t\t}),\n\t\tcreateComboSkillRow(\"expert\", 1, {\n\t\t\tlabel: ({ children }) => children.expert?.name,\n\t\t\tchildPredicate: [\"expert\"],\n\t\t}),\n\t],\n\tprocess: async (api) => {\n\t\tconst feats = [\n\t\t\t{ field: \"ancestral\", rank: 1, item: api.item },\n\t\t\t{ field: \"expert\", rank: 2, item: api.children.expert },\n\t\t];\n\n\t\tfor (const { field, rank, item } of feats) {\n\t\t\tif (!api.fields[field]) continue;\n\t\t\tprocessComboSkill(api, {\n\t\t\t\tlabel: item.name,\n\t\t\t\tuuid: item.uuid,\n\t\t\t\tfield,\n\t\t\t\trank,\n\t\t\t\tparent: item,\n\t\t\t});\n\t\t}\n\t},\n};\n", "import {\n\tMODULE,\n\tgetFlag,\n\tgetItemWithSourceId,\n\tlocalize,\n\tsubLocalize,\n} from \"module-api\";\n\nconst MIND_WEAPON_UUID =\n\t\"Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P\";\nconst MALLEABLE_MENTAL_FORGE_UUID =\n\t\"Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky\";\n\nconst WEAPON_BASE_TYPES = {\n\t0: { die: \"d4\", traits: [\"finesse\", \"agile\"], usage: \"held-in-one-hand\" },\n\t1: { die: \"d6\", traits: [\"finesse\"], usage: \"held-in-one-hand\" },\n\t2: { die: \"d8\", traits: [], usage: \"held-in-one-hand\" },\n\t3: { die: \"d10\", traits: [\"reach\"], usage: \"held-in-two-hands\" },\n};\n\nconst WEAPON_GROUPS = {\n\tslashing: \"sword\",\n\tpiercing: \"spear\",\n\tbludgeoning: \"club\",\n};\n\nconst WEAPON_TRAITS = [\"grapple\", \"nonlethal\", \"shove\", \"trip\", \"modular\"];\n\nconst WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS);\n\nconst WEAPON_RUNES = [\n\t\"corrosive\",\n\t\"disrupting\",\n\t\"flaming\",\n\t\"frost\",\n\t\"shock\",\n\t\"thundering\",\n];\n\nconst WEAPON_GREATER_RUNES = [\n\t// \"anarchic\",\n\t// \"axiomatic\",\n\t\"greaterCorrosive\",\n\t\"greaterDisrupting\",\n\t\"greaterFlaming\",\n\t\"greaterFrost\",\n\t\"greaterShock\",\n\t\"greaterThundering\",\n\t\"holy\",\n\t\"unholy\",\n];\n\nexport const mindSmith = {\n\tkey: \"mindsmith\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY\", // Mind Smith Dedication\n\t},\n\tchildren: [\n\t\t{\n\t\t\tslug: \"weapon\",\n\t\t\tuuid: MIND_WEAPON_UUID, // Mind Weapon\n\t\t},\n\t\t{\n\t\t\tslug: \"mental\",\n\t\t\tuuid: MALLEABLE_MENTAL_FORGE_UUID, // Malleable Mental Forge\n\t\t},\n\t\t{\n\t\t\tslug: \"runic\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp\", // Runic Mind Smithing\n\t\t},\n\t\t{\n\t\t\tslug: \"advanced\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD\", // Advanced Runic Mind Smithing\n\t\t},\n\t],\n\trows: [\n\t\t{\n\t\t\ttype: \"alert\",\n\t\t\tslug: \"alert\",\n\t\t\tmessage: () => localize(\"interface.alert.weapon\"),\n\t\t\tfix,\n\t\t\tchildPredicate: [{ not: \"weapon\" }],\n\t\t},\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"smith\",\n\t\t\tlabel: () => localize(\"label.mindsmith\"),\n\t\t\toptions: WEAPON_DAMAGE_TYPES,\n\t\t\tlabelizer: ({ utils }) => utils.damageLabel,\n\t\t\tchildPredicate: [\"weapon\"],\n\t\t},\n\t\t...[1, 2].map((nb) => ({\n\t\t\ttype: \"select\",\n\t\t\tslug: `mental${nb}`,\n\t\t\tlabel: () => localize(\"label.mentalforge\", { nb }),\n\t\t\toptions: WEAPON_TRAITS,\n\t\t\tlabelizer: ({ utils }) => utils.weaponTraitLabel,\n\t\t\tunique: \"mental\",\n\t\t\tchildPredicate: [\"weapon\", \"mental\"],\n\t\t})),\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"runic\",\n\t\t\tlabel: () => localize(\"label.runicmind\"),\n\t\t\toptions: WEAPON_RUNES,\n\t\t\tlabelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\n\t\t\tchildPredicate: [\"weapon\", \"runic\", { not: \"advanced\" }],\n\t\t\tcondition: ({ children, utils }) =>\n\t\t\t\tutils.hasFreePropertySlot(children.weapon),\n\t\t},\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"advanced\",\n\t\t\tlabel: () => localize(\"label.runicmind\"),\n\t\t\toptions: WEAPON_GREATER_RUNES,\n\t\t\tlabelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\n\t\t\tchildPredicate: [\"weapon\", \"advanced\"],\n\t\t\tcondition: ({ children, utils }) =>\n\t\t\t\tutils.hasFreePropertySlot(children.weapon),\n\t\t},\n\t],\n\tprocess: ({ children, updateItem, fields, messages, item, utils }) => {\n\t\tconst weapon = children.weapon;\n\t\tif (!weapon) return;\n\n\t\tmessages.addGroup(\"mindsmith\");\n\n\t\tconst selected = fields.smith.value;\n\t\tupdateItem({\n\t\t\t_id: weapon.id,\n\t\t\t\"system.damage.damageType\": selected,\n\t\t\t\"system.group\": WEAPON_GROUPS[selected],\n\t\t});\n\t\tmessages.add(\"mindsmith\", {\n\t\t\tselected: utils.damageLabel(selected),\n\t\t\tuuid: item.uuid,\n\t\t\tlabel: \"mindsmith\",\n\t\t});\n\n\t\tif (children.mental) {\n\t\t\tconst traits = deepClone(weapon._source.system.traits?.value ?? []);\n\n\t\t\tfor (const nb of [1, 2]) {\n\t\t\t\tconst selected = fields[`mental${nb}`].value;\n\t\t\t\tif (!traits.includes(selected)) traits.push(selected);\n\t\t\t\tupdateItem({ _id: weapon.id, \"system.traits.value\": traits });\n\t\t\t\tmessages.add(\"mindsmith\", {\n\t\t\t\t\tselected: utils.weaponTraitLabel(selected),\n\t\t\t\t\tuuid: children.mental.uuid,\n\t\t\t\t\tlabel: localize(\"label.mentalforge\", { nb }),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t(children.advanced || children.runic) &&\n\t\t\tutils.hasFreePropertySlot(weapon)\n\t\t) {\n\t\t\tconst child = children.advanced ?? children.runic;\n\t\t\tconst freeSlot = utils.getFreePropertyRuneSlot(weapon);\n\t\t\tconst field = fields.advanced ?? fields.runic;\n\t\t\tconst selected = field.value;\n\n\t\t\tif (freeSlot && !weapon.system.runes.property.includes(selected)) {\n\t\t\t\tupdateItem({\n\t\t\t\t\t_id: weapon.id,\n\t\t\t\t\t[`system.${freeSlot}.value`]: selected,\n\t\t\t\t\t[`flags.${MODULE.id}.runeSlot`]: freeSlot,\n\t\t\t\t});\n\t\t\t\tmessages.add(\"mindsmith\", {\n\t\t\t\t\tselected: utils.weaponPropertyRunesLabel(selected),\n\t\t\t\t\tuuid: child.uuid,\n\t\t\t\t\tlabel: \"runicmind\",\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t},\n\trest: ({ item, sourceId, updateItem, actor }) => {\n\t\tif (sourceId !== MIND_WEAPON_UUID) return;\n\n\t\tconst mental = getItemWithSourceId(actor, MALLEABLE_MENTAL_FORGE_UUID);\n\t\tif (mental) {\n\t\t\tlet traits = item._source.system.traits?.value ?? [];\n\t\t\ttraits = traits.filter((trait) => !WEAPON_TRAITS.includes(trait));\n\t\t\tupdateItem({ _id: item.id, \"system.traits.value\": traits });\n\t\t}\n\n\t\tconst runeSlot = getFlag(item, \"runeSlot\");\n\t\tif (runeSlot) {\n\t\t\tupdateItem({\n\t\t\t\t_id: item.id,\n\t\t\t\t[`system.${runeSlot}.value`]: null,\n\t\t\t\t[`flags.${MODULE.id}.-=runeSlot`]: true,\n\t\t\t});\n\t\t}\n\t},\n};\n\nasync function fix({ actor }) {\n\tconst localize = subLocalize(\"dialog.weapon\");\n\n\tlet content = localize(\"flavor\");\n\n\tfor (const key of [\"0\", \"1\", \"2\", \"3\"]) {\n\t\tconst label = localize(`option.${key}`);\n\t\tcontent += `<label><input type=\"radio\" name=\"type\" value=\"${key}\">${label}</label>`;\n\t}\n\n\tconst weapon = await Dialog.wait(\n\t\t{\n\t\t\ttitle: localize(\"title\"),\n\t\t\tcontent,\n\t\t\tbuttons: {\n\t\t\t\tyes: {\n\t\t\t\t\ticon: '<i class=\"fas fa-save\"></i>',\n\t\t\t\t\tlabel: localize(\"accept\"),\n\t\t\t\t\tcallback: onWeaponSelected,\n\t\t\t\t},\n\t\t\t\tno: {\n\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\tlabel: localize(\"cancel\"),\n\t\t\t\t\tcallback: () => null,\n\t\t\t\t},\n\t\t\t},\n\t\t\tclose: () => null,\n\t\t},\n\t\t{},\n\t\t{ id: \"pf2e-dailies-weapon\", width: 600 },\n\t);\n\n\tif (weapon) {\n\t\tawait actor.createEmbeddedDocuments(\"Item\", [weapon]);\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nasync function onWeaponSelected(html) {\n\tconst localize = subLocalize(\"dialog.weapon\");\n\n\tconst selection = html.find(\"[name=type]:checked\").val();\n\tif (!selection) {\n\t\tlocalize.warn(\"error.noSelection\");\n\t\treturn;\n\t}\n\n\tconst weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject();\n\tif (!weapon) {\n\t\tlocalize.warn(\"error.missing\");\n\t\treturn;\n\t}\n\n\tconst stats = WEAPON_BASE_TYPES[selection];\n\n\tsetProperty(weapon, \"system.damage.die\", stats.die);\n\tsetProperty(weapon, \"system.traits.value\", stats.traits.slice());\n\tsetProperty(weapon, \"system.usage.value\", stats.usage);\n\n\treturn weapon;\n}\n", "import { createFancyLink, getItemWithSourceId, localize } from \"module-api\";\n\nconst RATION_UUID = \"Compendium.pf2e.equipment-srd.Item.L9ZV076913otGtiB\";\n\nfunction getRations(actor) {\n\treturn getItemWithSourceId(actor, RATION_UUID, \"consumable\");\n}\n\nexport const rations = {\n\tkey: \"rations\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.equipment-srd.Item.L9ZV076913otGtiB\",\n\t},\n\trows: [\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"rations\",\n\t\t\tsave: false,\n\t\t\torder: 200,\n\t\t\toptions: ({ actor }) => {\n\t\t\t\tconst rations = getRations(actor);\n\t\t\t\tconst { value, max } = rations.uses;\n\t\t\t\tconst quantity = rations.quantity;\n\t\t\t\tconst remaining = (quantity - 1) * max + value;\n\t\t\t\tconst last = remaining <= 1;\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"false\",\n\t\t\t\t\t\tlabel: localize(\"interface.rations.no\"),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tvalue: \"true\",\n\t\t\t\t\t\tlabel: last\n\t\t\t\t\t\t\t? localize(\"interface.rations.last\")\n\t\t\t\t\t\t\t: localize(\"interface.rations.yes\", { nb: remaining }),\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t},\n\t\t},\n\t],\n\tprocess: async ({ fields, updateItem, messages, actor }) => {\n\t\tif (fields.rations.value !== \"true\") return;\n\n\t\tconst rations = getRations(actor);\n\t\tif (!rations?.uses.value) return;\n\n\t\tconst quantity = rations.quantity;\n\t\tconst { value, max } = rations.uses;\n\n\t\tif (value <= 1) {\n\t\t\tif (quantity <= 1) {\n\t\t\t\trations.delete();\n\t\t\t} else {\n\t\t\t\tupdateItem({\n\t\t\t\t\t_id: rations.id,\n\t\t\t\t\t\"system.quantity\": Math.max(rations.quantity - 1, 0),\n\t\t\t\t\t\"system.uses.value\": max,\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tupdateItem({\n\t\t\t\t_id: rations.id,\n\t\t\t\t\"system.uses.value\": Math.max(value - 1, 0),\n\t\t\t});\n\t\t}\n\n\t\tconst remaining = (quantity - 1) * max + value;\n\t\tconst name =\n\t\t\tremaining <= 1\n\t\t\t\t? await createFancyLink(RATION_UUID, { label: rations.name })\n\t\t\t\t: await createFancyLink(rations);\n\n\t\tconst message =\n\t\t\tremaining <= 1\n\t\t\t\t? localize(\"message.rations.last\", { name })\n\t\t\t\t: remaining <= 3\n\t\t\t\t  ? localize(\"message.rations.almost\", { name, nb: remaining - 1 })\n\t\t\t\t  : localize(\"message.rations.used\", { name, nb: remaining - 1 });\n\n\t\tmessages.addRaw(message, 200);\n\t},\n};\n", "export function createResistancelDaily(\n\tkey,\n\tuuid,\n\tresistances,\n\tresistance,\n\tlabel,\n\trandom,\n) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [\n\t\t\t{\n\t\t\t\ttype: random ? \"random\" : \"select\",\n\t\t\t\tslug: \"resistance\",\n\t\t\t\toptions: resistances,\n\t\t\t\tlabelizer: ({ utils }) => utils.resistanceLabel,\n\t\t\t},\n\t\t],\n\t\tprocess: async ({ utils, fields, actor, addRule, messages }) => {\n\t\t\tconst type = random\n\t\t\t\t? await utils.randomOption(resistances)\n\t\t\t\t: fields.resistance.value;\n\t\t\tconst value =\n\t\t\t\ttypeof resistance === \"number\"\n\t\t\t\t\t? resistance\n\t\t\t\t\t: resistance === \"half\"\n\t\t\t\t\t  ? utils.halfLevelValue(actor)\n\t\t\t\t\t  : actor.level;\n\t\t\tconst rule = utils.createResistanceRuleElement({ type, value });\n\t\t\taddRule(rule);\n\t\t\tmessages.add(\"resistances\", {\n\t\t\t\tuuid,\n\t\t\t\tselected: utils.resistanceLabel(type, value),\n\t\t\t\tlabel,\n\t\t\t\trandom,\n\t\t\t});\n\t\t},\n\t};\n\treturn daily;\n}\n", "const effectUUID = \"Compendium.pf2e.feat-effects.Item.jO7wMhnjT7yoAtQg\";\n\nexport const rootMagic = {\n\tkey: \"root\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.22P7IFyhrF7Fbw8B\",\n\t},\n\trows: [\n\t\t{\n\t\t\ttype: \"select\",\n\t\t\tslug: \"target\",\n\t\t\toptions: ({ actor, utils }) => {\n\t\t\t\tconst actors = utils.getPlayersActors(actor);\n\t\t\t\treturn actors.map((a) => ({ value: a.id, label: a.name }));\n\t\t\t},\n\t\t},\n\t],\n\tprocess: ({ fields, messages }) => {\n\t\tconst actorId = fields.target.value;\n\t\tconst actor = game.actors.get(actorId);\n\t\tif (!actor) return;\n\t\tmessages.addGroup(\"root\");\n\t\tmessages.add(\"root\", { uuid: effectUUID, selected: actor.name });\n\t},\n};\n", "import { getFlag, getItemWithSourceId, setFlag } from \"module-api\";\nimport {\n\tgetValidSpellcastingList,\n\tgetSpellcastingEntryMaxSlotRank,\n\tgetBestSpellcastingEntry,\n} from \"../spellcasting\";\n\nexport const DEFAULT_REGEX_RANKS = [\n\t\"cantrips?\",\n\t\"1st\",\n\t\"2nd\",\n\t\"3rd\",\n\t\"4th\",\n\t\"5th\",\n\t\"6th\",\n\t\"7th\",\n\t\"8th\",\n\t\"9th\",\n\t\"10th\",\n].join(\"|\");\n\nconst KINETIC_ACTIVATION = \"Compendium.pf2e.feats-srd.Item.NV9H39kbkbjhAK6X\";\n\nexport function isPF2eStavesActive() {\n\treturn game.modules.get(\"pf2e-staves\")?.active;\n}\n\nexport function getSpellcastingEntryStaffFlags(entry) {\n\tif (!entry) return;\n\n\tconst data =\n\t\tgetFlag(entry, \"staff\") ?? getProperty(entry, \"flags.pf2e-staves\");\n\tif (!data) return;\n\n\t// biome-ignore lint/performance/noDelete: not master of the returned data object\n\tdelete data.prevDescription;\n\treturn deepClone(data);\n}\n\nexport function getSpellcastingEntryStaffData(entry) {\n\tconst staffData = getSpellcastingEntryStaffFlags(entry);\n\tif (!staffData) return;\n\n\tstaffData.overcharge ??= 0;\n\tstaffData.max = getMaxSlotRankForStaves(entry.actor) + staffData.overcharge;\n\n\tconst spontaneousCharges = (() => {\n\t\tconst actor = entry.actor;\n\t\tif (\n\t\t\t!staffData.charges ||\n\t\t\tstaffData.overcharge ||\n\t\t\tstaffData.makeshift ||\n\t\t\t!actor\n\t\t)\n\t\t\treturn {};\n\n\t\treturn actor.spellcasting\n\t\t\t.filter((entry) => entry.isSpontaneous)\n\t\t\t.reduce((charges, entry) => {\n\t\t\t\tfor (let i = 1; i <= 10; i++) {\n\t\t\t\t\tconst slot = entry.system.slots[`slot${i}`];\n\t\t\t\t\tif (slot.max && slot.value) charges[i] = true;\n\t\t\t\t}\n\t\t\t\treturn charges;\n\t\t\t}, {});\n\t})();\n\n\tstaffData.canPayCost = (cost) => {\n\t\treturn (\n\t\t\t!!staffData.charges &&\n\t\t\t(cost <= staffData.charges || spontaneousCharges[cost])\n\t\t);\n\t};\n\n\treturn staffData;\n}\n\nexport async function updateEntryCharges(entry, value) {\n\tconst staffData = getSpellcastingEntryStaffData(entry);\n\tif (!staffData) return;\n\n\tconst updatedValue = Math.clamped(value, 0, staffData.max);\n\n\tif (updatedValue !== staffData.charges) {\n\t\tstaffData.charges = updatedValue;\n\t\treturn setFlag(entry, \"staff\", staffData);\n\t}\n}\n\nexport function getStaves(actor) {\n\treturn [\n\t\t{ type: \"weapon\", trait: \"magical\" },\n\t\t{ type: \"equipment\", trait: \"coda\" },\n\t].flatMap(({ type, trait }) =>\n\t\tactor.itemTypes[type].filter((item) => {\n\t\t\tconst traits = item.system.traits?.value;\n\t\t\treturn traits?.includes(\"staff\") && traits.includes(trait);\n\t\t}),\n\t);\n}\n\nexport function getMaxSlotRankForStaves(actor) {\n\tlet maxCharges = 0;\n\tconst actorCharges = Math.ceil(actor.level / 2);\n\n\tconst entries = getValidSpellcastingList(actor);\n\tfor (const entry of entries) {\n\t\tconst entryMaxCharges = getSpellcastingEntryMaxSlotRank(entry);\n\t\tif (entryMaxCharges > maxCharges) maxCharges = entryMaxCharges;\n\t}\n\n\tconst activation = getItemWithSourceId(actor, KINETIC_ACTIVATION, \"feat\");\n\tif (activation) {\n\t\tif (actorCharges > maxCharges) maxCharges = actorCharges;\n\t}\n\n\treturn Math.min(actorCharges, maxCharges);\n}\n\nexport function getBestSpellcastingEntryForStaves(actor) {\n\tconst bestEntry = getBestSpellcastingEntry(actor);\n\n\tconst activation = getItemWithSourceId(actor, KINETIC_ACTIVATION, \"feat\");\n\tif (activation) {\n\t\tconst bestMod = bestEntry?.mod ?? 0;\n\t\tconst classDC =\n\t\t\tactor.classDCs.kineticist ?? actor.classDCs.find((c) => c.mod >= bestMod);\n\t\tconst classMod = classDC.mod;\n\n\t\tif (classMod >= bestMod) {\n\t\t\treturn {\n\t\t\t\tability: { value: classDC.attribute },\n\t\t\t\ttradition: { value: \"primal\" },\n\t\t\t\tproficiency: { value: classDC.rank, slug: classDC.slug },\n\t\t\t\tmod: classMod,\n\t\t\t};\n\t\t}\n\t}\n\n\treturn bestEntry;\n}\n\nexport function getPreparedSpellcastingEntriesForStaves(actor) {\n\tconst entryGroups = {};\n\n\tfor (const entry of actor.spellcasting.filter((entry) => entry.isPrepared)) {\n\t\tconst entryId = entry.id;\n\t\tconst isFlexible = entry.isFlexible;\n\n\t\tfor (let rank = 1; rank <= 10; rank++) {\n\t\t\tconst data = entry.system.slots[`slot${rank}`];\n\t\t\tif (data.max < 1) continue;\n\n\t\t\tif (isFlexible) {\n\t\t\t\tif (data.value < 1) continue;\n\n\t\t\t\tentryGroups[entryId] ??= {\n\t\t\t\t\tid: entryId,\n\t\t\t\t\tname: entry.name,\n\t\t\t\t\tslots: [],\n\t\t\t\t};\n\n\t\t\t\tentryGroups[entryId].slots.push({\n\t\t\t\t\trank,\n\t\t\t\t\tvalue: data.value,\n\t\t\t\t\tmax: data.max,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfor (const [index, { id, prepared, expended }] of Object.entries(\n\t\t\t\t\tdata.prepared,\n\t\t\t\t)) {\n\t\t\t\t\tif (prepared === false || expended) continue;\n\n\t\t\t\t\tconst spell = entry.spells.get(id);\n\n\t\t\t\t\tentryGroups[entryId] ??= {\n\t\t\t\t\t\tid: entryId,\n\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\tspells: [],\n\t\t\t\t\t};\n\n\t\t\t\t\tentryGroups[entryId].spells.push({\n\t\t\t\t\t\tname: spell?.name ?? \"Empty Slot\",\n\t\t\t\t\t\trank,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tentryGroups[entryId]?.spells?.sort((a, b) => a.rank - b.rank);\n\t}\n\n\treturn Object.values(entryGroups);\n}\n", "import { MODULE, getFlag, localize, render, warn } from \"module-api\";\nimport { utils } from \"./api\";\nimport { getSpellcastingEntryStaffFlags } from \"./data/staves\";\n\nexport async function onSpellcastingEntryCast(wrapped, ...args) {\n\tconst [spell, { rank, staffChargeEntryId }] = args;\n\tif (spell.isCantrip) return wrapped(...args);\n\n\tconst staffFlags = getSpellcastingEntryStaffFlags(this);\n\tif (!staffFlags) return wrapped(...args);\n\n\tconst actor = this.actor;\n\tconst staff = actor.items.get(staffFlags.staveID);\n\tif (!staff?.isEquipped) {\n\t\twarn(\"staves.noStaff\");\n\t\treturn;\n\t}\n\n\tconst castRank = spell.computeCastRank(rank);\n\n\tif (!rank || rank === \"0\") {\n\t\treturn spell.toMessage(undefined, { data: { castRank } });\n\t}\n\n\tif (\n\t\tstaffFlags.charges < 1 ||\n\t\t(staffFlags.charges < castRank && staffFlags.overcharge)\n\t) {\n\t\twarn(\"staves.noCharge\");\n\t\treturn;\n\t}\n\n\tconst updates = [];\n\n\tif (!staffFlags.overcharge) {\n\t\tconst spontaneousEntries = actor.spellcasting.filter(\n\t\t\t(entry) =>\n\t\t\t\tentry.isSpontaneous && entry.system.slots[`slot${castRank}`].value,\n\t\t);\n\t\tconst staffChargeEntryIndex = spontaneousEntries.findIndex(\n\t\t\t(entry) => entry._id === staffChargeEntryId\n\t\t)\n\n\t\tlet useSpontaneous = false;\n\n\t\tconst entryRankValue = (entry) =>\n\t\t\tentry.system.slots[`slot${castRank}`].value;\n\n\t\tif (spontaneousEntries.length === 1) {\n\t\t\tconst entry = spontaneousEntries[0];\n\n\t\t\tconst content = localize(\"staves.spontaneous.one\", {\n\t\t\t\trank: utils.spellRankLabel(castRank),\n\t\t\t\tentry: entry.name,\n\t\t\t\tremaining: entryRankValue(entry),\n\t\t\t});\n\n\t\t\tuseSpontaneous = staffChargeEntryIndex >= 0\n\t\t\t? true \n\t\t\t: await Dialog.confirm({\n\t\t\t\ttitle: localize(\"staves.spontaneous.title\"),\n\t\t\t\tdefaultYes: false,\n\t\t\t\tcontent: `<div class=\"pf2e-dailies-spontaneous\">${content}</div>`,\n\t\t\t});\n\n\t\t\tif (useSpontaneous) useSpontaneous = 0;\n\t\t} else if (spontaneousEntries.length > 1) {\n\t\t\tconst entries = spontaneousEntries.map((entry, index) => ({\n\t\t\t\tindex,\n\t\t\t\tname: entry.name,\n\t\t\t\tremaining: entryRankValue(entry),\n\t\t\t}));\n\n\t\t\tconst content = await render(\"staves-spontaneous\", {\n\t\t\t\tentries,\n\t\t\t\tcastRank: utils.spellRankLabel(castRank),\n\t\t\t\ti18n: (key, { hash }) => localize(`staves.spontaneous.${key}`, hash),\n\t\t\t});\n\n\t\t\tuseSpontaneous = staffChargeEntryIndex >= 0\n\t\t\t? staffChargeEntryIndex\n\t\t\t: await Dialog.wait({\n\t\t\t\ttitle: localize(\"staves.spontaneous.title\"),\n\t\t\t\tcontent,\n\t\t\t\tbuttons: {\n\t\t\t\t\tyes: {\n\t\t\t\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\t\t\t\tlabel: game.i18n.localize(\"Yes\"),\n\t\t\t\t\t\tcallback: (html) => {\n\t\t\t\t\t\t\tconst value = html.find(\"input[name=entry]:checked\").val();\n\t\t\t\t\t\t\treturn Number(value);\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tno: {\n\t\t\t\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\t\t\t\tlabel: game.i18n.localize(\"No\"),\n\t\t\t\t\t\tcallback: () => false,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tclose: () => null,\n\t\t\t});\n\t\t}\n\n\t\tif (useSpontaneous === null) {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(useSpontaneous)\n\t\tif (typeof useSpontaneous === \"number\") {\n\t\t\tconst entry = spontaneousEntries[useSpontaneous];\n\t\t\tconst current = entry.system.slots[`slot${castRank}`].value;\n\n\t\t\tupdates.push({\n\t\t\t\t_id: entry.id,\n\t\t\t\t[`system.slots.slot${castRank}.value`]: current - 1,\n\t\t\t});\n\n\t\t\tstaffFlags.charges -= 1;\n\t\t}\n\t}\n\n\tif (!updates.length) {\n\t\tif (staffFlags.charges < castRank) {\n\t\t\twarn(\"staves.noCharge\");\n\t\t\treturn;\n\t\t}\n\n\t\tstaffFlags.charges -= castRank;\n\t}\n\n\tupdates.push({ _id: this.id, [`flags.${MODULE.id}.staff`]: staffFlags });\n\n\tawait actor.updateEmbeddedDocuments(\"Item\", updates);\n\tawait spell.toMessage(undefined, { data: { castRank } });\n}\n\nexport function getValidSpellcastingList(\n\tactor,\n\t{ itemOnly, innate, focus } = {},\n) {\n\treturn actor.spellcasting.regular.filter((entry) => {\n\t\tif (entry.flags?.[\"pf2e-staves\"] || getFlag(entry, \"staff\")) return false;\n\n\t\tif (!innate && entry.isInnate) return false;\n\t\tif (!focus && entry.isFocusPool) return false;\n\n\t\tif (entry.system.prepared.value === \"items\") {\n\t\t\tif (!itemOnly) return false;\n\t\t\tif (\n\t\t\t\titemOnly === \"scroll\" &&\n\t\t\t\tentry.system.prepared.validItems !== \"scroll\"\n\t\t\t)\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t});\n}\n\nexport function getSpellcastingEntryMaxSlotRank(entry) {\n\tlet maxSlot = 0;\n\n\tif (entry.system.prepared.value === \"items\") {\n\t\tconst levelMaxSlot = Math.ceil(entry.actor.level / 2);\n\t\tif (levelMaxSlot > maxSlot) maxSlot = levelMaxSlot;\n\t} else {\n\t\tfor (let i = 0; i <= 10; i++) {\n\t\t\tconst slot = entry.system.slots[`slot${i}`];\n\t\t\tif (slot.max) maxSlot = Math.max(maxSlot, i);\n\t\t}\n\t}\n\n\treturn maxSlot;\n}\n\nexport function getNotExpendedPreparedSpellSlot(spell, rank) {\n\tconst entry = spell.spellcasting;\n\tconst entries = Object.entries(\n\t\tentry.system.slots[`slot${rank ?? spell.rank}`].prepared,\n\t);\n\tconst prepared = entries.find(\n\t\t([_, { id, expended }]) => id === spell.id && expended !== true,\n\t);\n\tif (!prepared) return;\n\n\treturn {\n\t\tslotIndex: prepared[0],\n\t\tentry,\n\t};\n}\n\nexport function getBestSpellcastingEntry(actor) {\n\tconst entries = getValidSpellcastingList(actor);\n\n\tlet bestMod = 0;\n\tlet bestEntries = [];\n\n\tfor (const entry of entries) {\n\t\tconst mod = entry.statistic.mod;\n\t\tif (mod > bestMod) {\n\t\t\tbestEntries = [entry];\n\t\t\tbestMod = mod;\n\t\t} else if (mod === bestMod) {\n\t\t\tbestEntries.push(entry);\n\t\t}\n\t}\n\n\tif (bestEntries.length === 0) return;\n\n\tconst returnedEntry = (entry) => {\n\t\tconst { ability, tradition, proficiency } = entry.system;\n\t\treturn { ability, tradition, proficiency, mod: bestMod };\n\t};\n\n\tif (bestEntries.length === 1) return returnedEntry(bestEntries[0]);\n\n\tconst classAttr = actor.classDC.attribute;\n\tconst classAttrEntries = bestEntries.filter(\n\t\t(entry) => entry.attribute === classAttr,\n\t);\n\n\tif (classAttrEntries === 1) return returnedEntry(classAttrEntries[0]);\n\n\tlet bestCount = 0;\n\tlet bestEntry;\n\n\tfor (const entry of bestEntries) {\n\t\tconst entryCount = getPreparedCount(entry);\n\t\tif (entryCount > bestCount) {\n\t\t\tbestCount = entryCount;\n\t\t\tbestEntry = entry;\n\t\t}\n\t}\n\n\treturn returnedEntry(bestEntry ?? bestEntries[0]);\n}\n\nfunction getPreparedCount(entry) {\n\tif (entry.isSpontaneous) return entry.spells.size;\n\n\tif (entry.isPrepared) {\n\t\tconst slots = Object.values(entry.system.slots);\n\t\tconst prepared = slots.flatMap((slot) => Object.values(slot.prepared));\n\t\treturn prepared.filter((spell) => spell.id).length;\n\t}\n\n\treturn 0;\n}\n\nexport function getSpellcastingEntriesSortBounds(actor) {\n\tlet min = 0;\n\tlet max = 0;\n\n\tfor (const entry of actor.spellcasting) {\n\t\tif (entry.sort > max) max = entry.sort;\n\t\telse if (entry.sort < min) min = entry.sort;\n\t}\n\n\treturn { min, max };\n}\n", "import {\n\tgetSpellcastingEntryMaxSlotRank,\n\tgetValidSpellcastingList,\n} from \"../spellcasting\";\n\nexport const scrollSavant = {\n\tkey: \"savant\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ\", // Scroll Adept\n\t},\n\tprepare: ({ actor }) => {\n\t\tconst { maxSlot, maxTradition } = getSpellcastingTraditionDetails(\n\t\t\tactor,\n\t\t\t\"arcane\",\n\t\t);\n\n\t\tconst custom = {\n\t\t\tfirst: { level: maxSlot - 2, condition: true },\n\t\t\tsecond: { level: maxSlot - 3, condition: true },\n\t\t\tthird: {\n\t\t\t\tlevel: maxSlot - 4,\n\t\t\t\tcondition: maxTradition >= 3 && maxSlot >= 5,\n\t\t\t},\n\t\t\tfourth: {\n\t\t\t\tlevel: maxSlot - 5,\n\t\t\t\tcondition: maxTradition >= 4 && maxSlot >= 6,\n\t\t\t},\n\t\t};\n\n\t\treturn custom;\n\t},\n\trows: [\"first\", \"second\", \"third\", \"fourth\"].map((rowName) => {\n\t\tconst row = {\n\t\t\ttype: \"drop\",\n\t\t\tslug: rowName,\n\t\t\tlabel: ({ custom, utils }) => utils.spellRankLabel(custom[rowName].level),\n\t\t\tfilter: {\n\t\t\t\ttype: \"spell\",\n\t\t\t\tsearch: ({ custom }) => ({\n\t\t\t\t\tcategory: [\"spell\"],\n\t\t\t\t\ttraditions: [\"arcane\"],\n\t\t\t\t\tlevel: custom[rowName].level,\n\t\t\t\t}),\n\t\t\t},\n\t\t\tcondition: ({ custom }) => custom[rowName].condition,\n\t\t};\n\t\treturn row;\n\t}),\n\tprocess: async ({ utils, fields, custom, addItem, messages }) => {\n\t\tfor (const field of Object.values(fields)) {\n\t\t\tconst uuid = field.uuid;\n\t\t\tconst source = await utils.createSpellScrollSource({\n\t\t\t\tuuid,\n\t\t\t\tlevel: custom[field.row].level,\n\t\t\t});\n\t\t\taddItem(source);\n\t\t\tmessages.add(\"scrolls\", { uuid, label: source.name });\n\t\t}\n\t},\n};\n\nfunction getSpellcastingTraditionDetails(actor, tradition) {\n\tlet maxSlot = 1;\n\tlet maxTradition = 0;\n\n\tconst entries = getValidSpellcastingList(actor);\n\tfor (const entry of entries) {\n\t\tconst entryMaxSlot = getSpellcastingEntryMaxSlotRank(entry);\n\t\tif (entryMaxSlot > maxSlot) maxSlot = entryMaxSlot;\n\n\t\tif (entry.tradition === tradition)\n\t\t\tmaxTradition = Math.max(maxTradition, entry.rank);\n\t}\n\n\treturn { maxSlot: Math.min(maxSlot, 10), maxTradition };\n}\n", "export const spellshaping = {\n\tkey: \"metamagical\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.89zWKD2CN7nRu2xp\", // Experimental Spellshaping\n\t\tcondition: ({ actor }) => actor.level >= 4,\n\t},\n\trows: [\n\t\t{\n\t\t\ttype: \"drop\",\n\t\t\tslug: \"feat\",\n\t\t\tfilter: {\n\t\t\t\ttype: \"feat\",\n\t\t\t\tsearch: {\n\t\t\t\t\tcategory: [\"class\"],\n\t\t\t\t\ttraits: { selected: [\"spellshape\", \"wizard\"], conjunction: \"and\" },\n\t\t\t\t\tlevel: \"half\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n\tprocess: async ({ utils, fields, addFeat, messages }) => {\n\t\tconst uuid = fields.feat.uuid;\n\t\tconst source = await utils.createFeatSource(uuid);\n\t\taddFeat(source);\n\t\tmessages.add(\"feats\", { uuid });\n\t},\n};\n", "export const thaumaturgeTome = {\n\tkey: \"tome\",\n\titem: {\n\t\tuuid: \"Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e\", // Tome\n\t},\n\tchildren: [\n\t\t{\n\t\t\tslug: \"adept\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO\", // Implement Adept\n\t\t\tcondition: createChildCondition(\"adept\"),\n\t\t},\n\t\t{\n\t\t\tslug: \"second\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5\", // Second Adept\n\t\t\tcondition: createChildCondition(\"adept\"),\n\t\t},\n\t\t{\n\t\t\tslug: \"intense\",\n\t\t\tuuid: \"Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC\", // Intense Implement\n\t\t},\n\t\t{\n\t\t\tslug: \"paragon\",\n\t\t\tuuid: \"Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI\", // Implement Paragon\n\t\t\tcondition: createChildCondition(\"paragon\"),\n\t\t},\n\t],\n\tprepare: ({ utils, actor, children }) => {\n\t\tconst skillNames = utils.skillNames;\n\t\tconst actorLevel = actor.level;\n\t\tconst actorSkills = actor.skills;\n\n\t\tconst custom = {\n\t\t\tfirst: { options: [], rank: 1 },\n\t\t\tsecond: { options: [], rank: 1 },\n\t\t};\n\n\t\t// Implement Paragon\n\t\tif (children.paragon) {\n\t\t\tconst skills = skillNames.filter((x) => actorSkills[x].rank < 4);\n\t\t\tcustom.first = { rank: 4, options: skills };\n\t\t\tcustom.second = { rank: 4, options: skills };\n\t\t}\n\t\t// Intense Implement or Second Adept or Implement Adept\n\t\telse if (children.intense || children.adept || children.second) {\n\t\t\tconst masters = skillNames.filter((x) => actorSkills[x].rank < 3);\n\n\t\t\tif (actorLevel >= 9) {\n\t\t\t\tcustom.first = { rank: 3, options: masters };\n\t\t\t\tcustom.second = { rank: 3, options: masters };\n\t\t\t} else {\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\n\t\t\t\tcustom.first = { rank: 2, options: experts };\n\t\t\t\tcustom.second = { rank: 3, options: masters };\n\t\t\t}\n\t\t}\n\t\t// Tome\n\t\telse {\n\t\t\tif (actorLevel >= 5) {\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\n\t\t\t\tcustom.first = { rank: 2, options: experts };\n\t\t\t\tcustom.second = { rank: 2, options: experts };\n\t\t\t} else if (actorLevel >= 3) {\n\t\t\t\tconst trained = skillNames.filter((x) => actorSkills[x].rank < 1);\n\t\t\t\tconst experts = skillNames.filter((x) => actorSkills[x].rank < 2);\n\t\t\t\tcustom.first = { rank: 1, options: trained };\n\t\t\t\tcustom.second = { rank: 2, options: experts };\n\t\t\t} else {\n\t\t\t\tconst trained = skillNames.filter((x) => actorSkills[x].rank < 1);\n\t\t\t\tcustom.first = { rank: 1, options: trained };\n\t\t\t\tcustom.second = { rank: 1, options: trained };\n\t\t\t}\n\t\t}\n\n\t\treturn custom;\n\t},\n\trows: [\"first\", \"second\"].map((rowName) => {\n\t\tconst row = {\n\t\t\ttype: \"combo\",\n\t\t\tslug: rowName,\n\t\t\tlabel: ({ custom, utils }) =>\n\t\t\t\tutils.proficiencyLabel(custom[rowName].rank),\n\t\t\toptions: ({ custom }) => custom[rowName].options,\n\t\t\tlabelizer: ({ utils }) => utils.skillLabel,\n\t\t};\n\t\treturn row;\n\t}),\n\tprocess: ({ custom, fields, utils, messages, addItem, addRule }) => {\n\t\tmessages.addGroup(\"tome\", 65);\n\n\t\tfor (const rowName of [\"first\", \"second\"]) {\n\t\t\tconst rank = custom[rowName].rank;\n\t\t\tlet value = fields[rowName].value;\n\n\t\t\tif (fields[rowName].input === \"true\") {\n\t\t\t\tconst source = utils.createLoreSource({ name: value, rank });\n\t\t\t\taddItem(source);\n\t\t\t} else {\n\t\t\t\tconst source = utils.createSkillRuleElement({\n\t\t\t\t\tskill: value,\n\t\t\t\t\tvalue: rank,\n\t\t\t\t});\n\t\t\t\tvalue = utils.skillLabel(value);\n\t\t\t\taddRule(source);\n\t\t\t}\n\n\t\t\tmessages.add(\"tome\", {\n\t\t\t\tlabel: utils.proficiencyLabel(rank),\n\t\t\t\tselected: value,\n\t\t\t});\n\t\t}\n\t},\n};\n\nfunction createChildCondition(option) {\n\treturn ({ item, utils, actor }) => {\n\t\tconst itemId = utils.getChoiSetRuleSelection(item);\n\t\treturn actor.items.get(itemId)?.slug === \"tome\";\n\t};\n}\n", "import {\n\tAsyncFunction,\n\terror,\n\tgetSetting,\n\tgetSourceId,\n\twarn,\n} from \"module-api\";\nimport { utils } from \"./api\";\nimport { tricksterAce } from \"./data/ace\";\nimport { bladeAlly } from \"./data/blade\";\nimport { ceremonialKnife } from \"./data/ceremonial\";\nimport { createScrollChain } from \"./data/chain\";\nimport { combatFlexibility } from \"./data/flexibility\";\nimport { createLanguageDaily } from \"./data/language\";\nimport { longevities } from \"./data/longevity\";\nimport { mindSmith } from \"./data/mind\";\nimport { rations } from \"./data/rations\";\nimport { createResistancelDaily } from \"./data/resistance\";\nimport { rootMagic } from \"./data/root\";\nimport { scrollSavant } from \"./data/savant\";\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from \"./data/skill\";\nimport { spellshaping } from \"./data/spellshaping\";\nimport { thaumaturgeTome } from \"./data/tome\";\n\nconst DEPRECATED_CUSTOM_DAILIES = [\"root-magic\"];\n\nexport const UNIQUE_DAILY_KEYS = [\"familiar\", \"staves\"];\n\nexport const BUILTINS_DAILIES = [\n\tthaumaturgeTome,\n\tlongevities,\n\tcreateTrainedSkillDaily(\n\t\t\"ageless\",\n\t\t\"Compendium.pf2e.feats-srd.Item.wylnETwIz32Au46y\",\n\t), // Ageless Spirit\n\tcreateTrainedSkillDaily(\n\t\t\"memories\",\n\t\t\"Compendium.pf2e.feats-srd.Item.ptEOt3lqjxUnAW62\",\n\t), // Ancient Memories\n\tcreateTrainedSkillDaily(\n\t\t\"studies\",\n\t\t\"Compendium.pf2e.feats-srd.Item.9bgl6qYWKHzqWZj0\",\n\t), // Flexible Studies\n\tcreateTrainedLoreDaily(\n\t\t\"study\",\n\t\t\"Compendium.pf2e.feats-srd.Item.aLJsBBZzlUK3G8MW\",\n\t), // Quick Study\n\tcreateLanguageDaily(\n\t\t\"linguistics\",\n\t\t\"Compendium.pf2e.feats-srd.Item.eCWQU16hRLfN1KaX\",\n\t), // Ancestral Linguistics\n\tcreateLanguageDaily(\n\t\t\"borts\",\n\t\t\"Compendium.pf2e.equipment-srd.Item.iS7hAQMAaThHYE8g\",\n\t), // Bort's Blessing\n\tcreateResistancelDaily(\n\t\t\"elementalist\",\n\t\t\"Compendium.pf2e.feats-srd.Item.tx9pkrpmtqe4FnvS\",\n\t\t[\"air\", \"earth\", \"fire\", \"water\"],\n\t\t\"half\",\n\t\t\"elementalist\",\n\t), // Elementalist Dedication\n\tcreateResistancelDaily(\n\t\t\"ganzi\",\n\t\t\"Compendium.pf2e.heritages.Item.3reGfXH0S82hM7Gp\",\n\t\t[\"acid\", \"electricity\", \"sonic\"],\n\t\t\"half\",\n\t\t\"ganzi\",\n\t\ttrue,\n\t), // Ganzi\n\tspellshaping,\n\tcombatFlexibility,\n\tscrollSavant,\n\tcreateScrollChain(\"esoterica\", [\n\t\t\"Compendium.pf2e.feats-srd.Item.OqObuRB8oVSAEKFR\", // Scroll Esoterica\n\t\t\"Compendium.pf2e.feats-srd.Item.nWd7m0yRcIEVUy7O\", // Elaborate Scroll Esoterica\n\t\t\"Compendium.pf2e.feats-srd.Item.LHjPTV5vP3MOsPPJ\", // Grand Scroll Esoterica\n\t]),\n\tcreateScrollChain(\"trickster\", [\n\t\t\"Compendium.pf2e.feats-srd.Item.ROAUR1GhC19Pjk9C\", // Basic Scroll Cache\n\t\t\"Compendium.pf2e.feats-srd.Item.UrOj9TROtn8nuxPf\", // Expert Scroll Cache\n\t\t\"Compendium.pf2e.feats-srd.Item.lIg5Gzz7W70jfbk1\", // Master Scroll Cache\n\t]),\n\ttricksterAce(),\n\tmindSmith,\n\tbladeAlly,\n\trootMagic,\n\tceremonialKnife,\n\trations,\n];\n\nexport let DAILY_FILTERS = [];\n\nlet BUILTINS_UUIDS;\nconst UUIDS = new Map();\n\nexport function prepareDailies(dailies, prefix) {\n\tconst uuids = new Map();\n\n\tfor (const original of dailies) {\n\t\tconst daily = deepClone(original);\n\n\t\ttry {\n\t\t\tconst keyWithPrefix = `${prefix}.${daily.key}`;\n\t\t\tif (DAILY_FILTERS.includes(keyWithPrefix)) continue;\n\n\t\t\tuuids.set(daily.item.uuid, { daily, condition: daily.item.condition });\n\n\t\t\tdaily.key = keyWithPrefix;\n\n\t\t\tif (daily.children) {\n\t\t\t\tfor (let i = 0; i < daily.children.length; i++) {\n\t\t\t\t\tconst { uuid, condition } = daily.children[i];\n\t\t\t\t\tuuids.set(uuid, { daily, index: i, condition });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\terror(\"error.unexpected\");\n\t\t\tconsole.error(err);\n\t\t\tconsole.error(\n\t\t\t\t`The error occured during data gathering of ${prefix}.${daily.key}`,\n\t\t\t);\n\t\t}\n\t}\n\n\treturn uuids;\n}\n\nfunction prepareBaseDailies() {\n\tBUILTINS_UUIDS = prepareDailies(BUILTINS_DAILIES, \"dailies\");\n}\n\nexport let CUSTOM_DAILIES = [];\n\nexport async function parseCustomDailies() {\n\tUUIDS.clear();\n\n\tCUSTOM_DAILIES = [];\n\n\tconst customs = getSetting(\"customDailies\");\n\tfor (const { key, code } of customs) {\n\t\ttry {\n\t\t\tconst fn = new AsyncFunction(code);\n\t\t\tconst daily = await fn();\n\t\t\tif (!checkCustomDaily(daily, true)) continue;\n\t\t\tCUSTOM_DAILIES.push(daily);\n\t\t} catch (err) {\n\t\t\terror(\"error.unexpected\");\n\t\t\tconsole.error(err);\n\t\t\tconsole.error(\n\t\t\t\t`The error occured during call of custom function for ${key}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tfor (const [uuid, daily] of BUILTINS_UUIDS.entries()) {\n\t\tUUIDS.set(uuid, daily);\n\t}\n\n\tconst CUSTOM_UUIDS = prepareDailies(CUSTOM_DAILIES, \"custom\");\n\tfor (const [uuid, daily] of CUSTOM_UUIDS.entries()) {\n\t\tUUIDS.set(uuid, daily);\n\t}\n}\n\nfunction prepareDailyFilters() {\n\tconst filters = getSetting(\"filters\").trim();\n\tif (!filters) {\n\t\tDAILY_FILTERS = [];\n\t}\n\n\ttry {\n\t\tDAILY_FILTERS = filters\n\t\t\t.split(\",\")\n\t\t\t.map((s) => s.trim())\n\t\t\t.filter(Boolean);\n\t} catch (err) {\n\t\terror(\"error.unexpected\");\n\t\tconsole.error(err);\n\t\tconsole.error(\"The error occured while trying to parse the daily filters\");\n\t}\n}\n\nexport async function prepareAllDailies() {\n\tprepareDailyFilters();\n\tprepareBaseDailies();\n\tawait parseCustomDailies();\n}\n\nexport function checkCustomDaily(daily, warning = false) {\n\tif (!DEPRECATED_CUSTOM_DAILIES.includes(daily.key)) return true;\n\tif (warning && game.user.isGM)\n\t\twarn(\n\t\t\t\"deprecated.custom.key\",\n\t\t\t{ name: daily.label.trim() || daily.key },\n\t\t\ttrue,\n\t\t);\n\treturn false;\n}\n\nexport function getDailies(actor) {\n\tconst dailies = {};\n\n\tfor (const item of actor.items) {\n\t\tconst sourceId = getSourceId(item);\n\t\tif (!sourceId || (item.isOfType(\"physical\") && item.isInvested === false))\n\t\t\tcontinue;\n\n\t\tconst entry = UUIDS.get(sourceId);\n\t\tif (!entry) continue;\n\n\t\tconst { daily, index, condition } = entry;\n\t\ttry {\n\t\t\tif (typeof condition === \"function\" && !condition({ actor, item, utils }))\n\t\t\t\tcontinue;\n\n\t\t\tdailies[daily.key] ??= deepClone(daily);\n\n\t\t\tif (index === undefined) dailies[daily.key].item = item;\n\t\t\telse dailies[daily.key].children[index].item = item;\n\t\t} catch (err) {\n\t\t\terror(\"error.unexpected\");\n\t\t\tconsole.error(err);\n\t\t\tconsole.error(`The error occured during data gathering of ${daily.key}`);\n\t\t}\n\t}\n\n\treturn Object.values(dailies).filter(\n\t\t(daily) => daily.item && daily.item instanceof Item,\n\t);\n}\n\nexport function getDailyFromSourceId(sourceId) {\n\treturn UUIDS.get(sourceId)?.daily;\n}\n", "export function getFamiliarPack() {\n\treturn game.packs.get(\"pf2e.familiar-abilities\");\n}\n\nexport function familiarUUID(id) {\n\treturn `Compendium.pf2e.familiar-abilities.Item.${id}`;\n}\n", "import {\n\tPredicatePF2e,\n\tcapitalize,\n\tgetFlag,\n\thasLocalization,\n\tlocalize,\n} from \"module-api\";\nimport { utils } from \"../../api\";\n\nconst templateOrders = {\n\tselect: 100,\n\tcombo: 80,\n\trandom: 60,\n\talert: 40,\n\tinput: 20,\n\tdrop: 0,\n};\n\nexport async function getTemplate({\n\tchildren = [],\n\tkey,\n\titem,\n\tprepare,\n\tlabel,\n\trows = [],\n}) {\n\tconst actor = this.actor;\n\n\tthis.saved[key] = getFlag(actor, key) ?? {};\n\n\tthis.rows[key] = {};\n\n\tthis.children[key] = children.reduce((children, { slug, item }) => {\n\t\tchildren[slug] = item;\n\t\treturn children;\n\t}, {});\n\n\tconst prepareArgs = {\n\t\tactor,\n\t\titem,\n\t\tchildren: this.children[key],\n\t\tutils,\n\t};\n\n\tthis.custom[key] = (await prepare?.(prepareArgs)) || {};\n\tconst custom = this.custom[key];\n\n\tthis.dailyArgs[key] = {\n\t\t...prepareArgs,\n\t\tcustom,\n\t};\n\tconst dailyArgs = this.dailyArgs[key];\n\n\tlet groupLabel = await getProcessedValue(label, dailyArgs);\n\tconst labeled = groupLabel\n\t\t? `label.${groupLabel}`\n\t\t: key.startsWith(\"dailies.\")\n\t\t  ? `label.${key.slice(8)}`\n\t\t  : undefined;\n\tif (labeled && hasLocalization(labeled)) groupLabel = localize(labeled);\n\n\tthis.predicate[key] = children\n\t\t.filter((child) => child.item)\n\t\t.map((child) => child.slug);\n\n\tconst template = {\n\t\tlabel: groupLabel ? game.i18n.localize(groupLabel) : item.name,\n\t\trows: [],\n\t};\n\n\tfor (const row of rows) {\n\t\tthis.rows[key][row.slug] = row;\n\n\t\tconst {\n\t\t\ttype,\n\t\t\tslug,\n\t\t\tchildPredicate = [],\n\t\t\tcondition,\n\t\t\tlabel,\n\t\t\tsave,\n\t\t\tunique,\n\t\t\torder,\n\t\t} = row;\n\n\t\tif (\n\t\t\tchildPredicate.length &&\n\t\t\t!PredicatePF2e.test(childPredicate, this.predicate[key])\n\t\t)\n\t\t\tcontinue;\n\t\tif (condition && !(await condition(dailyArgs))) continue;\n\n\t\tconst savedRow =\n\t\t\tsave === false || type === \"random\" ? undefined : this.saved[key][slug];\n\t\tconst rowLabel = await getProcessedValue(label, dailyArgs);\n\t\tconst value =\n\t\t\tsavedRow === undefined\n\t\t\t\t? \"\"\n\t\t\t\t: typeof savedRow !== \"object\"\n\t\t\t\t  ? savedRow\n\t\t\t\t  : \"name\" in savedRow\n\t\t\t\t\t  ? savedRow.name\n\t\t\t\t\t  : savedRow.selected;\n\n\t\tconst rowTemplate = {\n\t\t\tlabel: rowLabel ? game.i18n.localize(rowLabel) : \"\",\n\t\t\tvalue,\n\t\t\torder: order ?? templateOrders[type],\n\t\t\tdata: {\n\t\t\t\ttype,\n\t\t\t\tdaily: key,\n\t\t\t\trow: slug,\n\t\t\t\t...(unique ? { unique } : \"\"),\n\t\t\t},\n\t\t};\n\n\t\tif (isComboRow(row) || isSelectRow(row) || isRandomRow(row)) {\n\t\t\tconst tmp = (await getProcessedValue(row.options, dailyArgs)) ?? [];\n\t\t\tif (type !== \"combo\" && !tmp.length) continue;\n\n\t\t\tconst labelize =\n\t\t\t\t(typeof row.labelizer === \"function\" && row.labelizer(dailyArgs)) ||\n\t\t\t\t((value) => capitalize(value));\n\t\t\trowTemplate.options = tmp.map((value) =>\n\t\t\t\ttypeof value === \"string\" ? { value, label: labelize(value) } : value,\n\t\t\t);\n\n\t\t\tif (isComboRow(row)) {\n\t\t\t\trowTemplate.selected = rowTemplate.value;\n\t\t\t\trowTemplate.data.input = savedRow?.input ?? true;\n\n\t\t\t\tif (!rowTemplate.data.input && tmp.includes(rowTemplate.selected)) {\n\t\t\t\t\trowTemplate.value = labelize(rowTemplate.selected);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isDropRow(row)) {\n\t\t\trowTemplate.data.uuid = savedRow?.uuid ?? \"\";\n\t\t} else if (isAlerRow(row)) {\n\t\t\trowTemplate.value =\n\t\t\t\ttypeof row.message === \"function\"\n\t\t\t\t\t? await row.message(dailyArgs)\n\t\t\t\t\t: row.message;\n\t\t}\n\n\t\ttemplate.rows.push(rowTemplate);\n\t}\n\n\treturn template;\n}\n\nasync function getProcessedValue(obj, args) {\n\tif (typeof obj === \"function\") return await obj(args);\n\treturn obj;\n}\n\nfunction isComboRow(row) {\n\treturn row.type === \"combo\";\n}\n\nfunction isSelectRow(row) {\n\treturn row.type === \"select\";\n}\n\nfunction isRandomRow(row) {\n\treturn row.type === \"random\";\n}\n\nfunction isDropRow(row) {\n\treturn row.type === \"drop\";\n}\n\nfunction isAlerRow(row) {\n\treturn row.type === \"alert\";\n}\n", "import { sequenceArray } from \"module-api\";\n\nexport function getSimplifiableValue(actor, value, fallback) {\n\tif (value === undefined) return fallback;\n\tif (typeof value === \"number\") return value;\n\tif (value === \"level\") return actor.level;\n\tif (value === \"half\") return Math.max(1, Math.floor(actor.level / 2));\n\tconst numbered = Number(value);\n\treturn Number.isNaN(numbered) ? fallback : numbered;\n}\n\nexport async function parseFilter(filter) {\n\treturn {\n\t\ttype: filter.type,\n\t\tsearch: await (filter.type === \"feat\"\n\t\t\t? parseFeatFilter(this.actor, filter.search)\n\t\t\t: parseSpellFilter(this.actor, filter.search)),\n\t\tdrop: filter.drop,\n\t};\n}\n\nfunction checkFilter(selected, checkbox) {\n\tif (!selected?.length) return;\n\n\tcheckbox.selected = selected;\n\tcheckbox.isExpanded = true;\n\n\tfor (const x of selected) {\n\t\tcheckbox.options[x].selected = true;\n\t}\n}\n\nfunction setTraits(searchTraits, dataTraits) {\n\tconst traits = getFilterTraits(searchTraits);\n\tif (traits?.selected.length) {\n\t\tdataTraits.conjunction = traits.conjunction;\n\t\tdataTraits.selected = traits.selected;\n\t}\n}\n\nexport function getFilterTraits(traits) {\n\tif (!traits) return;\n\n\tconst selected = Array.isArray(traits) ? traits : traits.selected;\n\tif (!selected?.length) return;\n\n\treturn {\n\t\tselected: selected.map((x) => (typeof x === \"string\" ? { value: x } : x)),\n\t\tconjunction: (!Array.isArray(traits) && traits.conjunction) || \"and\",\n\t};\n}\n\nasync function parseSpellFilter(actor, search) {\n\tconst data = await game.pf2e.compendiumBrowser.tabs.spell.getFilterData();\n\n\tcheckFilter(search.category, data.checkboxes.category);\n\tcheckFilter(search.school, data.checkboxes.school);\n\tcheckFilter(search.traditions, data.checkboxes.traditions);\n\tcheckFilter(search.rarity, data.checkboxes.rarity);\n\tcheckFilter(search.source, data.checkboxes.source);\n\n\tsetTraits(search.traits, data.multiselects.traits);\n\n\tconst level = getSpellFilterLevel(actor, search.level);\n\tif (level?.length) checkFilter(level, data.checkboxes.rank);\n\n\treturn data;\n}\n\nasync function parseFeatFilter(actor, search) {\n\tconst data = await game.pf2e.compendiumBrowser.tabs.feat.getFilterData();\n\n\tcheckFilter(search.category, data.checkboxes.category);\n\tcheckFilter(search.skills, data.checkboxes.skills);\n\tcheckFilter(search.rarity, data.checkboxes.rarity);\n\tcheckFilter(search.source, data.checkboxes.source);\n\n\tsetTraits(search.traits, data.multiselects.traits);\n\n\tconst level = getFeatFilterLevel(actor, search.level);\n\tif (level) {\n\t\tdata.sliders.level.values.min = level.min;\n\t\tdata.sliders.level.values.max = level.max;\n\t\tdata.sliders.level.isExpanded = true;\n\t}\n\n\treturn data;\n}\n\nexport function getSpellFilterLevel(actor, level) {\n\tif (Array.isArray(level)) return level;\n\n\tconst simplified = getSimplifiableValue(actor, level);\n\tif (simplified) return sequenceArray(1, simplified);\n}\n\nexport function getFeatFilterLevel(actor, level) {\n\tif (level === undefined) return;\n\n\tif (typeof level === \"object\") {\n\t\treturn {\n\t\t\tmin: getSimplifiableValue(actor, level.min, 0),\n\t\t\tmax: getSimplifiableValue(actor, level.min, 20),\n\t\t};\n\t}\n\n\treturn { min: 0, max: getSimplifiableValue(actor, level, 20) };\n}\n", "import { sluggify, subLocalize } from \"module-api\";\nimport { utils } from \"../../api\";\nimport {\n\tgetFeatFilterLevel,\n\tgetFilterTraits,\n\tgetSpellFilterLevel,\n} from \"./shared\";\n\nconst localize = subLocalize(\"interface.error.drop\");\n\nexport async function onDropFeat(item, target, filter) {\n\tif (!item.isOfType(\"feat\")) return localize(\"notFeat\");\n\n\tconst { search, drop } = filter;\n\n\tif (search.category?.length && !search.category.includes(item.category)) {\n\t\treturn localize.warn(\"wrongType\", {\n\t\t\ttypes: localizeAll(\"featCategories\", search.category),\n\t\t});\n\t}\n\n\tif (search.traits) {\n\t\tconst traits = getFilterTraits(search.traits);\n\n\t\tif (traits?.selected.length) {\n\t\t\tconst testFn = traits.conjunction === \"or\" ? \"some\" : \"every\";\n\t\t\tconst test = traits.selected[testFn](\n\t\t\t\t(trait) =>\n\t\t\t\t\tNumber(trait.not ?? false) - Number(item.traits.has(trait.value)),\n\t\t\t);\n\t\t\tif (!test) return localize.warn(\"wrongTraits\");\n\t\t}\n\t}\n\n\tif (search.skills?.length) {\n\t\tconst translatedSkills = utils.getTranslatedSkills(true);\n\t\tconst prerequisites = item.system.prerequisites.value.map((prerequisite) =>\n\t\t\tprerequisite.value.toLocaleLowerCase(),\n\t\t);\n\t\tconst test = search.skills.some((skill) =>\n\t\t\tprerequisites.some(\n\t\t\t\t(prerequisite) =>\n\t\t\t\t\tprerequisite.includes(skill) ||\n\t\t\t\t\tprerequisite.includes(translatedSkills[skill]),\n\t\t\t),\n\t\t);\n\t\tif (!test)\n\t\t\treturn localize.warn(\"wrongSkill\", {\n\t\t\t\tskills: localizeAll(\"skillList\", search.skills),\n\t\t\t});\n\t}\n\n\tif (\n\t\tsearch.rarity?.length &&\n\t\t!search.rarity.includes(item.system.traits.rarity)\n\t) {\n\t\treturn localize.warn(\"wrongRarity\", {\n\t\t\trarities: localizeAll(\"rarityTraits\", search.rarity),\n\t\t});\n\t}\n\n\tif (\n\t\tsearch.source?.length &&\n\t\t!search.source.includes(sluggify(item.system.source.value))\n\t) {\n\t\treturn localize.warn(\"wrongSource\", { sources: search.source.join(\", \") });\n\t}\n\n\tconst level = getFeatFilterLevel(this.actor, search.level);\n\tif (level) {\n\t\tconst itemLevel = item.level;\n\t\tif (itemLevel < level.min)\n\t\t\treturn localize.warn(\"wrongLevelLow\", { level: `min: ${level.min}` });\n\t\tif (itemLevel > level.max)\n\t\t\treturn localize.warn(\"wrongLevelHigh\", { level: `max: ${level.max}` });\n\t}\n\n\tif (drop) {\n\t\tconst args = this.dailyArgs[target.dataset.daily];\n\t\tif (args) {\n\t\t\tconst result = await drop(item, args);\n\t\t\tif (typeof result === \"object\") {\n\t\t\t\tif (result.data) return game.i18n.format(result.error, result.data);\n\t\t\t\treturn game.i18n.localize(result.error);\n\t\t\t}\n\n\t\t\tif (result === false) {\n\t\t\t\treturn localize.warn(\"wrongCustom\");\n\t\t\t}\n\t\t}\n\t}\n\n\tonDropItem(item, target);\n}\n\nexport async function onDropSpell(item, target, filter) {\n\tif (!item.isOfType(\"spell\")) return localize(\"notSpell\");\n\n\tconst { search, drop } = filter;\n\n\tif (search.category?.length) {\n\t\tconst categories = search.category\n\t\t\t.map((x) =>\n\t\t\t\tgame.i18n.localize(\n\t\t\t\t\tx === \"cantrip\"\n\t\t\t\t\t\t? \"PF2E.SpellCantripLabel\"\n\t\t\t\t\t\t: CONFIG.PF2E.preparationType[x],\n\t\t\t\t),\n\t\t\t)\n\t\t\t.join(\", \");\n\n\t\tif (\n\t\t\t(item.isCantrip && !search.category.includes(\"cantrip\")) ||\n\t\t\t(item.isFocusSpell && !search.category.includes(\"focus\")) ||\n\t\t\t(item.isRitual && !search.category.includes(\"ritual\")) ||\n\t\t\t(!item.isCantrip &&\n\t\t\t\t!item.isFocusSpell &&\n\t\t\t\t!item.isRitual &&\n\t\t\t\t!search.category.includes(\"spell\"))\n\t\t) {\n\t\t\treturn localize.warn(\"wrongCategory\", { categories });\n\t\t}\n\t}\n\n\tif (search.traits) {\n\t\tconst traits = getFilterTraits(search.traits);\n\n\t\tif (traits?.selected.length) {\n\t\t\tconst testFn = traits.conjunction === \"or\" ? \"some\" : \"every\";\n\t\t\tconst test = traits.selected[testFn](\n\t\t\t\t(trait) =>\n\t\t\t\t\tNumber(trait.not ?? false) - Number(item.traits.has(trait.value)),\n\t\t\t);\n\t\t\tif (!test) return localize.warn(\"wrongTraits\");\n\t\t}\n\t}\n\n\tif (search.traditions?.length) {\n\t\tif (\n\t\t\t!search.traditions.some((tradition) => item.traditions.has(tradition))\n\t\t) {\n\t\t\treturn localize.warn(\"wrongTradition\", {\n\t\t\t\ttraditions: localizeAll(\"magicTraditions\", search.traditions),\n\t\t\t});\n\t\t}\n\t}\n\n\tconst level = getSpellFilterLevel(this.actor, search.level);\n\tif (level?.length && !level.includes(item.level)) {\n\t\treturn localize.warn(\"wrongLevel\", { levels: level.join(\", \") });\n\t}\n\n\tif (search.school?.length && !search.school.includes(item.school)) {\n\t\treturn localize.warn(\"wrongSchool\", {\n\t\t\tschools: localizeAll(\"magicSchools\", search.school),\n\t\t});\n\t}\n\n\tif (\n\t\tsearch.rarity?.length &&\n\t\t!search.rarity.includes(item.system.traits.rarity)\n\t) {\n\t\treturn localize.warn(\"wrongRarity\", {\n\t\t\trarities: localizeAll(\"rarityTraits\", search.rarity),\n\t\t});\n\t}\n\n\tif (\n\t\tsearch.source?.length &&\n\t\t!search.source.includes(sluggify(item.system.source.value))\n\t) {\n\t\treturn localize.warn(\"wrongSource\", { sources: search.source.join(\", \") });\n\t}\n\n\tif (drop) {\n\t\tconst args = this.dailyArgs[target.dataset.daily];\n\t\tif (args) {\n\t\t\tconst result = await drop(item, args);\n\t\t\tif (typeof result === \"object\") {\n\t\t\t\tif (result.data) {\n\t\t\t\t\treturn ui.notifications.warn(\n\t\t\t\t\t\tgame.i18n.format(result.error, result.data),\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn ui.notifications.warn(game.i18n.localize(result.error));\n\t\t\t}\n\n\t\t\tif (result === false) {\n\t\t\t\treturn localize.warn(\"wrongCustom\");\n\t\t\t}\n\t\t}\n\t}\n\n\tonDropItem(item, target);\n}\n\nfunction localizeAll(config, list) {\n\tconst localized = list.map((key) =>\n\t\tgame.i18n.localize(CONFIG.PF2E[config][key]),\n\t);\n\treturn localized.join(\", \");\n}\n\nexport function onDropItem(item, target) {\n\ttarget.value = item.name;\n\ttarget.dataset.uuid = item.uuid;\n\ttarget.nextElementSibling.nextElementSibling.classList.remove(\"disabled\");\n}\n", "import {\n\tMODULE,\n\tcreateFancyLink,\n\terror,\n\tgetFlag,\n\tgetSetting,\n\thasLocalization,\n\tlocalize,\n\tsluggify,\n\tsubLocalize,\n} from \"module-api\";\nimport { createUpdateCollection, utils } from \"../../api\";\nimport { familiarUUID, getFamiliarPack } from \"../../data/familiar\";\nimport {\n\tDEFAULT_REGEX_RANKS,\n\tgetBestSpellcastingEntryForStaves,\n\tgetMaxSlotRankForStaves,\n} from \"../../data/staves\";\nimport { getSpellcastingEntriesSortBounds } from \"../../spellcasting\";\n\nexport async function processData() {\n\tconst actor = this.actor;\n\tconst dailies = this.dailies;\n\tconst fields = getFields.call(this);\n\tconst addItems = [];\n\tconst addRules = new Map();\n\tconst [updateItems, updateItem] = createUpdateCollection();\n\tconst flags = {};\n\tconst msg = subLocalize(\"message\");\n\n\tlet addedSpells = false;\n\tlet chatContent = \"\";\n\n\tconst getRules = (item) => {\n\t\tconst id = item.id;\n\t\tconst existing = addRules.get(id);\n\t\tif (existing) return existing;\n\n\t\tconst rules = deepClone(item._source.system.rules);\n\n\t\tfor (let i = rules.length - 1; i >= 0; i--) {\n\t\t\tif (MODULE.id in rules[i]) rules.splice(i, 1);\n\t\t}\n\n\t\taddRules.set(id, rules);\n\t\treturn rules;\n\t};\n\n\tconst messages = {\n\t\tlanguages: { order: 80, messages: [] },\n\t\tskills: { order: 70, messages: [] },\n\t\tresistances: { order: 60, messages: [] },\n\t\tfeats: { order: 50, messages: [] },\n\t\tspells: { order: 40, messages: [] },\n\t\tscrolls: { order: 30, messages: [] },\n\t};\n\n\tconst rawMessages = [];\n\n\tconst messageObj = {\n\t\tadd: (group, options) => {\n\t\t\tmessages[group] ??= { order: 0, messages: [] };\n\t\t\tmessages[group].messages.push(options);\n\t\t},\n\t\taddGroup: (group, order, label) => {\n\t\t\tmessages[group] ??= { label, order: order ?? 1, messages: [] };\n\t\t},\n\t\taddRaw: (message, order = 1) => {\n\t\t\trawMessages.push({ order, message });\n\t\t},\n\t};\n\n\tif (actor.familiar && fields[\"dailies.familiar\"]) {\n\t\tconst familiar = actor.familiar;\n\t\tconst pack = getFamiliarPack();\n\t\tconst abilities = [];\n\n\t\t// we remove old abilities\n\t\tconst ids = familiar.itemTypes.action.map((item) => item.id);\n\t\tif (ids.length) familiar.deleteEmbeddedDocuments(\"Item\", ids);\n\n\t\tmessageObj.addGroup(\"familiar\", 20);\n\n\t\tfor (const field of Object.values(fields[\"dailies.familiar\"])) {\n\t\t\tconst value = field.value;\n\t\t\tconst isCustom = value.includes(\".\");\n\t\t\tconst item = await (isCustom ? fromUuid(value) : pack.getDocument(value));\n\t\t\tif (!item || !item.isOfType(\"action\")) continue;\n\n\t\t\tconst source = item.toObject();\n\t\t\tif (source) {\n\t\t\t\tabilities.push(source);\n\t\t\t\tmessageObj.add(\"familiar\", {\n\t\t\t\t\tuuid: isCustom ? value : familiarUUID(value),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (abilities.length) familiar.createEmbeddedDocuments(\"Item\", abilities);\n\t}\n\n\tif (fields[\"dailies.staff\"]) {\n\t\tconst staffField = fields[\"dailies.staff\"];\n\t\tconst staffID = staffField.staffID.value;\n\t\tconst staff = actor.items.get(staffID);\n\t\tconst makeshift = staffField.staffID.makeshift === \"true\";\n\t\tconst maxStaffCharges = getMaxSlotRankForStaves(actor);\n\n\t\tif (staff && (maxStaffCharges || makeshift)) {\n\t\t\tconst uuids = [];\n\t\t\tconst ranks = getSetting(\"staff-regex\").trim() || DEFAULT_REGEX_RANKS;\n\t\t\tconst ranksRegex = new RegExp(\n\t\t\t\t`<strong>\\\\s*(?<rank>(?:${ranks}))\\\\s*<\\/strong>.+?(?<uuids>@(?:UUID|Compendium)\\[[a-zA-Z0-9-.]+\\].+?)\\n`,\n\t\t\t\t\"gi\",\n\t\t\t);\n\n\t\t\tlet rankMatch = ranksRegex.exec(staff.description);\n\t\t\twhile (rankMatch !== null) {\n\t\t\t\tconst rankStr = rankMatch.groups.rank.trim().replace(/\\D+/, \"\") || \"0\";\n\t\t\t\tconst rank = Math.clamped(parseInt(rankStr), 0, 10);\n\t\t\t\tconst uuidRegex =\n\t\t\t\t\t/@(?<protocole>UUID|Compendium)\\[(?<uuid>[a-zA-Z0-9-.]+)\\]/g;\n\n\t\t\t\tlet uuidMatch = uuidRegex.exec(rankMatch.groups.uuids);\n\t\t\t\twhile (uuidMatch !== null) {\n\t\t\t\t\tlet uuid = uuidMatch.groups.uuid;\n\t\t\t\t\tif (uuidMatch.groups.protocole === \"Compendium\") {\n\t\t\t\t\t\tif (!uuid.startsWith(\"Compendium.\")) uuid = `Compendium.${uuid}`;\n\t\t\t\t\t}\n\t\t\t\t\tif (fromUuidSync(uuid)) {\n\t\t\t\t\t\tuuids.push({ rank, uuid });\n\t\t\t\t\t}\n\t\t\t\t\tuuidMatch = uuidRegex.exec(rankMatch.groups.uuids);\n\t\t\t\t}\n\n\t\t\t\trankMatch = ranksRegex.exec(staff.description);\n\t\t\t}\n\n\t\t\tif (uuids.length) {\n\t\t\t\tlet overcharge = 0;\n\n\t\t\t\tconst expendedSpells = [];\n\t\t\t\tconst expendedSlots = makeshift ? [1, 2, 3] : [1];\n\t\t\t\tconst flexibleLabel = localize(\"interface.staves.flexible\");\n\t\t\t\tconst emptyLabel = localize(\"interface.staves.empty\");\n\t\t\t\tconst slotsUpdates = {};\n\n\t\t\t\tfor (const i of expendedSlots) {\n\t\t\t\t\tconst expendField = staffField[`expend${i}`];\n\t\t\t\t\tconst data = expendField?.optionData;\n\t\t\t\t\tif (!data) continue;\n\n\t\t\t\t\tconst entryId = data.entry;\n\t\t\t\t\tconst entry = actor.items.get(entryId);\n\t\t\t\t\tif (!entry) continue;\n\n\t\t\t\t\tconst rank = Number(data.rank);\n\t\t\t\t\tconst slot = entry._source.system.slots[`slot${rank}`];\n\n\t\t\t\t\tif (data.type === \"spell\") {\n\t\t\t\t\t\tconst prepared = deepClone(slot.prepared);\n\t\t\t\t\t\tconst preparedSlot = prepared[data.index];\n\t\t\t\t\t\tif (slot.max < 1 || preparedSlot.expended) return;\n\n\t\t\t\t\t\tovercharge += rank;\n\n\t\t\t\t\t\tpreparedSlot.expended = true;\n\n\t\t\t\t\t\tupdateItem({\n\t\t\t\t\t\t\t_id: entryId,\n\t\t\t\t\t\t\t[`system.slots.slot${rank}.prepared`]: prepared,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst spell = actor.items.get(preparedSlot.id);\n\t\t\t\t\t\texpendedSpells.push({\n\t\t\t\t\t\t\tuuid: spell?.uuid,\n\t\t\t\t\t\t\tname: spell?.name ?? emptyLabel,\n\t\t\t\t\t\t\trank,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (slot.max < 1 || slot.value < 1) continue;\n\n\t\t\t\t\t\tslotsUpdates[entryId] ??= {};\n\t\t\t\t\t\tslotsUpdates[entryId][rank] ??= slot.value;\n\n\t\t\t\t\t\tconst currentValue = slotsUpdates[entryId][rank];\n\n\t\t\t\t\t\tif (currentValue < 1) continue;\n\n\t\t\t\t\t\tovercharge += rank;\n\n\t\t\t\t\t\tupdateItem({\n\t\t\t\t\t\t\t_id: entryId,\n\t\t\t\t\t\t\t[`system.slots.slot${rank}.value`]: currentValue - 1,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tslotsUpdates[entryId][rank] -= 1;\n\n\t\t\t\t\t\texpendedSpells.push({\n\t\t\t\t\t\t\tname: flexibleLabel,\n\t\t\t\t\t\t\trank,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bestEntry = getBestSpellcastingEntryForStaves(actor);\n\n\t\t\t\tif (bestEntry) {\n\t\t\t\t\tconst { ability, tradition, proficiency } = bestEntry;\n\n\t\t\t\t\tconst sort = (() => {\n\t\t\t\t\t\tconst { min, max } = getSpellcastingEntriesSortBounds(actor);\n\t\t\t\t\t\treturn getSetting(\"staff-sort\") === \"bottom\"\n\t\t\t\t\t\t\t? max + 10000\n\t\t\t\t\t\t\t: min - 10000;\n\t\t\t\t\t})();\n\n\t\t\t\t\tconst entrySource = {\n\t\t\t\t\t\ttype: \"spellcastingEntry\",\n\t\t\t\t\t\tname: staff.name,\n\t\t\t\t\t\tsort,\n\t\t\t\t\t\tsystem: {\n\t\t\t\t\t\t\tability,\n\t\t\t\t\t\t\tprepared: { value: \"charge\" },\n\t\t\t\t\t\t\tshowSlotlessLevels: { value: false },\n\t\t\t\t\t\t\tshowUnpreparedSpells: { value: false },\n\t\t\t\t\t\t\tproficiency,\n\t\t\t\t\t\t\ttradition,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tflags: {\n\t\t\t\t\t\t\t[MODULE.id]: {\n\t\t\t\t\t\t\t\ttype: \"staff\",\n\t\t\t\t\t\t\t\tstaff: {\n\t\t\t\t\t\t\t\t\tcharges: maxStaffCharges + overcharge,\n\t\t\t\t\t\t\t\t\tstaveID: staffID,\n\t\t\t\t\t\t\t\t\tovercharge,\n\t\t\t\t\t\t\t\t\tmakeshift,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\taddItems.push(entrySource);\n\n\t\t\t\t\tawait Promise.all(\n\t\t\t\t\t\tuuids.map(async ({ rank, uuid }) => {\n\t\t\t\t\t\t\tconst source = await utils.createSpellSource(uuid);\n\t\t\t\t\t\t\tsetProperty(source, `flags.${MODULE.id}.entry`, {\n\t\t\t\t\t\t\t\tlevel: rank,\n\t\t\t\t\t\t\t\ttype: \"staff\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\taddItems.push(source);\n\t\t\t\t\t\t}),\n\t\t\t\t\t);\n\n\t\t\t\t\tmessageObj.addGroup(\n\t\t\t\t\t\t\"staff\",\n\t\t\t\t\t\t45,\n\t\t\t\t\t\tlocalize(\n\t\t\t\t\t\t\t`staves.message.${overcharge ? \"withExpend\" : \"noExpend\"}`,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmakeshift: makeshift ? localize(\"staves.makeshift\") : \"\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t),\n\t\t\t\t\t);\n\t\t\t\t\tmessageObj.add(\"staff\", { uuid: staff.uuid });\n\t\t\t\t\tfor (const { uuid, name, rank } of expendedSpells) {\n\t\t\t\t\t\tconst rankLabel = utils.spellRankLabel(rank);\n\t\t\t\t\t\tconst label = `${name} (${rankLabel})`;\n\n\t\t\t\t\t\tmessageObj.add(\"staff\", {\n\t\t\t\t\t\t\tuuid,\n\t\t\t\t\t\t\tlabel: uuid\n\t\t\t\t\t\t\t\t? label\n\t\t\t\t\t\t\t\t: `<span class=\"fake-link\">\n\t\t\t\t\t\t\t\t\t<i class='fa-solid fa-sparkles'></i>\n\t\t\t\t\t\t\t\t\t${label}\n\t\t\t\t\t\t\t\t</span>`,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const { item, key, process } of dailies) {\n\t\tif (!fields[key]) continue;\n\n\t\tconst dailyArgs = this.dailyArgs[key];\n\n\t\ttry {\n\t\t\tawait process({\n\t\t\t\t...dailyArgs,\n\t\t\t\tfields: fields[key],\n\t\t\t\tmessages: messageObj,\n\t\t\t\taddItem: (source) => addItems.push(source),\n\t\t\t\tupdateItem,\n\t\t\t\tremoveRule: (signature, parent) => {\n\t\t\t\t\tconst rules = getRules(parent ?? item);\n\t\t\t\t\tfor (let i = rules.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst rule = rules[i];\n\t\t\t\t\t\tif (signature(rule)) {\n\t\t\t\t\t\t\trules.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taddRule: (source, parent) => {\n\t\t\t\t\tsource[MODULE.id] = true;\n\t\t\t\t\tgetRules(parent ?? item).push(source);\n\t\t\t\t},\n\t\t\t\taddFeat: (source, parent) => {\n\t\t\t\t\tconst parentItem = parent ?? item;\n\t\t\t\t\tif (parentItem.isOfType(\"feat\")) {\n\t\t\t\t\t\tconst parentId = parentItem.id;\n\t\t\t\t\t\tsetProperty(source, \"flags.pf2e.grantedBy\", {\n\t\t\t\t\t\t\tid: parentId,\n\t\t\t\t\t\t\tonDelete: \"cascade\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetProperty(source, `flags.${MODULE.id}.grantedBy`, parentId);\n\t\t\t\t\t}\n\t\t\t\t\taddItems.push(source);\n\t\t\t\t},\n\t\t\t\taddSpell: (source, level) => {\n\t\t\t\t\tsetProperty(source, `flags.${MODULE.id}.entry`, {\n\t\t\t\t\t\tlevel: level,\n\t\t\t\t\t\ttype: \"fallback\",\n\t\t\t\t\t});\n\t\t\t\t\taddItems.push(source);\n\t\t\t\t\taddedSpells = true;\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (err) {\n\t\t\terror(\"error.unexpected\");\n\t\t\tconsole.error(err);\n\t\t\tconsole.error(`The error occured during processing of ${key}`);\n\t\t}\n\t}\n\n\tfor (const [key, rowFields] of Object.entries(fields)) {\n\t\tconst rows = this.rows[key];\n\t\tif (!rows) continue;\n\n\t\tfor (const { row, type, input, value, uuid } of Object.values(rowFields)) {\n\t\t\tif (type === \"random\" || rows[row]?.save === false) continue;\n\n\t\t\tflags[key] ??= {};\n\t\t\tconst flag = flags[key];\n\n\t\t\tif (type === \"combo\") {\n\t\t\t\tflag[row] = { input: input === \"true\", selected: value };\n\t\t\t} else if (type === \"drop\") {\n\t\t\t\tflag[row] = { uuid: uuid, name: value };\n\t\t\t} else {\n\t\t\t\tflag[row] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (const [id, rules] of addRules) {\n\t\tupdateItem({ _id: id, \"system.rules\": rules });\n\t}\n\n\tif (addedSpells) {\n\t\tconst entrySource = {\n\t\t\ttype: \"spellcastingEntry\",\n\t\t\tname: localize(\"spellEntry.name\"),\n\t\t\tsystem: {\n\t\t\t\tprepared: { value: \"innate\" },\n\t\t\t\tshowSlotlessLevels: { value: false },\n\t\t\t\tshowUnpreparedSpells: { value: false },\n\t\t\t\tproficiency: {\n\t\t\t\t\tvalue: 1,\n\t\t\t\t\tslug: actor.classDC?.slug || actor.class?.slug || undefined,\n\t\t\t\t},\n\t\t\t},\n\t\t\tflags: {\n\t\t\t\t[MODULE.id]: {\n\t\t\t\t\ttype: \"fallback\",\n\t\t\t\t},\n\t\t\t},\n\t\t};\n\t\taddItems.push(entrySource);\n\t}\n\n\tfor (const source of addItems) {\n\t\tconst alreadyTemp = getProperty(source, \"system.temporary\") === true;\n\t\tif (!alreadyTemp) setProperty(source, `flags.${MODULE.id}.temporary`, true);\n\t}\n\n\tif (addItems.length) {\n\t\tconst items = await actor.createEmbeddedDocuments(\"Item\", addItems);\n\n\t\tfor (const item of items) {\n\t\t\tif (item.isOfType(\"feat\")) {\n\t\t\t\t// we add itemGrants flag to the parent feat to have the cascade effect in the tab\n\t\t\t\tconst parentId = getFlag(item, \"grantedBy\");\n\t\t\t\tif (parentId) {\n\t\t\t\t\tconst slug = sluggify(item.name, { camel: \"dromedary\" });\n\t\t\t\t\tconst path = `flags.pf2e.itemGrants.${slug}`;\n\t\t\t\t\tupdateItem({\n\t\t\t\t\t\t_id: parentId,\n\t\t\t\t\t\t[path]: { id: item.id, onDelete: \"detach\" },\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (item.isOfType(\"spellcastingEntry\")) {\n\t\t\t\t// we add all the newly created spells with 'addSpell' to this spellcasting entry\n\t\t\t\tconst entryType = getFlag(item, \"type\");\n\t\t\t\tconst spells = items.filter(\n\t\t\t\t\t(item) =>\n\t\t\t\t\t\titem.isOfType(\"spell\") &&\n\t\t\t\t\t\tgetFlag(item, \"entry\")?.type === entryType,\n\t\t\t\t);\n\t\t\t\tfor (const spell of spells) {\n\t\t\t\t\tconst { level } = getFlag(spell, \"entry\");\n\t\t\t\t\tconst data = { _id: spell.id, \"system.location.value\": item.id };\n\t\t\t\t\tif (level !== undefined)\n\t\t\t\t\t\tdata[\"system.location.heightenedLevel\"] = level;\n\t\t\t\t\tupdateItem(data);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tawait actor.update({\n\t\t[`flags.${MODULE.id}`]: { ...expandObject(flags), rested: false },\n\t});\n\n\tif (updateItems.size)\n\t\tawait actor.updateEmbeddedDocuments(\"Item\", updateItems.contents);\n\n\trawMessages.sort((a, b) => b.order - a.order);\n\tfor (const { message } of rawMessages) {\n\t\tchatContent += `${message}<hr />`;\n\t}\n\n\tchatContent += await parseMessages(messages, chatContent);\n\tchatContent = chatContent\n\t\t? `${msg(\"changes\")}<hr />${chatContent}`\n\t\t: msg(\"noChanges\");\n\n\tChatMessage.create({\n\t\tcontent: `<div class=\"pf2e-dailies-summary\">${chatContent}</div>`,\n\t\tspeaker: ChatMessage.getSpeaker({ actor }),\n\t});\n}\n\nasync function parseMessages(messages) {\n\tconst msg = subLocalize(\"message\");\n\n\tconst messageList = Object.entries(messages).map(([type, options]) => {\n\t\toptions.label ??= msg.has(type) ? msg(type) : msg(\"gained\", { type });\n\t\treturn options;\n\t});\n\tmessageList.sort((a, b) => b.order - a.order);\n\n\tlet message = \"\";\n\n\tfor (const { label, messages } of messageList) {\n\t\tif (!messages.length) continue;\n\n\t\tif (message) message += \"<hr />\";\n\n\t\tif (label) message += `<p><strong>${label}</strong></p>`;\n\n\t\tfor (let { uuid, selected, label, random } of messages) {\n\t\t\tconst key = `label.${label}`;\n\t\t\tlabel = label && hasLocalization(key) ? localize(key) : label || \"\";\n\n\t\t\tmessage += \"<p>\";\n\t\t\tmessage += uuid\n\t\t\t\t? `${await createFancyLink(uuid, { label })}`\n\t\t\t\t: ` ${label}`;\n\t\t\tif (selected) {\n\t\t\t\tmessage += `<i class=\"fa-solid fa-caret-right\"></i>${selected}`;\n\t\t\t}\n\t\t\tif (random) {\n\t\t\t\tmessage += '<i class=\"fa-solid fa-dice-d20\"></i>';\n\t\t\t}\n\t\t\tmessage += \"</p>\";\n\t\t}\n\t}\n\n\treturn message;\n}\n\nfunction getFields() {\n\tconst elements = this.element\n\t\t.find(\".window-content .content\")\n\t\t.find(\"input:not(.alert), select[data-type]\")\n\t\t.toArray();\n\n\tconst fields = {};\n\n\tfor (const element of elements) {\n\t\tconst field = {\n\t\t\t...element.dataset,\n\t\t\tvalue: element.value,\n\t\t};\n\n\t\tif (field.type === \"combo\" && field.input === \"false\") {\n\t\t\tconst select = element.previousElementSibling;\n\t\t\tfield.value = select.value;\n\t\t\tfield.optionData = select.selectedOptions[0].dataset;\n\t\t}\n\n\t\tif (field.type === \"select\") {\n\t\t\tfield.optionData = element.selectedOptions[0].dataset;\n\t\t}\n\n\t\tfields[field.daily] ??= {};\n\t\tfields[field.daily][field.row] = field;\n\t}\n\n\treturn fields;\n}\n", "import { utils } from \"../api\";\nimport { DAILY_FILTERS, getDailies } from \"../dailies\";\nimport { getFamiliarPack } from \"../data/familiar\";\nimport {\n\tgetMaxSlotRankForStaves,\n\tgetStaves,\n\tisPF2eStavesActive,\n} from \"../data/staves\";\nimport { getPreparedSpellcastingEntriesForStaves } from \"../data/staves\";\nimport { getTemplate } from \"./interface/data\";\nimport { onDropFeat, onDropItem, onDropSpell } from \"./interface/drop\";\nimport { processData } from \"./interface/process\";\nimport { parseFilter } from \"./interface/shared\";\nimport {\n\tgetFlag,\n\tgetItemWithSourceId,\n\tgetSetting,\n\tsetFlag,\n\tsubLocalize,\n\ttemplatePath,\n} from \"module-api\";\n\nconst localize = subLocalize(\"interface\");\n\nconst STAFF_NEXUS = \"Compendium.pf2e.classfeatures.Item.Klb35AwlkNrq1gpB\";\n\nexport class DailiesInterface extends Application {\n\tconstructor(actor, options, message) {\n\t\tsuper(options);\n\t\tthis._actor = actor;\n\t\tthis._dailies = [];\n\t\tthis._dailyArgs = {};\n\t\tthis._saved = {};\n\t\tthis._children = {};\n\t\tthis._custom = {};\n\t\tthis._predicate = {};\n\t\tthis._rows = {};\n\t\tthis._message = message;\n\t}\n\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(Application.defaultOptions, {\n\t\t\tid: \"pf2e-dailies-interface\",\n\t\t\ttemplate: templatePath(\"interface\"),\n\t\t\theight: \"auto\",\n\t\t\twidth: 400,\n\t\t\tsubmitOnClose: false,\n\t\t\tsubmitOnChange: false,\n\t\t\tdragDrop: [\n\t\t\t\t{\n\t\t\t\t\tdropSelector: '[data-droppable=\"true\"]',\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\t}\n\n\tget actor() {\n\t\treturn this._actor;\n\t}\n\n\tget dailies() {\n\t\treturn this._dailies;\n\t}\n\n\tget dailyArgs() {\n\t\treturn this._dailyArgs;\n\t}\n\n\tget saved() {\n\t\treturn this._saved;\n\t}\n\n\tget children() {\n\t\treturn this._children;\n\t}\n\n\tget custom() {\n\t\treturn this._custom;\n\t}\n\n\tget predicate() {\n\t\treturn this._predicate;\n\t}\n\n\tget rows() {\n\t\treturn this._rows;\n\t}\n\n\tasync getData(options) {\n\t\tconst templates = [];\n\t\tconst actor = this._actor;\n\t\tthis._dailies = getDailies(actor);\n\n\t\tif (actor.familiar && !DAILY_FILTERS.includes(\"dailies.familiar\")) {\n\t\t\tconst type = \"dailies.familiar\";\n\t\t\tconst localize = subLocalize(\"label\");\n\t\t\tconst nbAbilities = actor.attributes.familiarAbilities.value;\n\t\t\tconst pack = getFamiliarPack();\n\t\t\tconst flags = getFlag(actor, type) ?? {};\n\n\t\t\tconst template = {\n\t\t\t\tlabel: localize(\"familiar\"),\n\t\t\t\trows: [],\n\t\t\t};\n\n\t\t\tconst options = pack.index.map(({ _id, name }) => ({\n\t\t\t\tvalue: _id,\n\t\t\t\tlabel: name,\n\t\t\t}));\n\n\t\t\tconst customUUIDS = getSetting(\"familiar\").split(\",\");\n\t\t\tfor (let uuid of customUUIDS) {\n\t\t\t\tuuid = uuid.trim();\n\t\t\t\tconst item = await fromUuid(uuid);\n\t\t\t\tif (item?.isOfType(\"action\"))\n\t\t\t\t\toptions.push({ value: uuid, label: item.name });\n\t\t\t}\n\n\t\t\toptions.sort((a, b) => a.label.localeCompare(b.label));\n\n\t\t\tfor (let index = 0; index < nbAbilities; index++) {\n\t\t\t\ttemplate.rows.push({\n\t\t\t\t\tlabel: localize(\"ability\", { nb: index + 1 }),\n\t\t\t\t\tvalue: flags[`${index}`] ?? \"\",\n\t\t\t\t\torder: 100,\n\t\t\t\t\toptions,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\tdaily: type,\n\t\t\t\t\t\trow: index.toString(),\n\t\t\t\t\t\tunique: \"ability\",\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (template.rows.length) {\n\t\t\t\tthis._rows[type] = template.rows.reduce((rows, { data }) => {\n\t\t\t\t\trows[data.row] = { save: true };\n\t\t\t\t\treturn rows;\n\t\t\t\t}, {});\n\t\t\t\ttemplates.push(template);\n\t\t\t}\n\t\t}\n\n\t\tif (!DAILY_FILTERS.includes(\"dailies.staves\") && !isPF2eStavesActive()) {\n\t\t\tconst staves = getStaves(actor);\n\n\t\t\tif (staves.length) {\n\t\t\t\tconst maxStaffCharges = getMaxSlotRankForStaves(actor);\n\n\t\t\t\tif (maxStaffCharges) {\n\t\t\t\t\tconst type = \"dailies.staff\";\n\t\t\t\t\tconst flags = getFlag(actor, type) ?? {};\n\t\t\t\t\tconst options = staves.map((staff) => ({\n\t\t\t\t\t\tvalue: staff.id,\n\t\t\t\t\t\tlabel: staff.name,\n\t\t\t\t\t}));\n\t\t\t\t\toptions.sort((a, b) => a.label.localeCompare(b.label));\n\n\t\t\t\t\tconst staffIdRow = {\n\t\t\t\t\t\tlabel: localize(\"staves.staff\"),\n\t\t\t\t\t\tvalue: flags.staffID ?? \"\",\n\t\t\t\t\t\torder: 100,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\tdaily: type,\n\t\t\t\t\t\t\trow: \"staffID\",\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tconst template = {\n\t\t\t\t\t\tlabel: localize(\"staves.prepare\"),\n\t\t\t\t\t\trows: [staffIdRow],\n\t\t\t\t\t};\n\n\t\t\t\t\tthis._rows[type] = {\n\t\t\t\t\t\tstaffID: { save: true },\n\t\t\t\t\t};\n\n\t\t\t\t\tconst preparedEntries =\n\t\t\t\t\t\tgetPreparedSpellcastingEntriesForStaves(actor);\n\t\t\t\t\tif (preparedEntries.length) {\n\t\t\t\t\t\tconst options = [{ value: \"\", label: \"\" }];\n\t\t\t\t\t\tconst flexibleLabel = localize(\"staves.flexible\");\n\t\t\t\t\t\tconst emptyLabel = localize(\"staves.emty\");\n\n\t\t\t\t\t\tfor (const entry of preparedEntries) {\n\t\t\t\t\t\t\tconst entryId = entry.id;\n\n\t\t\t\t\t\t\toptions.push({ groupStart: true, label: entry.name });\n\n\t\t\t\t\t\t\tfor (const spell of entry.spells ?? []) {\n\t\t\t\t\t\t\t\tconst name = spell.name ?? emptyLabel;\n\t\t\t\t\t\t\t\tconst unique = `${spell.rank}.${spell.index}`;\n\t\t\t\t\t\t\t\toptions.push({\n\t\t\t\t\t\t\t\t\tvalue: unique,\n\t\t\t\t\t\t\t\t\tlabel: `${name} (${utils.spellRankLabel(spell.rank)})`,\n\t\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\t\ttype: \"spell\",\n\t\t\t\t\t\t\t\t\t\trank: spell.rank,\n\t\t\t\t\t\t\t\t\t\tindex: spell.index,\n\t\t\t\t\t\t\t\t\t\tunique: unique,\n\t\t\t\t\t\t\t\t\t\tentry: entryId,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tfor (const slot of entry.slots ?? []) {\n\t\t\t\t\t\t\t\tconst rankLabel = utils.spellRankLabel(slot.rank);\n\n\t\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\t\ttype: \"slot\",\n\t\t\t\t\t\t\t\t\trank: slot.rank,\n\t\t\t\t\t\t\t\t\tentry: entryId,\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tif (slot.value > 1) {\n\t\t\t\t\t\t\t\t\tdata.skipUnique = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdata.unique = `${entryId}.${slot.rank}`;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\toptions.push({\n\t\t\t\t\t\t\t\t\tvalue: slot.rank,\n\t\t\t\t\t\t\t\t\tlabel: `${flexibleLabel} ${slot.value}/${slot.max} (${rankLabel})`,\n\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toptions.push({ groupEnd: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst staffNexus = getItemWithSourceId(actor, STAFF_NEXUS, \"feat\");\n\t\t\t\t\t\tconst nbExpends =\n\t\t\t\t\t\t\tstaffNexus && actor.level >= 8 ? (actor.level >= 16 ? 3 : 2) : 1;\n\n\t\t\t\t\t\tif (staffNexus) {\n\t\t\t\t\t\t\tstaffIdRow.data.makeshift = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = 1; i <= nbExpends; i++) {\n\t\t\t\t\t\t\ttemplate.rows.push({\n\t\t\t\t\t\t\t\tlabel: localize(\"staves.expend\"),\n\t\t\t\t\t\t\t\tvalue: \"\",\n\t\t\t\t\t\t\t\torder: 100,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\t\ttype: \"select\",\n\t\t\t\t\t\t\t\t\tdaily: type,\n\t\t\t\t\t\t\t\t\trow: `expend${i}`,\n\t\t\t\t\t\t\t\t\tunique: \"expend\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tthis._rows[type][`expend${i}`] = { save: false };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttemplates.push(template);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const daily of this._dailies) {\n\t\t\ttry {\n\t\t\t\tconst template = await getTemplate.call(this, daily);\n\t\t\t\ttemplates.push(template);\n\t\t\t} catch (error) {\n\t\t\t\tlocalize.error(\"error.unexpected\");\n\t\t\t\tconsole.error(error);\n\t\t\t\tconsole.error(`The error occured during templating of ${daily.key}`);\n\t\t\t}\n\t\t}\n\n\t\tconst rows = [];\n\t\tconst groups = [];\n\t\tfor (const template of templates) {\n\t\t\tif (template.rows.length > 1) groups.push(template);\n\t\t\telse if (template.rows.length) rows.push(template);\n\t\t}\n\n\t\trows.sort((a, b) => b.rows[0].order - a.rows[0].order);\n\t\tgroups.sort((a, b) => a.rows.length - b.rows.length);\n\n\t\treturn mergeObject(super.getData(options), {\n\t\t\ti18n: localize.template,\n\t\t\tdump: ({ value, placeholder, data }) => {\n\t\t\t\tlet msg = \"\";\n\t\t\t\tif (value) msg += ` value=\"${value}\"`;\n\t\t\t\tif (placeholder) msg += ` placeholder=\"${placeholder}\"`;\n\t\t\t\tif (typeof data === \"object\") {\n\t\t\t\t\tfor (const [key, value] of Object.entries(data)) {\n\t\t\t\t\t\tconst formattedKey = key.replace(/[A-Z]/g, (c) => `-${c}`);\n\t\t\t\t\t\tmsg += ` data-${formattedKey}=\"${value}\"`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (msg) msg += \" \";\n\t\t\t\treturn msg;\n\t\t\t},\n\t\t\trows,\n\t\t\tgroups,\n\t\t\thasDailies: rows.length || groups.length,\n\t\t});\n\t}\n\n\trender(force, options) {\n\t\tif (this._randomInterval) clearInterval(this._randomInterval);\n\n\t\tif (this.element.find(\"select.random\")) {\n\t\t\tthis._randomInterval = setInterval(() => {\n\t\t\t\tconst randoms = this.element.find(\"select.random\");\n\t\t\t\trandoms.each((_, select) => {\n\t\t\t\t\tselect.selectedIndex =\n\t\t\t\t\t\t(select.selectedIndex + 1) % select.options.length;\n\t\t\t\t});\n\t\t\t}, 2000);\n\t\t}\n\n\t\treturn super.render(force, options);\n\t}\n\n\tclose(options) {\n\t\tif (this._randomInterval) clearInterval(this._randomInterval);\n\t\treturn super.close(options);\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\thtml.find(\"[data-action=clear]\").on(\"click\", this.#onClear.bind(this));\n\t\thtml.find(\"[data-action=accept]\").on(\"click\", this.#onAccept.bind(this));\n\t\thtml.find(\"[data-action=cancel]\").on(\"click\", this.#onCancel.bind(this));\n\n\t\thtml\n\t\t\t.find(\".combo select\")\n\t\t\t.on(\"change\", this.#onComboSelectChange.bind(this));\n\t\thtml.find(\".combo input\").on(\"change\", this.#onComboInputChange.bind(this));\n\n\t\thtml.find(\"[data-action=search]\").on(\"click\", this.#onSearch.bind(this));\n\n\t\thtml.find(\"[data-action=alert]\").on(\"click\", this.#onAlert.bind(this));\n\n\t\tconst uniqueSelects = html.find(\"select[data-unique]\");\n\t\tuniqueSelects.on(\"change\", (event) =>\n\t\t\tthis.#cleanUniqueSelects(event.currentTarget, true),\n\t\t);\n\t\t{\n\t\t\tconst processedUniques = [];\n\n\t\t\tfor (const select of uniqueSelects) {\n\t\t\t\tconst { unique, daily } = select.dataset;\n\t\t\t\tconst uniqueTag = `${daily}.${unique}`;\n\t\t\t\tif (processedUniques.includes(uniqueTag)) continue;\n\n\t\t\t\tprocessedUniques.push(uniqueTag);\n\t\t\t\tthis.#cleanUniqueSelects(select, false);\n\t\t\t}\n\t\t}\n\t}\n\n\t_canDragDrop(selector) {\n\t\treturn true;\n\t}\n\n\tasync _onDrop(event) {\n\t\tconst localize = subLocalize(\"interface.error.drop\");\n\t\tlet target = event.target;\n\t\tif (target instanceof HTMLLabelElement) target = target.nextElementSibling;\n\n\t\ttry {\n\t\t\tconst dataString = event.dataTransfer?.getData(\"text/plain\");\n\t\t\tconst data = JSON.parse(dataString);\n\n\t\t\tif (!data || data.type !== \"Item\" || typeof data.uuid !== \"string\")\n\t\t\t\treturn localize.warn(\"wrongDataType\");\n\n\t\t\tconst item = await fromUuid(data.uuid);\n\t\t\tif (!item) return localize.warn(\"wrongDataType\");\n\n\t\t\tconst filter = await this.#getfilterFromElement(target);\n\t\t\tif (!filter) return onDropItem(item, target);\n\n\t\t\tif (filter.type === \"feat\") onDropFeat.call(this, item, target, filter);\n\t\t\telse if (filter.type === \"spell\")\n\t\t\t\tonDropSpell.call(this, item, target, filter);\n\t\t\telse onDropItem(item, target);\n\t\t} catch (error) {\n\t\t\tlocalize.error(\"error.unexpected\");\n\t\t\tconsole.error(error);\n\t\t\tconsole.error(\"The error occured during _onDrop\");\n\t\t}\n\t}\n\n\tasync #onAlert(event) {\n\t\tevent.preventDefault();\n\t\tthis.#lock();\n\n\t\tconst data = event.currentTarget.dataset;\n\t\tconst row = this.rows[data.daily][data.row];\n\t\tconst args = this.dailyArgs[data.daily];\n\n\t\tlet fixed;\n\t\ttry {\n\t\t\tfixed = await row.fix(args);\n\t\t} catch (error) {\n\t\t\tlocalize.error(\"error.unexpected\");\n\t\t\tconsole.error(error);\n\t\t\tconsole.error(`The error occured during an alert fix of '${data.daily}'`);\n\t\t}\n\n\t\tthis.#unlock();\n\t\tif (fixed) this.render();\n\t}\n\n\tasync #onSearch(event) {\n\t\tevent.preventDefault();\n\t\tconst filter = await this.#getfilterFromElement(event.currentTarget, true);\n\t\tif (filter) game.pf2e.compendiumBrowser.openTab(filter.type, filter.search);\n\t\telse game.pf2e.compendiumBrowser.render(true);\n\t}\n\n\tasync #getfilterFromElement(element, parsed) {\n\t\tconst { daily, row } = element.dataset;\n\t\tconst filter = this.rows[daily]?.[row]?.filter;\n\t\tconst args = this.dailyArgs[daily];\n\n\t\tif (!args || !filter) return;\n\n\t\tif (typeof filter.search === \"function\")\n\t\t\tfilter.search = await filter.search(args);\n\n\t\tif (!parsed) return filter;\n\n\t\treturn parseFilter.call(this, filter);\n\t}\n\n\t#onComboSelectChange(event) {\n\t\tconst select = event.currentTarget;\n\t\tconst input = select.nextElementSibling;\n\t\tinput.dataset.input = \"false\";\n\t\tinput.value = select.options[select.selectedIndex].text;\n\t}\n\n\t#onComboInputChange(event) {\n\t\tconst input = event.currentTarget;\n\t\tconst select = input.previousElementSibling;\n\t\tconst value = input.value.toLowerCase();\n\t\tconst options = Array.from(select.options).map((x) => x.value);\n\n\t\tconst index = options.indexOf(value);\n\t\tif (index !== -1) {\n\t\t\tselect.value = value;\n\t\t\tinput.value = select.options[index].text;\n\t\t\tinput.dataset.input = \"false\";\n\t\t} else {\n\t\t\tselect.value = \"\";\n\t\t\tinput.dataset.input = \"true\";\n\t\t}\n\t}\n\n\t#lock() {\n\t\tthis.element.addClass(\"disabled\");\n\t}\n\n\t#unlock() {\n\t\tthis.element.removeClass(\"disabled\");\n\t}\n\n\t#validate() {\n\t\tconst warns = [];\n\t\tconst html = this.element;\n\n\t\tconst emptyInputs = html.find(\"input\").filter((_, input) => !input.value);\n\t\tconst alertInputs = html.find(\"input.alert\");\n\n\t\tif (emptyInputs.length) warns.push(\"error.empty\");\n\t\tif (alertInputs.length) warns.push(\"error.unattended\");\n\n\t\thtml.find(\"label\").removeClass(\"empty\");\n\n\t\tfor (const input of emptyInputs) {\n\t\t\tconst parent = input.parentElement;\n\t\t\tconst target = parent.classList.contains(\"combo\") ? parent : input;\n\t\t\ttarget.previousElementSibling.classList.add(\"empty\");\n\t\t}\n\n\t\tfor (const warning of warns) {\n\t\t\tlocalize.warn(warning);\n\t\t}\n\n\t\treturn !warns.length;\n\t}\n\n\tasync #onAccept(event) {\n\t\tevent.preventDefault();\n\t\tif (!this.#validate()) return;\n\n\t\tthis.#lock();\n\n\t\tawait processData.call(this);\n\n\t\tif (this._message) {\n\t\t\tsetFlag(this._message, \"prepared\", true);\n\t\t}\n\n\t\tthis.close();\n\t}\n\n\t#onClear(event) {\n\t\tevent.preventDefault();\n\t\tconst target = $(event.currentTarget);\n\t\tconst input = target.prevAll(\"input\").first();\n\t\tinput.val(\"\");\n\t\tinput.attr(\"value\", \"\");\n\t\tinput.attr(\"data-uuid\", \"\");\n\t\ttarget.addClass(\"disabled\");\n\t}\n\n\t#onCancel(event) {\n\t\tevent.preventDefault();\n\t\tthis.close();\n\t}\n\n\t#cleanUniqueSelects(select, isTarget) {\n\t\tconst uniqueTag = select.dataset.unique;\n\t\tconst children = isTarget\n\t\t\t? [select, ...getSiblings(select, `select[data-unique=\"${uniqueTag}\"]`)]\n\t\t\t: select.parentElement.querySelectorAll(\n\t\t\t\t\t`:scope > select[data-unique=\"${uniqueTag}\"]`,\n\t\t\t  );\n\n\t\tconst uniqueOptions = new Set();\n\n\t\tfor (const child of children) {\n\t\t\tlet childIndex = child.selectedIndex;\n\t\t\tconst childOptions = child.options;\n\n\t\t\tconst optionUniqueValue = () => {\n\t\t\t\tconst option = childOptions[childIndex];\n\t\t\t\treturn option.dataset.skipUnique\n\t\t\t\t\t? undefined\n\t\t\t\t\t: option.dataset.unique ?? option.value;\n\t\t\t};\n\n\t\t\tconst optionExists = () => {\n\t\t\t\tconst value = optionUniqueValue();\n\t\t\t\treturn value && uniqueOptions.has(value);\n\t\t\t};\n\n\t\t\twhile (optionExists() && childIndex > 0) {\n\t\t\t\tchildIndex -= 1;\n\t\t\t}\n\n\t\t\tconst maxIndex = child.options.length - 1;\n\t\t\twhile (optionExists() && childIndex < maxIndex) {\n\t\t\t\tchildIndex += 1;\n\t\t\t}\n\n\t\t\tif (optionExists()) continue;\n\n\t\t\tconst finalValue = optionUniqueValue();\n\t\t\tif (finalValue) uniqueOptions.add(finalValue);\n\n\t\t\tif (child.selectedIndex !== childIndex) {\n\t\t\t\tchild.selectedIndex = childIndex;\n\t\t\t}\n\t\t}\n\n\t\tfor (const child of children) {\n\t\t\tconst childIndex = child.selectedIndex;\n\t\t\tconst childOptions = child.options;\n\n\t\t\tfor (let index = 0; index < childOptions.length; index++) {\n\t\t\t\tif (index === childIndex) continue;\n\n\t\t\t\tconst option = childOptions[index];\n\t\t\t\toption.disabled = uniqueOptions.has(\n\t\t\t\t\toption.dataset.unique ?? option.value,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getSiblings(el, selector) {\n\tconst siblings = [];\n\n\tconst parent = el.parentElement;\n\tif (!parent) return siblings;\n\n\tconst children = selector\n\t\t? parent.querySelectorAll(`:scope > ${selector}`)\n\t\t: parent.children;\n\tfor (const child of children) {\n\t\tif (child === el) continue;\n\t\tsiblings.push(child);\n\t}\n\n\treturn siblings;\n}\n", "import {\n\tcapitalize,\n\tcreateConsumableFromSpell,\n\tgetSetting,\n\tlocalize,\n\tordinalString,\n\tsequenceArray,\n} from \"module-api\";\nimport { canPrepDailies } from \"./actor\";\nimport { DailiesInterface } from \"./apps/interface\";\n\nconst halfLevelString = \"max(1,floor(@actor.level/2))\";\n\nconst RUNE_PROPERTY_KEYS = [\n\t\"propertyRune1\",\n\t\"propertyRune2\",\n\t\"propertyRune3\",\n\t\"propertyRune4\",\n];\n\nlet SKILLNAMES;\nlet LANGUAGES;\n\nexport const utils = {\n\t// Skills\n\tget skillNames() {\n\t\tSKILLNAMES ??= Object.keys(CONFIG.PF2E.skillList).filter(\n\t\t\t(skill) => skill !== \"lore\",\n\t\t);\n\t\treturn SKILLNAMES.slice();\n\t},\n\tskillLabel: (skill) => {\n\t\treturn game.i18n.localize(CONFIG.PF2E.skillList[skill]);\n\t},\n\tcreateSkillRuleElement: ({ skill, value, mode = \"upgrade\", predicate }) => {\n\t\tconst rule = {\n\t\t\tkey: \"ActiveEffectLike\",\n\t\t\tmode,\n\t\t\tpath: `system.skills.${skill}.rank`,\n\t\t\tvalue,\n\t\t};\n\t\tif (predicate?.length) rule.predicate = predicate;\n\t\treturn rule;\n\t},\n\tcreateLoreSource: ({ name, rank }) => {\n\t\tconst data = {\n\t\t\ttype: \"lore\",\n\t\t\timg: \"systems/pf2e/icons/default-icons/lore.svg\",\n\t\t\tname,\n\t\t\tsystem: { proficient: { value: rank } },\n\t\t};\n\t\treturn data;\n\t},\n\tgetTranslatedSkills: (lowercase = false) => {\n\t\treturn Object.entries(CONFIG.PF2E.skillList).reduce(\n\t\t\t(result, [key, value]) => {\n\t\t\t\tconst localized = game.i18n.localize(value);\n\t\t\t\tresult[key] = lowercase\n\t\t\t\t\t? localized.toLocaleLowerCase(game.i18n.lang)\n\t\t\t\t\t: localized;\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\t{},\n\t\t);\n\t},\n\t// Languages\n\tget languageNames() {\n\t\tLANGUAGES ??= Object.keys(CONFIG.PF2E.languages);\n\t\treturn LANGUAGES.slice();\n\t},\n\tlanguageLabel: (language) => {\n\t\treturn game.i18n.localize(CONFIG.PF2E.languages[language]);\n\t},\n\tcreateLanguageRuleElement: ({ language, mode = \"add\", predicate }) => {\n\t\tconst rule = {\n\t\t\tkey: \"ActiveEffectLike\",\n\t\t\tmode,\n\t\t\tpath: \"system.build.languages.granted\",\n\t\t\tvalue: {\n\t\t\t\tslug: language,\n\t\t\t\tsource: \"{item|name}\",\n\t\t\t},\n\t\t};\n\t\tif (predicate?.length) rule.predicate = predicate;\n\t\treturn rule;\n\t},\n\t// resistances\n\tresistanceLabel: (resistance, value) => {\n\t\tlet str = game.i18n.localize(`PF2E.Trait${capitalize(resistance)}`);\n\t\tif (value) str += ` ${value}`;\n\t\treturn str;\n\t},\n\tcreateResistanceRuleElement: ({ type, value, predicate }) => {\n\t\tif (value === \"half\") value = halfLevelString;\n\t\tconst rule = {\n\t\t\tkey: \"Resistance\",\n\t\t\ttype,\n\t\t\tvalue,\n\t\t};\n\t\tif (predicate?.length) rule.predicate = predicate;\n\t\treturn rule;\n\t},\n\t// feats\n\tcreateFeatSource: async (uuid) => {\n\t\tconst source = (await fromUuid(uuid))?.toObject();\n\t\tif (!source)\n\t\t\tthrow new Error(\n\t\t\t\t`An error occured while trying to create a feat source with uuid: ${uuid}`,\n\t\t\t);\n\t\treturn source;\n\t},\n\t// spells\n\tcreateSpellScrollSource: async (options) => {\n\t\treturn createSpellConsumableSource(\"scroll\", options);\n\t},\n\tcreateWandSource: async (options) => {\n\t\treturn createSpellConsumableSource(\"wand\", options);\n\t},\n\tcreateSpellSource: async (uuid) => {\n\t\tconst source = (await fromUuid(uuid))?.toObject();\n\t\tif (!source)\n\t\t\tthrow new Error(\n\t\t\t\t`An error occured while trying to create a spell source with uuid: ${uuid}`,\n\t\t\t);\n\t\treturn source;\n\t},\n\tspellRankLabel: (rank) => {\n\t\treturn game.i18n.format(\"PF2E.Item.Spell.Rank.Ordinal\", {\n\t\t\trank: ordinalString(rank),\n\t\t});\n\t},\n\t// Rule Elements\n\tget halfLevelString() {\n\t\treturn halfLevelString;\n\t},\n\tgetChoiSetRuleSelection: (item, option) => {\n\t\tconst rules = item._source.system.rules;\n\t\tconst rule = rules.find(\n\t\t\t(rule) =>\n\t\t\t\trule.key === \"ChoiceSet\" && (!option || rule.rollOption === option),\n\t\t);\n\t\treturn rule?.selection;\n\t},\n\t//\n\tproficiencyLabel: (rank) => {\n\t\treturn game.i18n.localize(CONFIG.PF2E.proficiencyLevels[rank]);\n\t},\n\trandomOption: async (options) => {\n\t\tconst roll = (\n\t\t\tawait new Roll(`1d${options.length}`).evaluate({ async: true })\n\t\t).total;\n\t\tconst result = options[roll - 1];\n\t\tif (typeof result === \"string\") return result;\n\t\treturn result.value;\n\t},\n\thalfLevelValue: (actor) => Math.max(1, Math.floor(actor.level / 2)),\n\tsequenceArray,\n\t// equipment\n\tdamageLabel: (damage) => {\n\t\treturn game.i18n.localize(CONFIG.PF2E.damageTypes[damage]);\n\t},\n\tweaponTraitLabel: (trait) => {\n\t\treturn game.i18n.localize(CONFIG.PF2E.weaponTraits[trait]);\n\t},\n\tweaponPropertyRunesLabel: (rune) => {\n\t\tconst key = `PF2E.WeaponPropertyRune.${rune}.Name`;\n\t\treturn game.i18n.localize(key);\n\t},\n\thasFreePropertySlot: (item) => {\n\t\tconst potency = item.system.runes.potency;\n\t\treturn potency > 0 && item.system.runes.property.length < potency;\n\t},\n\tgetFreePropertyRuneSlot: (item) => {\n\t\tconst potency = item.system.potencyRune.value;\n\t\tif (potency === null) return null;\n\n\t\tfor (let i = 0; i < potency; i++) {\n\t\t\tconst property = RUNE_PROPERTY_KEYS[i];\n\t\t\tif (!item.system[property].value) return property;\n\t\t}\n\n\t\treturn null;\n\t},\n\t// actor\n\tgetPlayersActors: (member, ...types) => {\n\t\tconst actorTypes = types.length ? types : [\"creature\"];\n\t\tconst memberIsActor = member instanceof Actor;\n\n\t\tlet actors = game.actors;\n\n\t\tif (memberIsActor && member.parties.size && getSetting(\"members\")) {\n\t\t\tactors = Array.from(member.parties ?? []).flatMap((p) => p.members);\n\t\t\tactors = Array.from(new Set(actors));\n\t\t} else {\n\t\t\tactors = actors.filter((a) => a.hasPlayerOwner);\n\t\t}\n\n\t\treturn actors.filter(\n\t\t\t(a) => a.isOfType(...actorTypes) && (!memberIsActor || a !== member),\n\t\t);\n\t},\n};\n\nasync function createSpellConsumableSource(\n\ttype,\n\t{ uuid, level, itemName, itemImg },\n) {\n\tconst spell = await fromUuid(uuid);\n\tif (!spell) {\n\t\tthrow new Error(\n\t\t\t`An error occured while trying to create a spell scroll source with uuid: ${uuid}`,\n\t\t);\n\t}\n\treturn createConsumableFromSpell(spell, {\n\t\ttype,\n\t\theightenedLevel: level,\n\t\ttemp: true,\n\t\titemName,\n\t\titemImg,\n\t});\n}\n\nexport function openDailiesInterface(character, message) {\n\tlet actor = character;\n\n\tif (!actor || !actor.isOfType(\"character\") || !actor.isOwner) {\n\t\tconst controlled = canvas.tokens.controlled;\n\t\tactor = controlled.find(\n\t\t\t(token) => token.actor?.isOfType(\"character\") && token.actor.isOwner,\n\t\t)?.actor;\n\t\tif (!actor) actor = game.user.character;\n\t}\n\n\tif (!actor || !actor.isOfType(\"character\") || !actor.isOwner)\n\t\treturn warn(\"error.noCharacterSelected\");\n\n\tif (!canPrepDailies(actor)) return warn(\"error.unrested\");\n\n\tnew DailiesInterface(\n\t\tactor,\n\t\t{\n\t\t\ttitle: localize(\"interface.title\", { name: actor.name }),\n\t\t},\n\t\tmessage,\n\t).render(true);\n}\n\nexport function createUpdateCollection() {\n\tconst collection = new Collection();\n\treturn [\n\t\tcollection,\n\t\t(data) => {\n\t\t\tconst id = data._id;\n\t\t\tif (!id) return;\n\t\t\tconst update = collection.get(id) ?? {};\n\t\t\tcollection.set(id, mergeObject(update, data));\n\t\t},\n\t];\n}\n", "import { getFlag, itemIsOfType, localize } from \"module-api\";\nimport { openDailiesInterface } from \"./api\";\nimport {\n\tgetSpellcastingEntryStaffData,\n\tisPF2eStavesActive,\n\tupdateEntryCharges,\n} from \"./data/staves\";\n\nexport async function performDailyCrafting() {\n\tconst entries = (await this.getCraftingEntries()).filter(\n\t\t(e) => e.isDailyPrep,\n\t);\n\tconst alchemicalEntries = entries.filter((e) => e.isAlchemical);\n\tconst reagentCost = alchemicalEntries.reduce(\n\t\t(sum, entry) => sum + entry.reagentCost,\n\t\t0,\n\t);\n\tconst reagentValue =\n\t\t(this.system.resources.crafting.infusedReagents.value || 0) - reagentCost;\n\tif (reagentValue < 0) {\n\t\tui.notifications.warn(\n\t\t\tgame.i18n.localize(\"PF2E.CraftingTab.Alerts.MissingReagents\"),\n\t\t);\n\t\treturn;\n\t}\n\n\tawait this.update({\n\t\t\"system.resources.crafting.infusedReagents.value\": reagentValue,\n\t});\n\tconst key =\n\t\treagentCost === 0\n\t\t\t? \"ZeroConsumed\"\n\t\t\t: reagentCost === 1\n\t\t\t  ? \"OneConsumed\"\n\t\t\t  : \"NConsumed\";\n\tui.notifications.info(\n\t\tgame.i18n.format(`PF2E.Actor.Character.Crafting.Daily.Complete.${key}`, {\n\t\t\tquantity: reagentCost,\n\t\t}),\n\t);\n\n\t// // Remove infused/temp items\n\t// for (const item of this.inventory) {\n\t// \tif (item.system.temporary) await item.delete();\n\t// }\n\n\tfor (const entry of entries) {\n\t\tfor (const formula of entry.preparedCraftingFormulas) {\n\t\t\tconst itemSource = formula.item.toObject();\n\t\t\titemSource.system.quantity = formula.quantity;\n\t\t\titemSource.system.temporary = true;\n\t\t\titemSource.system.size = this.ancestry?.size === \"tiny\" ? \"tiny\" : \"med\";\n\n\t\t\tif (\n\t\t\t\tentry.isAlchemical &&\n\t\t\t\titemIsOfType(itemSource, \"consumable\", \"equipment\", \"weapon\")\n\t\t\t) {\n\t\t\t\titemSource.system.traits.value.push(\"infused\");\n\t\t\t}\n\t\t\tawait this.addToInventory(itemSource);\n\t\t}\n\t}\n}\n\nexport function renderCharacterSheetPF2e(sheet, html) {\n\tconst actor = sheet.actor;\n\tif (!actor.isOwner) return;\n\n\tconst canPrep = canPrepDailies(actor);\n\tconst disabledClass = canPrep ? \"\" : \" disabled\";\n\tconst tooltip = localize(canPrep ? \"sheet.title\" : \"sheet.unrested\");\n\tconst icon = `<a class=\"roll-icon dailies${disabledClass}\" data-tooltip=\"${tooltip}\">\n\t<i class=\"fas fa-mug-saucer\"></i>\n</a>`;\n\n\tconst el = html.find(\"aside .sidebar .hitpoints .hp-small\");\n\tel.append(icon);\n\n\tif (canPrep) {\n\t\tel.find(\".dailies\").on(\"click\", () => openDailiesInterface(actor));\n\t}\n\n\tif (!isPF2eStavesActive()) renderStavesEntries(html, actor);\n}\n\nfunction renderStavesEntries(html, actor) {\n\tconst tab = html.find(\n\t\t\".sheet-body .sheet-content [data-tab=spellcasting] [data-tab=known-spells] .spellcastingEntry-list\",\n\t);\n\tconst entries = tab.find(\"[data-container-type=spellcastingEntry]\");\n\n\tfor (const el of entries) {\n\t\tconst entryId = el.dataset.containerId;\n\t\tconst entry = actor.spellcasting.get(entryId);\n\t\tconst staffData = getSpellcastingEntryStaffData(entry);\n\t\tif (!staffData) continue;\n\n\t\tconst label = localize(\"staves.label\");\n\t\tconst charges = $(\n\t\t\t`<div class=\"pf2e-dailies-charges\"><label>${label}</label></div>`,\n\t\t);\n\n\t\tconst input = $(\n\t\t\t`<input type=\"number\" min=\"0\" max=\"${staffData.max}\" value=\"${staffData.charges}\">`,\n\t\t);\n\t\tinput.on(\"change\", (event) => onStaffChargesChange(event, actor));\n\n\t\tconst reset = $('<a><i class=\"fas fa-redo\"></i></a>');\n\t\treset.on(\"click\", (event) => onStaffChargesReset(event, actor));\n\n\t\tcharges.append(input);\n\t\tcharges.append(reset);\n\n\t\tel.querySelector(\".spell-ability-data .statistic-values\").after(charges[0]);\n\n\t\tconst spells = el.querySelectorAll(\n\t\t\t'.spell-list .spell:not([data-group-id=\"cantrips\"]',\n\t\t);\n\t\tfor (const spell of spells) {\n\t\t\tconst cost = spell.dataset.castRank;\n\t\t\tif (staffData.canPayCost(cost)) continue;\n\t\t\tspell.dataset.slotExpended = \"\";\n\t\t}\n\t}\n}\n\nfunction getEntryDataFromEvent(event, actor) {\n\tconst { itemId } = event.currentTarget.closest(\".spellcasting-entry\").dataset;\n\treturn actor.spellcasting.get(itemId);\n}\n\nasync function onStaffChargesReset(event, actor) {\n\tconst entry = getEntryDataFromEvent(event, actor);\n\tupdateEntryCharges(entry, 9999);\n}\n\nasync function onStaffChargesChange(event, actor) {\n\tconst entry = getEntryDataFromEvent(event, actor);\n\tupdateEntryCharges(entry, event.currentTarget.valueAsNumber);\n}\n\nexport function canPrepDailies(actor) {\n\treturn getFlag(actor, \"rested\") !== false;\n}\n", "export function createFeatDaily(key, uuid, filter, label) {\n\tconst daily = {\n\t\tkey,\n\t\tlabel,\n\t\titem: {\n\t\t\tuuid,\n\t\t},\n\t\trows: [\n\t\t\t{\n\t\t\t\ttype: \"drop\",\n\t\t\t\tslug: \"feat\",\n\t\t\t\tfilter: {\n\t\t\t\t\ttype: \"feat\",\n\t\t\t\t\tsearch: filter ?? {},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\tprocess: async ({ utils, fields, addFeat, messages }) => {\n\t\t\tconst uuid = fields.feat.uuid;\n\t\t\tconst source = await utils.createFeatSource(uuid);\n\t\t\taddFeat(source);\n\t\t\tmessages.add(\"feats\", { uuid });\n\t\t},\n\t};\n\treturn daily;\n}\n", "export const flexibility = [\n\t\"/** @typedef {'flexibility' | 'improved'} FlexibilityRow */\",\n\t\"/** @typedef {'improved'} FlexibilityChild */\",\n\t\"/** @typedef {[FlexibilityRow, {}, FlexibilityChild]} FlexibilityGenerics */\",\n\t\"\",\n\t\"/**\",\n\t\" * @param {FlexibilityRow} slug\",\n\t\" * @param {number} level\",\n\t\" * @param {FlexibilityChild} [child]\",\n\t\" */\",\n\t\"function createRow(slug, level, child) {\",\n\t\"    /** @type {DailyRowDrop<FlexibilityGenerics>} */\",\n\t\"    const row = {\",\n\t\"        type: 'drop',\",\n\t\"        label: `PF2E.Level${level}`,\",\n\t\"        slug,\",\n\t\"        filter: {\",\n\t\"            type: 'feat',\",\n\t\"            search: {\",\n\t\"                category: ['class'],\",\n\t\"                traits: {\",\n\t\"                    values: ['fighter'],\",\n\t\"                },\",\n\t\"                level,\",\n\t\"            },\",\n\t\"        },\",\n\t\"    }\",\n\t\"    if (child) row.childPredicate = [child]\",\n\t\"    return row\",\n\t\"}\",\n\t\"\",\n\t\"/** @type {Daily<FlexibilityGenerics>} */\",\n\t\"const combatFlexibility = {\",\n\t\"    key: 'flexibility',\",\n\t\"    item: {\",\n\t\"        uuid: 'Compendium.pf2e.classfeatures.Item.8g6HzARbhfcgilP8', // Combat Flexibility\",\n\t\"    },\",\n\t\"    children: [\",\n\t\"        {\",\n\t\"            slug: 'improved',\",\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.W2rwudMNcAxs8VoX', // Improved Flexibility\",\n\t\"        },\",\n\t\"    ],\",\n\t\"    rows: [\",\n\t\"        createRow('flexibility', 8), //\",\n\t\"        createRow('improved', 14, 'improved'),\",\n\t\"    ],\",\n\t\"    process: async ({ utils, fields, addFeat, messages, children }) => {\",\n\t\"        const uuid = fields.flexibility.uuid\",\n\t\"        const source = await utils.createFeatSource(uuid)\",\n\t\"        addFeat(source)\",\n\t\"        messages.add('feats', { uuid })\",\n\t\"\",\n\t\"        if (children.improved) {\",\n\t\"            const uuid = fields.improved.uuid\",\n\t\"            const source = await utils.createFeatSource(uuid)\",\n\t\"            addFeat(source, children.improved)\",\n\t\"            messages.add('feats', { uuid })\",\n\t\"        }\",\n\t\"    },\",\n\t\"}\",\n\t\"\",\n\t\"return combatFlexibility\",\n].join(\"\\n\");\n", "export const mind = [\n\t\"/** @typedef {'alert' | 'smith' | 'mental' | 'runic' | 'advanced'} MindRow */\",\n\t\"/** @typedef {'weapon' | 'mental' | 'runic' | 'advanced'} MindChild */\",\n\t\"/** @typedef {[MindRow, {}, MindChild]} MindGenerics */\",\n\t\"\",\n\t\"const MIND_WEAPON_UUID = 'Compendium.pf2e-dailies.equipment.Item.VpmEozw21aRxX15P'\",\n\t\"\",\n\t\"const WEAPON_BASE_TYPES = {\",\n\t\"    0: { die: 'd4', traits: ['finesse', 'agile'], usage: 'held-in-one-hand' },\",\n\t\"    1: { die: 'd6', traits: ['finesse'], usage: 'held-in-one-hand' },\",\n\t\"    2: { die: 'd8', traits: [], usage: 'held-in-one-hand' },\",\n\t\"    3: { die: 'd10', traits: ['reach'], usage: 'held-in-two-hands' },\",\n\t\"}\",\n\t\"\",\n\t\"const WEAPON_GROUPS = /** @type {Record<WeaponDamage, string>} */ {\",\n\t\"    slashing: 'sword',\",\n\t\"    piercing: 'spear',\",\n\t\"    bludgeoning: 'club',\",\n\t\"}\",\n\t\"\",\n\t\"const WEAPON_TRAITS = ['grapple', 'nonlethal', 'shove', 'trip', 'modular']\",\n\t\"\",\n\t\"const WEAPON_DAMAGE_TYPES = Object.keys(WEAPON_GROUPS)\",\n\t\"\",\n\t\"const WEAPON_RUNES = ['corrosive', 'disrupting', 'flaming', 'frost', 'shock', 'thundering']\",\n\t\"\",\n\t\"const WEAPON_GREATER_RUNES = [\",\n\t\"    'anarchic',\",\n\t\"    'axiomatic',\",\n\t\"    'greaterCorrosive',\",\n\t\"    'greaterDisrupting',\",\n\t\"    'greaterFlaming',\",\n\t\"    'greaterFrost',\",\n\t\"    'greaterShock',\",\n\t\"    'greaterThundering',\",\n\t\"    'holy',\",\n\t\"    'unholy',\",\n\t\"]\",\n\t\"\",\n\t\"/** @type {Daily<MindGenerics>} */\",\n\t\"const mindSmith = {\",\n\t\"    key: 'mindsmith',\",\n\t\"    item: {\",\n\t\"        uuid: 'Compendium.pf2e.feats-srd.Item.juikoiIA0Jy8PboY', // Mind Smith Dedication\",\n\t\"    },\",\n\t\"    children: [\",\n\t\"        {\",\n\t\"            slug: 'weapon',\",\n\t\"            uuid: MIND_WEAPON_UUID, // Mind Weapon\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'mental',\",\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.PccekOihIbRWdDky', // Malleable Mental Forge\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'runic',\",\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.2uQbQgz1AbjzcFSp', // Runic Mind Smithing\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'advanced',\",\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.fgnfXwFcn9jZlXGD', // Advanced Runic Mind Smithing\",\n\t\"        },\",\n\t\"    ],\",\n\t\"    rows: [\",\n\t\"        {\",\n\t\"            type: 'alert',\",\n\t\"            slug: 'alert',\",\n\t\"            message: 'Missing Mind Weapon',\",\n\t\"            fix,\",\n\t\"            childPredicate: [{ not: 'weapon' }],\",\n\t\"        },\",\n\t\"        {\",\n\t\"            type: 'select',\",\n\t\"            slug: 'smith',\",\n\t\"            label: 'Mind Smith',\",\n\t\"            options: WEAPON_DAMAGE_TYPES,\",\n\t\"            labelizer: ({ utils }) => utils.damageLabel,\",\n\t\"            childPredicate: ['weapon'],\",\n\t\"        },\",\n\t\"        {\",\n\t\"            type: 'select',\",\n\t\"            slug: 'mental',\",\n\t\"            label: 'Mental Forge',\",\n\t\"            options: WEAPON_TRAITS,\",\n\t\"            labelizer: ({ utils }) => utils.weaponTraitLabel,\",\n\t\"            childPredicate: ['weapon', 'mental'],\",\n\t\"        },\",\n\t\"        {\",\n\t\"            type: 'select',\",\n\t\"            slug: 'runic',\",\n\t\"            label: 'Runic Smithing',\",\n\t\"            options: WEAPON_RUNES,\",\n\t\"            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\",\n\t\"            childPredicate: ['weapon', 'runic', { not: 'advanced' }],\",\n\t\"            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\",\n\t\"        },\",\n\t\"        {\",\n\t\"            type: 'select',\",\n\t\"            slug: 'advanced',\",\n\t\"            label: 'Runic Smithing',\",\n\t\"            options: WEAPON_GREATER_RUNES,\",\n\t\"            labelizer: ({ utils }) => utils.weaponPropertyRunesLabel,\",\n\t\"            childPredicate: ['weapon', 'advanced'],\",\n\t\"            condition: ({ children, utils }) => utils.hasFreePropertySlot(children.weapon),\",\n\t\"        },\",\n\t\"    ],\",\n\t\"    process: ({ children, updateItem, fields, messages, item, utils }) => {\",\n\t\"        const weapon = children.weapon\",\n\t\"        if (!weapon) return\",\n\t\"\",\n\t\"        messages.addGroup('mindsmith')\",\n\t\"\",\n\t\"        const selected = /** @type {WeaponDamage} */ fields.smith.value\",\n\t\"        updateItem({ _id: weapon.id, 'system.damage.damageType': selected, 'system.group': WEAPON_GROUPS[selected] })\",\n\t\"        messages.add('mindsmith', { selected: utils.damageLabel(selected), uuid: item.uuid, label: 'mindsmith' })\",\n\t\"\",\n\t\"        if (children.mental) {\",\n\t\"            const selected = fields.mental.value\",\n\t\"            const traits = deepClone(weapon._source.system.traits?.value ?? [])\",\n\t\"            if (!traits.includes(selected)) traits.push(selected)\",\n\t\"            updateItem({ _id: weapon.id, 'system.traits.value': traits })\",\n\t\"            messages.add('mindsmith', {\",\n\t\"                selected: utils.weaponTraitLabel(selected),\",\n\t\"                uuid: children.mental.uuid,\",\n\t\"                label: 'mentalforge',\",\n\t\"            })\",\n\t\"        }\",\n\t\"\",\n\t\"        if ((children.advanced || children.runic) && utils.hasFreePropertySlot(weapon)) {\",\n\t\"            const child = children.advanced ?? children.runic\",\n\t\"            const freeSlot = utils.getFreePropertyRuneSlot(weapon)\",\n\t\"            const field = fields.advanced ?? fields.runic\",\n\t\"            const selected = field.value\",\n\t\"\",\n\t\"            if (!weapon.system.runes.property.includes(selected)) {\",\n\t\"                updateItem({ _id: weapon.id, [`system.${freeSlot}.value`]: selected, [`flags.world.runeSlot`]: freeSlot })\",\n\t\"                messages.add('mindsmith', {\",\n\t\"                    selected: utils.weaponPropertyRunesLabel(selected),\",\n\t\"                    uuid: child.uuid,\",\n\t\"                    label: 'runicmind',\",\n\t\"                })\",\n\t\"            }\",\n\t\"        }\",\n\t\"    },\",\n\t\"    rest: ({ item, sourceId, updateItem }) => {\",\n\t\"        if (sourceId !== MIND_WEAPON_UUID) return\",\n\t\"\",\n\t\"        let traits = item._source.system.traits?.value ?? []\",\n\t\"        traits = traits.filter(trait => !WEAPON_TRAITS.includes(trait))\",\n\t\"        updateItem({ _id: item.id, 'system.traits.value': traits })\",\n\t\"\",\n\t\"        const runeSlot = item.getFlag('world', 'runeSlot')\",\n\t\"        if (runeSlot) {\",\n\t\"            updateItem({ _id: item.id, [`system.${runeSlot}.value`]: null, [`flags.world.-=runeSlot`]: true })\",\n\t\"        }\",\n\t\"    },\",\n\t\"}\",\n\t\"\",\n\t\"const OPTIONS = {\",\n\t\"    0: 'A one-handed weapon that deals <strong>1d4</strong> damage and has the <strong>agile</strong> and <strong>finesse</strong> traits',\",\n\t\"    1: 'A one-handed weapon that deals <strong>1d6</strong> damage and has the <strong>finesse</strong> trait',\",\n\t\"    2: 'A one-handed weapon that deals <strong>1d8</strong> damage',\",\n\t\"    3: 'A two-handed weapon that deals <strong>1d10</strong> damage and has the <strong>reach</strong> trait',\",\n\t\"}\",\n\t\"\",\n\t\"/** * @param {DailyValueArgs<MindGenerics>} args */\",\n\t\"async function fix({ actor }) {\",\n\t\"    let content =\",\n\t\"        `<p>This character doesn't have a mind weapon in their inventory.</p><p>Please select one of the following options to create one.</p>`\",\n\t\"\",\n\t\"    for (const [key, label] of Object.entries(OPTIONS)) {\",\n\t\"        content += `<label><input type='radio' name='type' value='${key}'>${label}</label>`\",\n\t\"    }\",\n\t\"\",\n\t\"    const weapon = await Dialog.wait(\",\n\t\"        {\",\n\t\"            title: 'Mind Weapon',\",\n\t\"            content,\",\n\t\"            buttons: {\",\n\t\"                yes: {\",\n\t\"                    icon: `<i class='fas fa-save'></i>`,\",\n\t\"                    label: 'Accept',\",\n\t\"                    callback: onWeaponSelected,\",\n\t\"                },\",\n\t\"                no: {\",\n\t\"                    icon: `<i class='fas fa-times'></i>`,\",\n\t\"                    label: 'Cancel',\",\n\t\"                    callback: () => null,\",\n\t\"                },\",\n\t\"            },\",\n\t\"            close: () => null,\",\n\t\"        },\",\n\t\"        {},\",\n\t\"        { id: 'pf2e-dailies-weapon', width: 600 }\",\n\t\"    )\",\n\t\"\",\n\t\"    if (weapon) {\",\n\t\"        await actor.createEmbeddedDocuments('Item', [weapon])\",\n\t\"        return true\",\n\t\"    }\",\n\t\"\",\n\t\"    return false\",\n\t\"}\",\n\t\"\",\n\t\"/** @params {JQuery} html */\",\n\t\"async function onWeaponSelected(html) {\",\n\t\"    const selection = html.find('[name=type]:checked').val()\",\n\t\"    if (!selection) {\",\n\t\"        ui.notifications.warn('You must select one weapon base type.')\",\n\t\"        return\",\n\t\"    }\",\n\t\"\",\n\t\"    const weapon = (await fromUuid(MIND_WEAPON_UUID))?.toObject()\",\n\t\"    if (!weapon) {\",\n\t\"        ui.notifications.warn(`The weapon couldn't be found in the compendium.`)\",\n\t\"        return\",\n\t\"    }\",\n\t\"\",\n\t\"    const stats = WEAPON_BASE_TYPES[selection]\",\n\t\"\",\n\t\"    setProperty(weapon, 'system.damage.die', stats.die)\",\n\t\"    setProperty(weapon, 'system.traits.value', stats.traits.slice())\",\n\t\"    setProperty(weapon, 'system.usage.value', stats.usage)\",\n\t\"\",\n\t\"    return weapon\",\n\t\"}\",\n\t\"\",\n\t\"return mindSmith\",\n].join(\"\\n\");\n", "export const savant = [\n\t\"/** @typedef {'first' | 'second' | 'third' | 'fourth'} SavantRow */\",\n\t\"/** @typedef {Record<SavantRow, { level: number; condition: boolean }>} SavantCustom */\",\n\t\"/** @typedef {[SavantRow, SavantCustom, '']} SavantGenerics */\",\n\t\"\",\n\t\"const ROWS = /** @type {const} */ (['first', 'second', 'third', 'fourth'])\",\n\t\"\",\n\t\"/**\",\n\t\" * @param {CharacterPF2e} actor\",\n\t\" * @param {MagicTradition} tradition\",\n\t\" */\",\n\t\"function getSpellcastingTraditionDetails(actor, tradition) {\",\n\t\"    let maxSlot = 1\",\n\t\"    let maxTradition = 0\",\n\t\"\",\n\t\"    for (const entry of actor.spellcasting.regular) {\",\n\t\"        if ('pf2e-staves' in entry.flags) continue // we skip staff entries\",\n\t\"\",\n\t\"        const slots = entry.system.slots\",\n\t\"        for (const key in slots) {\",\n\t\"            const slot = slots[key]\",\n\t\"            if (slot.max) maxSlot = Math.max(maxSlot, Number(key.slice(4)))\",\n\t\"        }\",\n\t\"\",\n\t\"        if (entry.tradition === tradition) maxTradition = Math.max(maxTradition, entry.rank)\",\n\t\"    }\",\n\t\"\",\n\t\"    return { maxSlot: Math.min(maxSlot, 10), maxTradition }\",\n\t\"}\",\n\t\"\",\n\t\"/** @type {Daily<SavantGenerics>} */\",\n\t\"const scrollSavant = {\",\n\t\"    key: 'savant',\",\n\t\"    item: {\",\n\t\"        uuid: 'Compendium.pf2e.feats-srd.Item.u5DBg0LrBUKP0JsJ', // Scroll Savant\",\n\t\"    },\",\n\t\"    prepare: ({ actor }) => {\",\n\t\"        const { maxSlot, maxTradition } = getSpellcastingTraditionDetails(actor, 'arcane')\",\n\t\"        return {\",\n\t\"            first: { level: maxSlot - 2, condition: true },\",\n\t\"            second: { level: maxSlot - 3, condition: true },\",\n\t\"            third: { level: maxSlot - 4, condition: maxTradition >= 3 && maxSlot >= 5 },\",\n\t\"            fourth: { level: maxSlot - 5, condition: maxTradition >= 4 && maxSlot >= 6 },\",\n\t\"        }\",\n\t\"    },\",\n\t\"    rows: ROWS.map(rowName => {\",\n\t\"        /** @type {DailyRowDrop<SavantGenerics>} */\",\n\t\"        const row = {\",\n\t\"            type: 'drop',\",\n\t\"            slug: rowName,\",\n\t\"            label: ({ custom }) => `PF2E.SpellLevel${custom[rowName].level}`,\",\n\t\"            filter: {\",\n\t\"                type: 'spell',\",\n\t\"                search: ({ custom }) => ({\",\n\t\"                    category: ['spell'],\",\n\t\"                    traditions: ['arcane'],\",\n\t\"                    level: custom[rowName].level,\",\n\t\"                }),\",\n\t\"            },\",\n\t\"            condition: ({ custom }) => custom[rowName].condition,\",\n\t\"        }\",\n\t\"        return row\",\n\t\"    }),\",\n\t\"    process: async ({ utils, fields, custom, addItem, messages }) => {\",\n\t\"        for (const field of Object.values(fields)) {\",\n\t\"            const uuid = field.uuid\",\n\t\"            const source = await utils.createSpellScrollSource({ uuid, level: custom[field.row].level })\",\n\t\"            addItem(source)\",\n\t\"            messages.add('scrolls', { uuid, label: source.name })\",\n\t\"        }\",\n\t\"    },\",\n\t\"}\",\n\t\"\",\n\t\"return scrollSavant\",\n].join(\"\\n\");\n", "export const tome = [\n\t\"/** @typedef {typeof ROWS[number]} TomeRow */\",\n\t\"/** @typedef {'adept' | 'second' | 'intense' | 'paragon'} TomeChild */\",\n\t\"/** @typedef {Record<TomeRow, { rank: OneToFour; options: string[] }>} TomeCustom */\",\n\t\"/** @typedef {[TomeRow, TomeCustom, TomeChild]} TomeGenerics */\",\n\t\"\",\n\t\"const ROWS = /** @type {const} */ (['first', 'second'])\",\n\t\"\",\n\t\"/** @param {'adept' | 'paragon'} option */\",\n\t\"function createChildCondition(option) {\",\n\t\"    /** @type { BaseDailyConditionFunction<TomeGenerics>} */\",\n\t\"    const condition = ({ item, utils }) => {\",\n\t\"        return utils.getChoiSetRuleSelection(item, option) === 'tome'\",\n\t\"    }\",\n\t\"    return condition\",\n\t\"}\",\n\t\"\",\n\t\"/** @type {Daily<TomeGenerics>} */\",\n\t\"const thaumaturgeTome = {\",\n\t\"    key: 'tome',\",\n\t\"    item: {\",\n\t\"        uuid: 'Compendium.pf2e.classfeatures.Item.MyN1cQgE0HsLF20e', // Tome\",\n\t\"    },\",\n\t\"    children: [\",\n\t\"        {\",\n\t\"            slug: 'adept',\",\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.Obm4ItMIIr0whYeO', // Implement Adept\",\n\t\"            condition: createChildCondition('adept'),\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'second',\",\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.ZEUxZ4Ta1kDPHiq5', // Second Adept\",\n\t\"            condition: createChildCondition('adept'),\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'intense',\",\n\t\"            uuid: 'Compendium.pf2e.feats-srd.Item.yRRM1dsY6jakEMaC', // Intense Implement\",\n\t\"        },\",\n\t\"        {\",\n\t\"            slug: 'paragon',\",\n\t\"            uuid: 'Compendium.pf2e.classfeatures.Item.QEtgbY8N2V4wTbsI', // Implement Paragon\",\n\t\"            condition: createChildCondition('paragon'),\",\n\t\"        },\",\n\t\"    ],\",\n\t\"    prepare: ({ utils, actor, children }) => {\",\n\t\"        const skillNames = utils.skillNames\",\n\t\"        const actorLevel = actor.level\",\n\t\"        const actorSkills = /** @type {Record<SkillLongForm, { rank: ZeroToFour }>} */ (actor.skills)\",\n\t\"\",\n\t\"        /** @type {TomeCustom} */\",\n\t\"        const custom = {\",\n\t\"            first: { options: [], rank: 1 },\",\n\t\"            second: { options: [], rank: 1 },\",\n\t\"        }\",\n\t\"\",\n\t\"        // Implement Paragon\",\n\t\"        if (children.paragon) {\",\n\t\"            const skills = skillNames.filter(x => actorSkills[x].rank < 4)\",\n\t\"            custom.first = { rank: 4, options: skills }\",\n\t\"            custom.second = { rank: 4, options: skills }\",\n\t\"        }\",\n\t\"        // Intense Implement or Second Adept or Implement Adept\",\n\t\"        else if (children.intense || children.adept || children.second) {\",\n\t\"            const masters = skillNames.filter(x => actorSkills[x].rank < 3)\",\n\t\"\",\n\t\"            if (actorLevel >= 9) {\",\n\t\"                custom.first = { rank: 3, options: masters }\",\n\t\"                custom.second = { rank: 3, options: masters }\",\n\t\"            } else {\",\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\n\t\"                custom.first = { rank: 2, options: experts }\",\n\t\"                custom.second = { rank: 3, options: masters }\",\n\t\"            }\",\n\t\"        }\",\n\t\"        // Tome\",\n\t\"        else {\",\n\t\"            if (actorLevel >= 5) {\",\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\n\t\"                custom.first = { rank: 2, options: experts }\",\n\t\"                custom.second = { rank: 2, options: experts }\",\n\t\"            } else if (actorLevel >= 3) {\",\n\t\"                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\",\n\t\"                const experts = skillNames.filter(x => actorSkills[x].rank < 2)\",\n\t\"                custom.first = { rank: 1, options: trained }\",\n\t\"                custom.second = { rank: 2, options: experts }\",\n\t\"            } else {\",\n\t\"                const trained = skillNames.filter(x => actorSkills[x].rank < 1)\",\n\t\"                custom.first = { rank: 1, options: trained }\",\n\t\"                custom.second = { rank: 1, options: trained }\",\n\t\"            }\",\n\t\"        }\",\n\t\"\",\n\t\"        return custom\",\n\t\"    },\",\n\t\"    rows: ROWS.map(rowName => {\",\n\t\"        /** @type {DailyRowCombo<TomeGenerics>} */\",\n\t\"        const row = {\",\n\t\"            type: 'combo',\",\n\t\"            slug: rowName,\",\n\t\"            label: ({ custom, utils }) => utils.proficiencyLabel(custom[rowName].rank),\",\n\t\"            options: ({ custom }) => custom[rowName].options,\",\n\t\"            labelizer: ({ utils }) => utils.skillLabel,\",\n\t\"        }\",\n\t\"        return row\",\n\t\"    }),\",\n\t\"    process: ({ custom, fields, utils, messages, addItem, addRule }) => {\",\n\t\"        messages.addGroup('tome', 65)\",\n\t\"\",\n\t\"        for (const rowName of ROWS) {\",\n\t\"            const rank = custom[rowName].rank\",\n\t\"            let value = fields[rowName].value\",\n\t\"\",\n\t\"            if (fields[rowName].input === 'true') {\",\n\t\"                const source = utils.createLoreSource({ name: value, rank })\",\n\t\"                addItem(source)\",\n\t\"            } else {\",\n\t\"                const source = utils.createSkillRuleElement({ skill: value, value: rank })\",\n\t\"                value = utils.skillLabel(value)\",\n\t\"                addRule(source)\",\n\t\"            }\",\n\t\"\",\n\t\"            messages.add('tome', { label: utils.proficiencyLabel(rank), selected: value })\",\n\t\"        }\",\n\t\"    },\",\n\t\"}\",\n\t\"\",\n\t\"return thaumaturgeTome\",\n].join(\"\\n\");\n", "import {\n\tAsyncFunction,\n\terror,\n\tgetSetting,\n\tsetSetting,\n\tsubLocalize,\n\ttemplatePath,\n\twarn,\n} from \"module-api\";\nimport { createFeatDaily } from \"../data/feat\";\nimport { createLanguageDaily } from \"../data/language\";\nimport { createResistancelDaily } from \"../data/resistance\";\nimport { createTrainedLoreDaily, createTrainedSkillDaily } from \"../data/skill\";\nimport { createSpellDaily } from \"../data/spell\";\nimport { EXT_VERSION } from \"../main\";\nimport { flexibility } from \"./custom/flexibility\";\nimport { mind } from \"./custom/mind\";\nimport { savant } from \"./custom/savant\";\nimport { tome } from \"./custom/tome\";\n\nconst localize = subLocalize(\"customs\");\n\nconst TEMPLATES = [\n\t\"default\",\n\t\"trainedSkill\",\n\t\"trainedLore\",\n\t\"language\",\n\t\"resistance\",\n\t\"feat\",\n\t\"spell\",\n];\nconst EXAMPLES = [\"flexibility\", \"savant\", \"tome\", \"mind\"];\n\nexport class DailyCustoms extends FormApplication {\n\tstatic get defaultOptions() {\n\t\treturn mergeObject(FormApplication.defaultOptions, {\n\t\t\tid: \"pf2e-dailies-customs\",\n\t\t\ttitle: localize(\"title\"),\n\t\t\ttemplate: templatePath(\"customs\"),\n\t\t\tsubmitOnChange: false,\n\t\t\tsubmitOnClose: false,\n\t\t\tcloseOnSubmit: false,\n\t\t\tscrollY: [\".left .list\"],\n\t\t});\n\t}\n\n\tasync _updateObject(event, formData) {}\n\n\tasync getData(options) {\n\t\tconst customs = getSetting(\"customDailies\");\n\t\tconst code = customs.find(\n\t\t\t(custom) => custom.key === this._selectedDaily,\n\t\t)?.code;\n\t\tconst template = this._selectedTemplate;\n\t\tconst extension = game.modules.get(\"pf2e-dailies-ext\");\n\t\tconst newVersion =\n\t\t\textension?.active && isNewerVersion(EXT_VERSION, extension.version)\n\t\t\t\t? { version: EXT_VERSION }\n\t\t\t\t: \"\";\n\n\t\treturn mergeObject(super.getData(options), {\n\t\t\ti18n: localize.template,\n\t\t\ttemplate,\n\t\t\ttemplates: TEMPLATES,\n\t\t\tdaily: this._selectedDaily,\n\t\t\tcode,\n\t\t\tcustoms,\n\t\t\texamples: EXAMPLES,\n\t\t\tisExample: EXAMPLES.includes(template),\n\t\t\tmonaco: extension?.active,\n\t\t\tnewVersion,\n\t\t});\n\t}\n\n\tactivateListeners(html) {\n\t\tsuper.activateListeners(html);\n\n\t\tthis._monaco?.dispose();\n\n\t\tconst monaco = game.modules.get(\"pf2e-dailies-ext\")?.api;\n\t\tconst area = html.find(\".code\")[0];\n\t\tif (monaco && area) {\n\t\t\tconst element = html.find(\".monaco .placeholder\")[0];\n\t\t\tthis._monaco = monaco.createEditor(element, area.value);\n\t\t\tthis._monaco.onDidChangeModelContent(\n\t\t\t\tdebounce(() => {\n\t\t\t\t\tarea.value = this._monaco.getValue();\n\t\t\t\t}, 200),\n\t\t\t);\n\t\t} else {\n\t\t\tthis._monaco = null;\n\t\t}\n\n\t\thtml\n\t\t\t.find(\"[data-action=select-template]\")\n\t\t\t.on(\"change\", this.#onSelectTemplate.bind(this));\n\t\thtml\n\t\t\t.find(\"[data-action=create-template]\")\n\t\t\t.on(\"click\", this.#onCreateTemplate.bind(this));\n\t\thtml\n\t\t\t.find(\"[data-action=create-daily]\")\n\t\t\t.on(\"click\", this.#onCreateDaily.bind(this));\n\n\t\thtml.find(\".row[data-key]\").on(\"click\", this.#onSelectDaily.bind(this));\n\t\thtml\n\t\t\t.find(\"[data-action=delete-daily]\")\n\t\t\t.on(\"click\", this.#onDeleteDaily.bind(this));\n\n\t\thtml\n\t\t\t.find(\"[data-action=save-code]\")\n\t\t\t.on(\"click\", this.#onSaveCode.bind(this));\n\t}\n\n\tget code() {\n\t\tconst element = this.form.querySelector(\".window-content .code\");\n\t\treturn element?.value;\n\t}\n\n\tasync #onSaveCode(event) {\n\t\tevent.preventDefault();\n\n\t\tconst code = this.code;\n\t\tconst selected = this._selectedDaily;\n\n\t\tif (!selected || !code) return;\n\n\t\tconst customs = getSetting(\"customDailies\");\n\t\tconst stipped = customs.filter((custom) => custom.key !== selected);\n\n\t\ttry {\n\t\t\tconst fn = new AsyncFunction(code);\n\t\t\tconst daily = await fn();\n\t\t\tconst key = daily.key;\n\n\t\t\tif (typeof key !== \"string\") return warn(\"invalidKey\");\n\t\t\tif (stipped.find((custom) => custom.key === key))\n\t\t\t\treturn warn(\"duplicate\");\n\n\t\t\tconst index = customs.findIndex((custom) => custom.key === selected);\n\t\t\tif (index < 0) return;\n\n\t\t\tcustoms.splice(index, 1, { key, code });\n\t\t\tawait setSetting(\"customDailies\", customs);\n\n\t\t\tlocalize.info(\"saved\", { daily: key });\n\t\t\tthis._selectedDaily = key;\n\t\t\tthis.render();\n\t\t} catch (err) {\n\t\t\terror(\"error.unexpected\");\n\t\t\tconsole.error(err);\n\t\t\tconsole.error(\n\t\t\t\t`The error occured while testing the custom daily ${selected}`,\n\t\t\t);\n\t\t}\n\t}\n\n\tasync #onDeleteDaily(event) {\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tconst remove = await Dialog.confirm({\n\t\t\ttitle: localize(\"delete.title\"),\n\t\t\tcontent: localize(\"delete.content\"),\n\t\t});\n\n\t\tif (!remove) return;\n\n\t\tconst key = event.currentTarget.dataset.key;\n\t\tconst customs = getSetting(\"customDailies\").filter(\n\t\t\t(custom) => custom.key !== key,\n\t\t);\n\n\t\tawait setSetting(\"customDailies\", customs);\n\t\tlocalize.info(\"deleted\", { daily: key });\n\t\tthis.#onCreateDaily();\n\t}\n\n\t#onCreateDaily() {\n\t\tthis._selectedDaily = \"\";\n\t\tthis._selectedTemplate = \"default\";\n\t\tthis.render();\n\t}\n\n\t#onSelectDaily(event) {\n\t\tevent.preventDefault();\n\n\t\tthis._selectedDaily = event.currentTarget.dataset.key;\n\t\tthis.render();\n\t}\n\n\tasync #onCreateTemplate(event) {\n\t\tevent.preventDefault();\n\t\tconst template = this._selectedTemplate;\n\n\t\tconst customs = getSetting(\"customDailies\");\n\t\tconst formData = new FormData(this.form);\n\t\tconst data = Object.fromEntries(formData);\n\t\tconst isExample = EXAMPLES.includes(template);\n\t\tlet { key, uuid, label } = data;\n\n\t\tif (isExample) {\n\t\t\tkey = template;\n\t\t} else if (!key || !uuid) {\n\t\t\treturn localize.warn(\"template.noEmpty\");\n\t\t}\n\n\t\tif (customs.find((custom) => custom.key === key))\n\t\t\treturn warn(\"error.duplicate\");\n\n\t\tlet code;\n\n\t\tif (template === \"trainedSkill\") {\n\t\t\tconst daily = createTrainedSkillDaily(key, uuid, label);\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"SkillGenerics\");\n\t\t} else if (template === \"trainedLore\") {\n\t\t\tconst daily = createTrainedLoreDaily(key, uuid, label);\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"SkillGenerics\");\n\t\t} else if (template === \"language\") {\n\t\t\tconst daily = createLanguageDaily(key, uuid, label);\n\t\t\tcode = this.#stringifyDaily(\n\t\t\t\tdaily,\n\t\t\t\t{ key, uuid, label },\n\t\t\t\t\"LanguageGenerics\",\n\t\t\t);\n\t\t} else if (template === \"resistance\") {\n\t\t\tconst resistance = simplyfiable(data.resistance);\n\t\t\tconst resistances = splitList(data.resistances);\n\n\t\t\tif (resistance === \"\" || !resistances.length)\n\t\t\t\treturn localize.warn(\"template.noEmpty\");\n\t\t\tif (typeof resistance === \"number\" && resistance < 1)\n\t\t\t\treturn localize.warn(\"template.badResistance\");\n\n\t\t\tconst daily = createResistancelDaily(\n\t\t\t\tkey,\n\t\t\t\tuuid,\n\t\t\t\tresistances,\n\t\t\t\tresistance,\n\t\t\t\tlabel,\n\t\t\t);\n\t\t\tcode = this.#stringifyDaily(\n\t\t\t\tdaily,\n\t\t\t\t{ key, uuid, label, resistance, resistances },\n\t\t\t\t\"ResistanceGenerics\",\n\t\t\t);\n\t\t} else if (template === \"feat\") {\n\t\t\tconst traits = splitList(data.traits);\n\t\t\tconst filter = {\n\t\t\t\tcategory: splitList(data.category),\n\t\t\t\tlevel: simplyfiable(data.level) || { min: 0, max: 20 },\n\t\t\t};\n\t\t\tif (traits.length) filter.traits = traits;\n\t\t\tconst daily = createFeatDaily(key, uuid, filter, label);\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label }, \"FeatGenerics\");\n\t\t} else if (template === \"spell\") {\n\t\t\tconst level = Number(data.level) || undefined;\n\t\t\tconst traits = splitList(data.traits);\n\t\t\tlet levels = data.levels.split(\",\").map((x) => x.trim());\n\t\t\tif (levels.length === 1) {\n\t\t\t\tlevels = simplyfiable(levels[0]);\n\t\t\t} else {\n\t\t\t\tlevels = levels\n\t\t\t\t\t.filter((x) => x)\n\t\t\t\t\t.map((x) => Number(x))\n\t\t\t\t\t.filter((x) => !Number.isNaN(x));\n\t\t\t}\n\t\t\tconst filter = {\n\t\t\t\tcategory: splitList(data.category),\n\t\t\t\ttraditions: splitList(data.traditions),\n\t\t\t\tlevel: levels || [],\n\t\t\t};\n\t\t\tif (traits.length) filter.traits = traits;\n\t\t\tconst daily = createSpellDaily(key, uuid, filter, level, label);\n\t\t\tcode = this.#stringifyDaily(\n\t\t\t\tdaily,\n\t\t\t\t{ key, uuid, label, level },\n\t\t\t\t\"SpellGenerics\",\n\t\t\t);\n\t\t} else if (template === \"tome\") {\n\t\t\tcode = tome;\n\t\t} else if (template === \"flexibility\") {\n\t\t\tcode = flexibility;\n\t\t} else if (template === \"savant\") {\n\t\t\tcode = savant;\n\t\t} else if (template === \"mind\") {\n\t\t\tcode = mind;\n\t\t} else {\n\t\t\tconst daily = { key, label, item: { uuid }, rows: [], process: () => {} };\n\t\t\tcode = this.#stringifyDaily(daily, { key, uuid, label });\n\t\t}\n\n\t\tcustoms.push({ key, code });\n\t\tawait setSetting(\"customDailies\", customs);\n\n\t\tthis._selectedDaily = key;\n\t\tthis.render();\n\t}\n\n\t#stringifyDaily(daily, args, type) {\n\t\tconst placeholder = \"____PLACEHOLDER____\";\n\t\tconst fns = [];\n\n\t\tlet str = JSON.stringify(\n\t\t\tdaily,\n\t\t\t(_, value) => {\n\t\t\t\tif (typeof value === \"function\") {\n\t\t\t\t\tfns.push(value);\n\t\t\t\t\treturn placeholder;\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t},\n\t\t\t4,\n\t\t);\n\n\t\tstr = str.replace(new RegExp(`\"${placeholder}\"`, \"g\"), () => {\n\t\t\tconst fn = fns.shift()?.toString();\n\t\t\treturn fn?.replace(/( {5,})/g, (match) => match.slice(4)) ?? \"\";\n\t\t});\n\n\t\tlet strArgs = \"\";\n\t\tfor (const [key, value] of Object.entries(args)) {\n\t\t\tif (typeof value === \"string\") strArgs += `const ${key} = '${value}';\\n`;\n\t\t\telse if (typeof value === \"object\")\n\t\t\t\tstrArgs += `const ${key} = ${JSON.stringify(value)};\\n`;\n\t\t\telse strArgs += `const ${key} = ${value};\\n`;\n\t\t}\n\n\t\tconst typing = type ? `Daily<${type}>` : \"Daily\";\n\t\treturn `${strArgs}\\n/** @type {${typing}} */\\nconst daily = ${str};\\n\\nreturn daily;`;\n\t}\n\n\t#onSelectTemplate(event) {\n\t\tevent.preventDefault();\n\n\t\tthis._selectedDaily = \"\";\n\t\tthis._selectedTemplate = event.currentTarget.value;\n\n\t\tthis.render();\n\t}\n}\n\nfunction splitList(list) {\n\treturn list\n\t\t.split(\",\")\n\t\t.map((x) => x.trim())\n\t\t.filter((x) => x);\n}\n\nfunction simplyfiable(value) {\n\tif (typeof value === \"number\") return value;\n\n\tconst trimmed = value.trim();\n\tif (trimmed === \"level\" || trimmed === \"half\") return trimmed;\n\n\tconst numbered = Number(trimmed);\n\treturn Number.isNaN(numbered) ? \"\" : numbered;\n}\n", "import { getFlag, localize, updateSourceFlag } from \"module-api\";\nimport { canPrepDailies } from \"./actor\";\nimport { openDailiesInterface } from \"./api\";\n\nexport function preCreateChatMessage(message, data, context) {\n\tif (context.restForTheNight) {\n\t\tupdateSourceFlag(message, \"restForTheNight\", true);\n\t}\n}\n\nexport function renderChatMessage(message, html) {\n\tif (getFlag(message, \"restForTheNight\")) {\n\t\trenderRestMessage(message, html);\n\t}\n}\n\nfunction renderRestMessage(message, html) {\n\tconst actor = message.actor;\n\tif (!actor.isOwner) return;\n\n\tconst canPrep = canPrepDailies(actor);\n\tconst prepared = getFlag(message, \"prepared\");\n\tconst label = localize(\n\t\t`message.dailiesRequest.${\n\t\t\t!canPrep && prepared === undefined\n\t\t\t\t? \"cleaning\"\n\t\t\t\t: canPrep\n\t\t\t\t  ? \"button\"\n\t\t\t\t  : \"prepared\"\n\t\t}`,\n\t);\n\tconst btn = $(`<button type=\"button\">${label}</button>`);\n\n\thtml.find(\".message-content\").append(btn);\n\n\tif (canPrep) {\n\t\tbtn.on(\"click\", () => openDailiesInterface(actor, message));\n\t} else {\n\t\tbtn.prop(\"disabled\", true);\n\t}\n}\n", "import { createUpdateCollection } from \"./api\";\nimport { getDailyFromSourceId } from \"./dailies\";\nimport { isPF2eStavesActive } from \"./data/staves\";\nimport { MODULE, getFlag, getSourceId, setFlag, sluggify } from \"module-api\";\n\nexport async function restForTheNightAll(wrapped, ...args) {\n\tconst messages = await wrapped(...args);\n\tawait Promise.all(\n\t\tmessages.map(async (message) => {\n\t\t\tconst actor = message.actor;\n\t\t\tif (!actor?.isOwner) return;\n\n\t\t\tawait onRestForTheNight(actor);\n\t\t\tawait setFlag(actor, \"rested\", true);\n\t\t\tawait setFlag(message, \"prepared\", false);\n\t\t}),\n\t);\n\treturn messages;\n}\n\nasync function onRestForTheNight(actor) {\n\tconst removeItems = [];\n\tconst [updateItems, updateItem] = createUpdateCollection();\n\tconst pf2eStavesActive = isPF2eStavesActive();\n\n\tfor (const item of actor.items) {\n\t\tif (getFlag(item, \"temporary\")) {\n\t\t\tremoveItems.push(item.id);\n\n\t\t\t// we remove the itemGrants flag from the parent feat\n\t\t\tif (item.isOfType(\"feat\")) {\n\t\t\t\tconst parentId = getFlag(item, \"grantedBy\");\n\t\t\t\tif (parentId) {\n\t\t\t\t\tconst slug = sluggify(item.name, { camel: \"dromedary\" });\n\t\t\t\t\tconst path = `flags.pf2e.itemGrants.-=${slug}`;\n\t\t\t\t\tupdateItem({ _id: parentId, [path]: true });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// we don't need to do more work because the item is being deleted\n\t\t\tcontinue;\n\t\t}\n\n\t\t// we remove the spellcasting entries from pf2e staves\n\t\tif (\n\t\t\t!pf2eStavesActive &&\n\t\t\titem.isOfType(\"spellcastingEntry\") &&\n\t\t\titem.system.prepared.value === \"charge\"\n\t\t) {\n\t\t\tremoveItems.push(item.id);\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst sourceId = getSourceId(item);\n\n\t\t// We run the daily rest function if it exists\n\t\tif (sourceId) {\n\t\t\tconst daily = getDailyFromSourceId(sourceId);\n\t\t\tif (daily?.rest) {\n\t\t\t\tawait daily.rest({ item, sourceId, updateItem, actor });\n\t\t\t}\n\t\t}\n\n\t\t// we clean temporary rule elements\n\t\tconst rules = deepClone(item._source.system.rules);\n\t\tlet modifiedRules = false;\n\t\tfor (let i = rules.length - 1; i >= 0; i--) {\n\t\t\tif (MODULE.id in rules[i]) {\n\t\t\t\trules.splice(i, 1);\n\t\t\t\tmodifiedRules = true;\n\t\t\t}\n\t\t}\n\t\tif (modifiedRules) updateItem({ _id: item.id, \"system.rules\": rules });\n\t}\n\n\tif (updateItems.size) {\n\t\tawait actor.updateEmbeddedDocuments(\"Item\", updateItems.contents);\n\t}\n\n\tif (removeItems.length) {\n\t\tawait actor.deleteEmbeddedDocuments(\"Item\", removeItems);\n\t}\n}\n", "import {\n\tgetModule,\n\tregisterModule,\n\tregisterSetting,\n\tregisterSettingMenu,\n\tregisterWrapper,\n\twarn,\n} from \"module-api\";\nimport { performDailyCrafting, renderCharacterSheetPF2e } from \"./actor\";\nimport { openDailiesInterface, utils } from \"./api\";\nimport { DailyCustoms } from \"./apps/custom\";\nimport { preCreateChatMessage, renderChatMessage } from \"./chat\";\nimport {\n\tBUILTINS_DAILIES,\n\tCUSTOM_DAILIES,\n\tUNIQUE_DAILY_KEYS,\n\tcheckCustomDaily,\n\tparseCustomDailies,\n\tprepareAllDailies,\n\tprepareDailies,\n} from \"./dailies\";\nimport {\n\tDEFAULT_REGEX_RANKS,\n\tgetSpellcastingEntryStaffData,\n\tgetSpellcastingEntryStaffFlags,\n\tisPF2eStavesActive,\n\tupdateEntryCharges,\n} from \"./data/staves\";\nimport { restForTheNightAll } from \"./rest\";\nimport { onSpellcastingEntryCast } from \"./spellcasting\";\n\nregisterModule(\"pf2e-dailies\");\n\nexport const EXT_VERSION = \"1.3.0\";\n\nconst SPELLCASTING_ENTRY_CAST =\n\t\"CONFIG.PF2E.Item.documentClasses.spellcastingEntry.prototype.cast\";\nconst DAILY_CRAFTING =\n\t\"CONFIG.PF2E.Actor.documentClasses.character.prototype.performDailyCrafting\";\nconst REST_FOR_THE_NIGHT = \"game.pf2e.actions.restForTheNight\";\n\nHooks.once(\"setup\", () => {\n\tregisterSetting({\n\t\tname: \"customDailies\",\n\t\ttype: Array,\n\t\tdefault: [],\n\t\tconfig: false,\n\t\tonChange: parseCustomDailies,\n\t});\n\n\tregisterSetting({\n\t\tname: \"familiar\",\n\t\ttype: String,\n\t\tdefault: \"\",\n\t});\n\n\tregisterSetting({\n\t\tname: \"staff-regex\",\n\t\ttype: String,\n\t\tdefault: DEFAULT_REGEX_RANKS,\n\t});\n\n\tregisterSetting({\n\t\tname: \"members\",\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t\tscope: \"client\",\n\t});\n\n\tregisterSetting({\n\t\tname: \"staff-sort\",\n\t\ttype: String,\n\t\tdefault: \"top\",\n\t\tchoices: [\"top\", \"bottom\"],\n\t\tscope: \"client\",\n\t});\n\n\tregisterSetting({\n\t\tname: \"filters\",\n\t\ttype: String,\n\t\tdefault: \"\",\n\t\tscope: \"client\",\n\t\tonChange: prepareAllDailies,\n\t});\n\n\tregisterSettingMenu({\n\t\tname: \"customs\",\n\t\ttype: DailyCustoms,\n\t});\n\n\tgetModule().api = {\n\t\topenDailiesInterface: (actor) => openDailiesInterface(actor),\n\t\tgetBuiltinDailies: () => deepClone(BUILTINS_DAILIES),\n\t\tgetCustomDailies: () => deepClone(CUSTOM_DAILIES),\n\t\tgetBuiltinDailyKeys: () =>\n\t\t\t[\n\t\t\t\tUNIQUE_DAILY_KEYS.map((k) => `dailies.${k}`),\n\t\t\t\tBUILTINS_DAILIES.map((d) => `dailies.${d.key}`),\n\t\t\t].flat(),\n\t\tgetBuiltinDailyKey: (uuid) => {\n\t\t\tconst daily = BUILTINS_DAILIES.find(\n\t\t\t\t(d) => d.item.uuid === uuid || d.children?.some((c) => c.uuid === uuid),\n\t\t\t);\n\t\t\tif (!daily) return;\n\t\t\treturn `dailies.${daily.key}`;\n\t\t},\n\t\tprepareDailies,\n\t\tcheckCustomDaily,\n\t\tgetUtils: () => deepClone(utils),\n\t\tgetSpellcastingEntryStaffFlags,\n\t\tgetSpellcastingEntryStaffData,\n\t\tupdateEntryCharges,\n\t};\n\n\tif (!isPF2eStavesActive()) {\n\t\tCONFIG.PF2E.preparationType.charge = \"Charge\";\n\t\tregisterWrapper(SPELLCASTING_ENTRY_CAST, onSpellcastingEntryCast, \"MIXED\");\n\t}\n});\n\nHooks.once(\"ready\", async () => {\n\tif (isPF2eStavesActive()) {\n\t\twarn(\"staves.conflict\", true);\n\t}\n\n\tawait prepareAllDailies();\n\n\tif (!game.modules.get(\"lib-wrapper\")?.active && game.user.isGM) {\n\t\twarn(\"error.noLibwrapper\", true);\n\t\treturn;\n\t}\n\n\tregisterWrapper(DAILY_CRAFTING, performDailyCrafting, \"OVERRIDE\");\n\n\tregisterWrapper(REST_FOR_THE_NIGHT, restForTheNightAll);\n});\n\nHooks.on(\"renderCharacterSheetPF2e\", renderCharacterSheetPF2e);\n\nHooks.on(\"preCreateChatMessage\", preCreateChatMessage);\nHooks.on(\"renderChatMessage\", renderChatMessage);\n"],
  "mappings": "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,EAAKC,EAAMC,EAAQC,EAAO,CAwBzD,MAvBc,CACb,IAAAH,EACA,MAAAG,EACA,KAAM,CACL,KAAAF,CACD,EACA,KAAM,CACL,CACC,KAAM,OACN,KAAM,OACN,OAAQ,CACP,KAAM,OACN,OAAQC,GAAU,CAAC,CACpB,CACD,CACD,EACA,QAAS,MAAO,CAAE,MAAAE,EAAO,OAAAC,EAAQ,QAAAC,EAAS,SAAAC,CAAS,IAAM,CACxD,IAAMN,EAAOI,EAAO,KAAK,KACnBG,EAAS,MAAMJ,EAAM,iBAAiBH,CAAI,EAChDK,EAAQE,CAAM,EACdD,EAAS,IAAI,QAAS,CAAE,KAAAN,CAAK,CAAC,CAC/B,CACD,CAED,CAzBgBQ,EAAAV,GAAA,mBCAT,IAAMW,GAAc,CAC1B,8DACA,gDACA,+EACA,GACA,MACA,kCACA,2BACA,uCACA,MACA,2CACA,uDACA,oBACA,wBACA,uCACA,gBACA,oBACA,4BACA,wBACA,uCACA,4BACA,2CACA,qBACA,yBACA,iBACA,aACA,QACA,8CACA,iBACA,IACA,GACA,4CACA,8BACA,0BACA,cACA,6FACA,SACA,kBACA,YACA,gCACA,mGACA,aACA,SACA,cACA,0CACA,iDACA,SACA,2EACA,+CACA,4DACA,0BACA,0CACA,GACA,mCACA,gDACA,gEACA,iDACA,8CACA,YACA,SACA,IACA,GACA,0BACD,EAAE,KAAK;AAAA,CAAI,EC/DJ,IAAMC,GAAO,CACnB,gFACA,yEACA,0DACA,GACA,qFACA,GACA,8BACA,iFACA,wEACA,+DACA,wEACA,IACA,GACA,sEACA,yBACA,yBACA,2BACA,IACA,GACA,6EACA,GACA,yDACA,GACA,8FACA,GACA,iCACA,kBACA,mBACA,0BACA,2BACA,wBACA,sBACA,sBACA,2BACA,cACA,gBACA,IACA,GACA,qCACA,sBACA,wBACA,cACA,4FACA,SACA,kBACA,YACA,8BACA,qDACA,aACA,YACA,8BACA,iGACA,aACA,YACA,6BACA,8FACA,aACA,YACA,gCACA,uGACA,aACA,SACA,cACA,YACA,6BACA,6BACA,8CACA,mBACA,mDACA,aACA,YACA,8BACA,6BACA,mCACA,4CACA,2DACA,0CACA,aACA,YACA,8BACA,8BACA,qCACA,sCACA,gEACA,oDACA,aACA,YACA,8BACA,6BACA,uCACA,qCACA,wEACA,wEACA,8FACA,aACA,YACA,8BACA,gCACA,uCACA,6CACA,wEACA,sDACA,8FACA,aACA,SACA,8EACA,yCACA,8BACA,GACA,yCACA,GACA,0EACA,wHACA,oHACA,GACA,iCACA,mDACA,kFACA,oEACA,4EACA,0CACA,8DACA,8CACA,wCACA,iBACA,YACA,GACA,4FACA,gEACA,qEACA,4DACA,2CACA,GACA,sEACA,6HACA,8CACA,0EACA,wCACA,0CACA,qBACA,gBACA,YACA,SACA,kDACA,oDACA,GACA,+DACA,0EACA,sEACA,GACA,6DACA,0BACA,iHACA,YACA,SACA,IACA,GACA,oBACA,8IACA,kHACA,uEACA,iHACA,IACA,GACA,sDACA,kCACA,oBACA,iJACA,GACA,4DACA,8FACA,QACA,GACA,wCACA,YACA,oCACA,uBACA,yBACA,yBACA,2DACA,uCACA,kDACA,qBACA,wBACA,4DACA,uCACA,4CACA,qBACA,iBACA,iCACA,aACA,cACA,oDACA,QACA,GACA,oBACA,gEACA,sBACA,QACA,GACA,mBACA,IACA,GACA,+BACA,0CACA,+DACA,wBACA,yEACA,iBACA,QACA,GACA,oEACA,qBACA,mFACA,iBACA,QACA,GACA,iDACA,GACA,0DACA,uEACA,6DACA,GACA,oBACA,IACA,GACA,kBACD,EAAE,KAAK;AAAA,CAAI,ECpOJ,IAAMC,GAAS,CACrB,sEACA,0FACA,iEACA,GACA,6EACA,GACA,MACA,kCACA,uCACA,MACA,+DACA,sBACA,2BACA,GACA,wDACA,8EACA,GACA,2CACA,qCACA,sCACA,8EACA,YACA,GACA,+FACA,QACA,GACA,8DACA,IACA,GACA,uCACA,yBACA,qBACA,cACA,oFACA,SACA,gCACA,6FACA,mBACA,8DACA,+DACA,2FACA,4FACA,YACA,SACA,kCACA,sDACA,wBACA,4BACA,6BACA,gFACA,wBACA,iCACA,6CACA,2CACA,8CACA,oDACA,sBACA,iBACA,oEACA,YACA,qBACA,UACA,yEACA,uDACA,sCACA,2GACA,8BACA,oEACA,YACA,SACA,IACA,GACA,qBACD,EAAE,KAAK;AAAA,CAAI,EC1EJ,IAAMC,GAAO,CACnB,gDACA,yEACA,uFACA,kEACA,GACA,0DACA,GACA,6CACA,0CACA,+DACA,+CACA,wEACA,QACA,uBACA,IACA,GACA,qCACA,4BACA,mBACA,cACA,+EACA,SACA,kBACA,YACA,6BACA,8FACA,wDACA,aACA,YACA,8BACA,2FACA,wDACA,aACA,YACA,+BACA,4FACA,aACA,YACA,+BACA,gGACA,0DACA,aACA,SACA,iDACA,8CACA,yCACA,wGACA,GACA,oCACA,2BACA,+CACA,gDACA,YACA,GACA,+BACA,kCACA,6EACA,0DACA,2DACA,YACA,kEACA,4EACA,8EACA,GACA,qCACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,kBACA,iBACA,qCACA,kFACA,+DACA,gEACA,4CACA,kFACA,kFACA,+DACA,gEACA,uBACA,kFACA,+DACA,gEACA,gBACA,YACA,GACA,wBACA,SACA,kCACA,qDACA,wBACA,6BACA,6BACA,0FACA,gEACA,0DACA,YACA,qBACA,UACA,4EACA,wCACA,GACA,wCACA,gDACA,gDACA,GACA,sDACA,+EACA,kCACA,uBACA,6FACA,kDACA,kCACA,gBACA,GACA,6FACA,YACA,SACA,IACA,GACA,wBACD,EAAE,KAAK;AAAA,CAAI,EC3GX,IAAMC,EAAWC,EAAY,SAAS,EAEhCC,GAAY,CACjB,UACA,eACA,cACA,WACA,aACA,OACA,OACD,EACMC,GAAW,CAAC,cAAe,SAAU,OAAQ,MAAM,EAE5CC,GAAN,cAA2B,eAAgB,CAjClD,MAiCkD,CAAAC,EAAA,qBACjD,WAAW,gBAAiB,CAC3B,OAAO,YAAY,gBAAgB,eAAgB,CAClD,GAAI,uBACJ,MAAOL,EAAS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",
  "names": ["getSourceId", "doc", "__name", "includesSourceId", "list", "sourceId", "getSourceIdCondition", "item", "arrayToObject", "arr", "fn", "key", "obj", "entry", "k", "__name", "sequenceArray", "start", "end", "levels", "i", "__name", "AsyncFunction", "isInstanceOf", "obj", "name", "cursor", "__name", "joinStr", "separator", "path", "x", "__name", "capitalize", "str", "flagPath", "path", "MODULE", "joinStr", "__name", "getFlag", "doc", "setFlag", "doc", "args", "value", "MODULE", "__name", "updateSourceFlag", "doc", "args", "value", "flagPath", "__name", "render", "args", "data", "path", "templatePath", "__name", "MODULE", "joinStr", "getItems", "actor", "itemTypes", "types", "type", "__name", "getItemWithSourceId", "actor", "sourceId", "itemTypes", "getItems", "getSourceIdCondition", "__name", "registerWrapper", "path", "callback", "type", "MODULE", "__name", "localize", "args", "MODULE", "data", "joinStr", "__name", "hasLocalization", "keys", "localizePath", "path", "MODULE", "__name", "subLocalize", "subKey", "fn", "args", "localize", "str", "arg1", "arg2", "warn", "info", "error", "key", "hasLocalization", "hash", "MODULE_ID", "MODULE", "str", "registerModule", "id", "__name", "getModule", "notify", "str", "arg1", "arg2", "arg3", "type", "data", "permanent", "localize", "__name", "warn", "info", "error", "registerSetting", "options", "arrayToObject", "choice", "settingPath", "MODULE", "__name", "registerSettingMenu", "path", "getSetting", "setting", "setSetting", "setting", "value", "MODULE", "__name", "__spreadArray", "to", "from", "pack", "i", "l", "ar", "purry", "fn", "args", "lazy", "diff", "arrayArgs", "ret", "__name", "data", "_reduceLazy", "array", "lazy", "indexed", "newArray", "index", "item", "result", "__name", "uniq", "purry", "_uniq", "__name", "array", "_reduceLazy", "lazy", "set", "value", "ordinalString", "value", "pluralRules", "suffix", "__name", "ErrorPF2e", "message", "sluggify", "text", "options", "__name", "setHasElement", "set", "value", "isObject", "value", "__name", "createFancyLink", "docOrUuid", "async", "label", "link", "__name", "dcAdjustments", "dcByLevel", "calculateDC", "level", "pwol", "rarity", "dc", "dcByLevel", "adjustDCByRarity", "__name", "adjustDCByRarity", "dc", "rarity", "adjustDC", "rarityToDCAdjustment", "__name", "adjustment", "dcAdjustments", "MAGIC_TRADITIONS", "IdentifyItemPopup", "__name", "getItemIdentificationDCs", "item", "$html", "html", "updateButton", "identifiedName", "dcs", "action", "content", "_event", "formData", "status", "pwol", "notMatchingTraditionModifier", "baseDC", "calculateDC", "rarity", "getDcRarity", "dc", "adjustDCByRarity", "getIdentifyMagicDCs", "result", "traditions", "getMagicTraditions", "key", "MAGIC_TRADITIONS", "traits", "t", "setHasElement", "MoveLootPopup", "__name", "object", "options", "callback", "prompt", "buttonLabel", "_event", "formData", "itemIsOfType", "item", "types", "t", "setHasElement", "__name", "PredicatePF2e", "_PredicatePF2e", "__name", "statements", "s", "isStatement", "predicate", "options", "domain", "#isTrue", "statement", "isBinaryOp", "#testBinaryOp", "isCompound", "#testCompound", "operator", "left", "right", "domainArray", "getValues", "operand", "maybeNumber", "pattern", "values", "v", "leftValues", "rightValues", "l", "r", "subProp", "isAtomic", "binaryOperators", "isObject", "entries", "operands", "isAnd", "isOr", "isNand", "isXor", "isNor", "isNot", "isIf", "CANTRIP_DECK_ID", "scrollCompendiumIds", "SPELL_CONSUMABLE_NAME_TEMPLATES", "wandCompendiumIds", "createConsumableFromSpell", "spell", "type", "heightenedLevel", "mystified", "temp", "itemImg", "itemName", "pack", "p", "itemId", "getIdForSpellConsumable", "consumable", "isInstanceOf", "ErrorPF2e", "consumableSource", "traits", "uniq", "t", "setHasElement", "MAGIC_TRADITIONS", "getNameForSpellConsumable", "description", "paragraphElement", "containerElement", "hrElement", "__name", "CANTRIP_DECK_ID", "scrollCompendiumIds", "wandCompendiumIds", "spellName", "templateId", "SPELL_CONSUMABLE_NAME_TEMPLATES", "createSpellDaily", "key", "uuid", "filter", "level", "label", "addSpell", "utils", "fields", "messages", "source", "spellLevel", "__name", "tricksterAce", "daily", "createSpellDaily", "row", "item", "castTime", "localizePath", "__name", "bladeAlly", "localize", "actor", "weapon", "children", "runes", "antipaladin", "evil", "good", "liberator", "master", "paladin", "spirit", "tyrant", "value", "localizeRune", "fields", "addRule", "messages", "weaponId", "rune", "name", "slugged", "match", "__name", "ICON", "ceremonialKnife", "actor", "weapon", "utils", "calculateRank", "fields", "item", "addItem", "messages", "uuid", "level", "source", "__name", "rows", "createScrollChain", "key", "uuids", "label", "createRow", "utils", "fields", "addItem", "messages", "field", "uuid", "level", "source", "__name", "slug", "minActorLevel", "child", "row", "actor", "combatFlexibility", "createRow", "utils", "fields", "addFeat", "messages", "children", "uuid", "source", "slug", "level", "child", "row", "__name", "createLanguageDaily", "key", "uuid", "label", "actor", "utils", "actorLanguages", "x", "addRule", "fields", "messages", "value", "source", "__name", "createTrainedSkillDaily", "key", "uuid", "label", "createComboSkillRow", "api", "processComboSkill", "__name", "fields", "addItem", "addRule", "utils", "messages", "removeRule", "field", "rank", "parent", "rule", "suboption", "value", "source", "slug", "extras", "actor", "actorSkills", "x", "createTrainedLoreDaily", "longevities", "createComboSkillRow", "item", "children", "api", "feats", "field", "rank", "processComboSkill", "MIND_WEAPON_UUID", "MALLEABLE_MENTAL_FORGE_UUID", "WEAPON_BASE_TYPES", "WEAPON_GROUPS", "WEAPON_TRAITS", "WEAPON_DAMAGE_TYPES", "WEAPON_RUNES", "WEAPON_GREATER_RUNES", "mindSmith", "localize", "fix", "utils", "nb", "children", "updateItem", "fields", "messages", "item", "weapon", "selected", "traits", "child", "freeSlot", "MODULE", "sourceId", "actor", "getItemWithSourceId", "trait", "runeSlot", "getFlag", "subLocalize", "content", "key", "label", "onWeaponSelected", "__name", "html", "selection", "stats", "RATION_UUID", "getRations", "actor", "getItemWithSourceId", "__name", "rations", "value", "max", "remaining", "last", "localize", "fields", "updateItem", "messages", "quantity", "name", "createFancyLink", "message", "createResistancelDaily", "key", "uuid", "resistances", "resistance", "label", "random", "utils", "fields", "actor", "addRule", "messages", "type", "value", "rule", "__name", "effectUUID", "rootMagic", "actor", "utils", "a", "fields", "messages", "actorId", "DEFAULT_REGEX_RANKS", "KINETIC_ACTIVATION", "isPF2eStavesActive", "__name", "getSpellcastingEntryStaffFlags", "entry", "data", "getFlag", "getSpellcastingEntryStaffData", "staffData", "getMaxSlotRankForStaves", "spontaneousCharges", "actor", "charges", "slot", "cost", "updateEntryCharges", "value", "updatedValue", "setFlag", "getStaves", "type", "trait", "item", "traits", "maxCharges", "actorCharges", "entries", "getValidSpellcastingList", "entryMaxCharges", "getSpellcastingEntryMaxSlotRank", "getItemWithSourceId", "getBestSpellcastingEntryForStaves", "bestEntry", "getBestSpellcastingEntry", "bestMod", "classDC", "c", "classMod", "getPreparedSpellcastingEntriesForStaves", "entryGroups", "entryId", "isFlexible", "rank", "index", "id", "prepared", "expended", "spell", "a", "b", "onSpellcastingEntryCast", "wrapped", "args", "spell", "rank", "staffChargeEntryId", "staffFlags", "getSpellcastingEntryStaffFlags", "actor", "warn", "castRank", "updates", "spontaneousEntries", "entry", "staffChargeEntryIndex", "useSpontaneous", "entryRankValue", "__name", "content", "localize", "utils", "entries", "index", "render", "key", "hash", "html", "value", "current", "MODULE", "getValidSpellcastingList", "itemOnly", "innate", "focus", "getFlag", "getSpellcastingEntryMaxSlotRank", "maxSlot", "levelMaxSlot", "i", "getBestSpellcastingEntry", "actor", "entries", "getValidSpellcastingList", "bestMod", "bestEntries", "entry", "mod", "returnedEntry", "__name", "ability", "tradition", "proficiency", "classAttr", "classAttrEntries", "bestCount", "bestEntry", "entryCount", "getPreparedCount", "slot", "spell", "getSpellcastingEntriesSortBounds", "min", "max", "scrollSavant", "actor", "maxSlot", "maxTradition", "getSpellcastingTraditionDetails", "rowName", "custom", "utils", "fields", "addItem", "messages", "field", "uuid", "source", "tradition", "entries", "getValidSpellcastingList", "entry", "entryMaxSlot", "getSpellcastingEntryMaxSlotRank", "__name", "spellshaping", "actor", "utils", "fields", "addFeat", "messages", "uuid", "source", "thaumaturgeTome", "createChildCondition", "utils", "actor", "children", "skillNames", "actorLevel", "actorSkills", "custom", "skills", "x", "masters", "experts", "trained", "rowName", "fields", "messages", "addItem", "addRule", "rank", "value", "source", "option", "item", "itemId", "__name", "DEPRECATED_CUSTOM_DAILIES", "UNIQUE_DAILY_KEYS", "BUILTINS_DAILIES", "thaumaturgeTome", "longevities", "createTrainedSkillDaily", "createTrainedLoreDaily", "createLanguageDaily", "createResistancelDaily", "spellshaping", "combatFlexibility", "scrollSavant", "createScrollChain", "tricksterAce", "mindSmith", "bladeAlly", "rootMagic", "ceremonialKnife", "rations", "DAILY_FILTERS", "BUILTINS_UUIDS", "UUIDS", "prepareDailies", "dailies", "prefix", "uuids", "original", "daily", "keyWithPrefix", "uuid", "condition", "err", "error", "__name", "prepareBaseDailies", "CUSTOM_DAILIES", "parseCustomDailies", "customs", "getSetting", "key", "code", "AsyncFunction", "checkCustomDaily", "CUSTOM_UUIDS", "prepareDailyFilters", "filters", "s", "prepareAllDailies", "warning", "warn", "getDailies", "actor", "item", "sourceId", "getSourceId", "entry", "index", "utils", "getDailyFromSourceId", "getFamiliarPack", "__name", "familiarUUID", "id", "templateOrders", "getTemplate", "children", "key", "item", "prepare", "label", "rows", "actor", "getFlag", "slug", "prepareArgs", "utils", "custom", "dailyArgs", "groupLabel", "getProcessedValue", "labeled", "hasLocalization", "localize", "child", "template", "row", "type", "childPredicate", "condition", "save", "unique", "order", "PredicatePF2e", "savedRow", "rowLabel", "value", "rowTemplate", "isComboRow", "isSelectRow", "isRandomRow", "tmp", "labelize", "capitalize", "isDropRow", "isAlerRow", "__name", "obj", "args", "getSimplifiableValue", "actor", "value", "fallback", "numbered", "__name", "parseFilter", "filter", "parseFeatFilter", "parseSpellFilter", "checkFilter", "selected", "checkbox", "x", "setTraits", "searchTraits", "dataTraits", "traits", "getFilterTraits", "search", "data", "level", "getSpellFilterLevel", "getFeatFilterLevel", "simplified", "sequenceArray", "localize", "subLocalize", "onDropFeat", "item", "target", "filter", "search", "drop", "localizeAll", "traits", "getFilterTraits", "testFn", "trait", "translatedSkills", "utils", "prerequisites", "prerequisite", "skill", "sluggify", "level", "getFeatFilterLevel", "itemLevel", "args", "result", "onDropItem", "__name", "onDropSpell", "categories", "x", "tradition", "getSpellFilterLevel", "config", "list", "key", "processData", "actor", "dailies", "fields", "getFields", "addItems", "addRules", "updateItems", "updateItem", "createUpdateCollection", "flags", "msg", "subLocalize", "addedSpells", "chatContent", "getRules", "__name", "item", "id", "existing", "rules", "i", "MODULE", "messages", "rawMessages", "messageObj", "group", "options", "order", "label", "message", "familiar", "pack", "getFamiliarPack", "abilities", "ids", "field", "value", "isCustom", "source", "familiarUUID", "staffField", "staffID", "staff", "makeshift", "maxStaffCharges", "getMaxSlotRankForStaves", "uuids", "ranks", "getSetting", "DEFAULT_REGEX_RANKS", "ranksRegex", "rankMatch", "rankStr", "rank", "uuidRegex", "uuidMatch", "uuid", "overcharge", "expendedSpells", "expendedSlots", "flexibleLabel", "localize", "emptyLabel", "slotsUpdates", "data", "entryId", "entry", "slot", "prepared", "preparedSlot", "spell", "currentValue", "bestEntry", "getBestSpellcastingEntryForStaves", "ability", "tradition", "proficiency", "sort", "min", "max", "getSpellcastingEntriesSortBounds", "entrySource", "utils", "name", "rankLabel", "key", "process", "dailyArgs", "signature", "parent", "rule", "parentItem", "parentId", "level", "err", "error", "rowFields", "rows", "row", "type", "input", "flag", "items", "getFlag", "path", "sluggify", "entryType", "spells", "a", "b", "parseMessages", "messageList", "selected", "random", "hasLocalization", "createFancyLink", "elements", "element", "select", "localize", "subLocalize", "STAFF_NEXUS", "DailiesInterface", "__name", "actor", "options", "message", "templatePath", "templates", "getDailies", "DAILY_FILTERS", "type", "nbAbilities", "pack", "getFamiliarPack", "flags", "getFlag", "template", "_id", "name", "customUUIDS", "getSetting", "uuid", "item", "a", "b", "index", "rows", "data", "isPF2eStavesActive", "staves", "getStaves", "getMaxSlotRankForStaves", "staff", "staffIdRow", "preparedEntries", "getPreparedSpellcastingEntriesForStaves", "flexibleLabel", "emptyLabel", "entry", "entryId", "spell", "unique", "utils", "slot", "rankLabel", "staffNexus", "getItemWithSourceId", "nbExpends", "i", "daily", "getTemplate", "error", "groups", "value", "placeholder", "msg", "key", "formattedKey", "c", "force", "_", "select", "html", "#onClear", "#onAccept", "#onCancel", "#onComboSelectChange", "#onComboInputChange", "#onSearch", "#onAlert", "uniqueSelects", "event", "#cleanUniqueSelects", "processedUniques", "uniqueTag", "selector", "target", "dataString", "filter", "#getfilterFromElement", "onDropItem", "onDropFeat", "onDropSpell", "#lock", "row", "args", "fixed", "#unlock", "element", "parsed", "parseFilter", "input", "x", "#validate", "warns", "emptyInputs", "alertInputs", "parent", "warning", "processData", "setFlag", "isTarget", "children", "getSiblings", "uniqueOptions", "child", "childIndex", "childOptions", "optionUniqueValue", "option", "optionExists", "maxIndex", "finalValue", "el", "siblings", "halfLevelString", "RUNE_PROPERTY_KEYS", "SKILLNAMES", "LANGUAGES", "utils", "skill", "value", "mode", "predicate", "rule", "name", "rank", "lowercase", "result", "key", "localized", "language", "resistance", "str", "capitalize", "type", "uuid", "source", "options", "createSpellConsumableSource", "ordinalString", "item", "option", "roll", "actor", "sequenceArray", "damage", "trait", "rune", "potency", "i", "property", "member", "types", "actorTypes", "memberIsActor", "actors", "getSetting", "p", "a", "level", "itemName", "itemImg", "spell", "createConsumableFromSpell", "__name", "openDailiesInterface", "character", "message", "token", "canPrepDailies", "DailiesInterface", "localize", "createUpdateCollection", "collection", "data", "id", "update", "performDailyCrafting", "entries", "e", "reagentCost", "sum", "entry", "reagentValue", "key", "formula", "itemSource", "itemIsOfType", "__name", "renderCharacterSheetPF2e", "sheet", "html", "actor", "canPrep", "canPrepDailies", "disabledClass", "tooltip", "localize", "icon", "el", "openDailiesInterface", "isPF2eStavesActive", "renderStavesEntries", "entryId", "staffData", "getSpellcastingEntryStaffData", "label", "charges", "input", "event", "onStaffChargesChange", "reset", "onStaffChargesReset", "spells", "spell", "cost", "getEntryDataFromEvent", "itemId", "updateEntryCharges", "getFlag", "createFeatDaily", "key", "uuid", "filter", "label", "utils", "fields", "addFeat", "messages", "source", "__name", "flexibility", "mind", "savant", "tome", "localize", "subLocalize", "TEMPLATES", "EXAMPLES", "DailyCustoms", "__name", "templatePath", "event", "formData", "options", "customs", "getSetting", "code", "custom", "template", "extension", "newVersion", "EXT_VERSION", "html", "monaco", "area", "element", "#onSelectTemplate", "#onCreateTemplate", "#onCreateDaily", "#onSelectDaily", "#onDeleteDaily", "#onSaveCode", "selected", "stipped", "key", "AsyncFunction", "warn", "index", "setSetting", "err", "error", "data", "isExample", "uuid", "label", "daily", "createTrainedSkillDaily", "#stringifyDaily", "createTrainedLoreDaily", "createLanguageDaily", "resistance", "simplyfiable", "resistances", "splitList", "createResistancelDaily", "traits", "filter", "createFeatDaily", "level", "levels", "x", "createSpellDaily", "tome", "flexibility", "savant", "mind", "args", "type", "placeholder", "fns", "str", "_", "value", "match", "strArgs", "typing", "list", "trimmed", "numbered", "preCreateChatMessage", "message", "data", "context", "updateSourceFlag", "__name", "renderChatMessage", "html", "getFlag", "renderRestMessage", "actor", "canPrep", "canPrepDailies", "prepared", "label", "localize", "btn", "openDailiesInterface", "restForTheNightAll", "wrapped", "args", "messages", "message", "actor", "onRestForTheNight", "setFlag", "__name", "removeItems", "updateItems", "updateItem", "createUpdateCollection", "pf2eStavesActive", "isPF2eStavesActive", "item", "getFlag", "parentId", "path", "sluggify", "sourceId", "getSourceId", "daily", "getDailyFromSourceId", "rules", "modifiedRules", "i", "MODULE", "registerModule", "EXT_VERSION", "SPELLCASTING_ENTRY_CAST", "DAILY_CRAFTING", "REST_FOR_THE_NIGHT", "registerSetting", "parseCustomDailies", "DEFAULT_REGEX_RANKS", "prepareAllDailies", "registerSettingMenu", "DailyCustoms", "getModule", "actor", "openDailiesInterface", "BUILTINS_DAILIES", "CUSTOM_DAILIES", "UNIQUE_DAILY_KEYS", "k", "d", "uuid", "daily", "c", "prepareDailies", "checkCustomDaily", "utils", "getSpellcastingEntryStaffFlags", "getSpellcastingEntryStaffData", "updateEntryCharges", "isPF2eStavesActive", "registerWrapper", "onSpellcastingEntryCast", "warn", "performDailyCrafting", "restForTheNightAll", "renderCharacterSheetPF2e", "preCreateChatMessage", "renderChatMessage"]
}
